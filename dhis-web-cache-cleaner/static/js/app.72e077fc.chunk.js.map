{"version":3,"file":"static/js/app.72e077fc.chunk.js","mappings":"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","sources":["D2App/locales/index.js","webpack://@dhis2/app-shell/./src/D2App/actions/Actions.module.css?41a6","D2App/actions/Actions.js","webpack://@dhis2/app-shell/./src/D2App/clearForm/ClearForm.module.css?6d7f","webpack://@dhis2/app-shell/./src/D2App/clearForm/FormSection.module.css?37a3","D2App/clearForm/FormSection.js","D2App/clearForm/ClearForm.js","D2App/indexedDb/dbExists.js","D2App/indexedDb/deleteDb.js","D2App/indexedDb/getCaptureAppUserDatabases.js","D2App/indexedDb/openDb.js","D2App/indexedDb/getKeyFromObjectStore.js","D2App/indexedDb/dhis2DatabaseNames.js","D2App/indexedDb/useClearableDatabaseKeys.js","D2App/indexedDb/getClearableDatabases.js","D2App/storage/clearStoragesByKey.js","D2App/storage/reservedStorageKeys.js","D2App/storage/useClearableStorageKeys.js","D2App/storage/getClearableKeys.js","webpack://@dhis2/app-shell/./src/D2App/views/Home.module.css?7ba5","D2App/views/Home/deleteValues.js","D2App/indexedDb/clearDatabasesByKey.js","D2App/views/Home.js","D2App/views/Home/formatDeleteValues.js","D2App/App.js"],"sourcesContent":["//------------------------------------------------------------------------------\n// <auto-generated>\n// This code was generated by d2-i18n-generate.\n//\n// Changes to this file may cause incorrect behavior and will be lost if\n// the code is regenerated.\n// </auto-generated>\n//------------------------------------------------------------------------------\nimport i18n from '@dhis2/d2-i18n';\nimport arTranslations from './ar/translations.json';\nimport ckbTranslations from './ckb/translations.json';\nimport csTranslations from './cs/translations.json';\nimport daTranslations from './da/translations.json';\nimport enTranslations from './en/translations.json';\nimport esTranslations from './es/translations.json';\nimport frTranslations from './fr/translations.json';\nimport idTranslations from './id/translations.json';\nimport kmTranslations from './km/translations.json';\nimport loTranslations from './lo/translations.json';\nimport myTranslations from './my/translations.json';\nimport nbTranslations from './nb/translations.json';\nimport nlTranslations from './nl/translations.json';\nimport prsTranslations from './prs/translations.json';\nimport psTranslations from './ps/translations.json';\nimport ptTranslations from './pt/translations.json';\nimport pt_BRTranslations from './pt_BR/translations.json';\nimport ruTranslations from './ru/translations.json';\nimport svTranslations from './sv/translations.json';\nimport tetTranslations from './tet/translations.json';\nimport tgTranslations from './tg/translations.json';\nimport ukTranslations from './uk/translations.json';\nimport urTranslations from './ur/translations.json';\nimport uzTranslations from './uz/translations.json';\nimport uz_LatnTranslations from './uz_Latn/translations.json';\nimport viTranslations from './vi/translations.json';\nimport zhTranslations from './zh/translations.json';\nimport zh_CNTranslations from './zh_CN/translations.json';\nconst namespace = 'default';\ni18n.addResources('ar', namespace, arTranslations);\ni18n.addResources('ckb', namespace, ckbTranslations);\ni18n.addResources('cs', namespace, csTranslations);\ni18n.addResources('da', namespace, daTranslations);\ni18n.addResources('en', namespace, enTranslations);\ni18n.addResources('es', namespace, esTranslations);\ni18n.addResources('fr', namespace, frTranslations);\ni18n.addResources('id', namespace, idTranslations);\ni18n.addResources('km', namespace, kmTranslations);\ni18n.addResources('lo', namespace, loTranslations);\ni18n.addResources('my', namespace, myTranslations);\ni18n.addResources('nb', namespace, nbTranslations);\ni18n.addResources('nl', namespace, nlTranslations);\ni18n.addResources('prs', namespace, prsTranslations);\ni18n.addResources('ps', namespace, psTranslations);\ni18n.addResources('pt', namespace, ptTranslations);\ni18n.addResources('pt_BR', namespace, pt_BRTranslations);\ni18n.addResources('ru', namespace, ruTranslations);\ni18n.addResources('sv', namespace, svTranslations);\ni18n.addResources('tet', namespace, tetTranslations);\ni18n.addResources('tg', namespace, tgTranslations);\ni18n.addResources('uk', namespace, ukTranslations);\ni18n.addResources('ur', namespace, urTranslations);\ni18n.addResources('uz', namespace, uzTranslations);\ni18n.addResources('uz_Latn', namespace, uz_LatnTranslations);\ni18n.addResources('vi', namespace, viTranslations);\ni18n.addResources('zh', namespace, zhTranslations);\ni18n.addResources('zh_CN', namespace, zh_CNTranslations);\nexport default i18n;","// extracted by mini-css-extract-plugin\nexport default {\"actions\":\"Actions_actions__kT1Ck\"};","import { ButtonStrip } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport styles from './Actions.module.css';\nexport const Actions = ({\n  children\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  className: styles.actions\n}, /*#__PURE__*/React.createElement(ButtonStrip, null, children));\nActions.propTypes = {\n  children: PropTypes.node\n};","// extracted by mini-css-extract-plugin\nexport default {\"actions\":\"ClearForm_actions__xH5Wk\",\"action\":\"ClearForm_action__EaCRv\",\"groupHeadline\":\"ClearForm_groupHeadline__CJ1tD\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"FormSection_container__hPwgY\",\"groupHeadline\":\"FormSection_groupHeadline__+J2rV\",\"empty\":\"FormSection_empty__DDbzs\"};","import { Button, FieldGroupFF, ReactFinalForm, CheckboxFieldFF } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Actions } from '../actions/Actions.js';\nimport styles from './FormSection.module.css';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FormSection = ({\n  deselectButtonLabel,\n  emptyMessage,\n  form,\n  headline,\n  selectButtonLabel,\n  storageKeys,\n  storageName\n}) => {\n  const storageDataTestName = storageName.toLowerCase();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    \"data-test\": `dhis2-cachecleaner-${storageDataTestName}`\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: styles.groupHeadline\n  }, headline), !storageKeys.length && /*#__PURE__*/React.createElement(\"p\", {\n    className: styles.empty,\n    \"data-test\": \"dhis2-cachecleaner-emptystoragemessage\"\n  }, emptyMessage), !!storageKeys.length && /*#__PURE__*/React.createElement(Actions, null, /*#__PURE__*/React.createElement(Button, {\n    secondary: true,\n    small: true,\n    onClick: () => form.change(storageName, storageKeys),\n    dataTest: `dhis2-cachecleaner-formsection-selectall`\n  }, selectButtonLabel), /*#__PURE__*/React.createElement(Button, {\n    secondary: true,\n    small: true,\n    onClick: () => form.change(storageName, []),\n    dataTest: `dhis2-cachecleaner-formsection-deselectall`\n  }, deselectButtonLabel)), /*#__PURE__*/React.createElement(FieldGroupFF, null, storageKeys.map(key => {\n    return /*#__PURE__*/React.createElement(Field, {\n      type: \"checkbox\",\n      component: CheckboxFieldFF,\n      name: storageName,\n      label: key,\n      key: key,\n      value: key\n    });\n  })));\n};\nFormSection.propTypes = {\n  deselectButtonLabel: PropTypes.string.isRequired,\n  emptyMessage: PropTypes.string.isRequired,\n  form: PropTypes.shape({\n    change: PropTypes.func.isRequired\n  }).isRequired,\n  headline: PropTypes.string.isRequired,\n  selectButtonLabel: PropTypes.string.isRequired,\n  storageKeys: PropTypes.arrayOf(PropTypes.string).isRequired,\n  storageName: PropTypes.string.isRequired\n};","import i18n from '@dhis2/d2-i18n';\nimport { Button, Help, ReactFinalForm } from '@dhis2/ui';\nimport { FORM_ERROR } from 'final-form';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Actions } from '../actions/Actions.js';\nimport styles from './ClearForm.module.css';\nimport { FormSection } from './FormSection.js';\nconst {\n  Form\n} = ReactFinalForm;\n\nconst validate = values => {\n  const errors = {};\n\n  if (!values.localStorageKeys.length && !values.sessionStorageKeys.length && !values.indexedDatabaseKeys.length) {\n    errors[FORM_ERROR] = i18n.t('No data selected');\n  }\n\n  return errors;\n};\n\nexport const ClearForm = ({\n  onSubmit,\n  initialValues,\n  localStorageKeys,\n  sessionStorageKeys,\n  indexedDatabaseKeys\n}) => {\n  const selectAll = form => {\n    form.batch(() => {\n      form.change('localStorageKeys', localStorageKeys);\n      form.change('sessionStorageKeys', sessionStorageKeys);\n      form.change('indexedDatabaseKeys', indexedDatabaseKeys);\n    });\n  };\n\n  const deselectAll = form => {\n    form.batch(() => {\n      form.change('localStorageKeys', []);\n      form.change('sessionStorageKeys', []);\n      form.change('indexedDatabaseKeys', []);\n    });\n  };\n\n  const onFormSubmit = values => {\n    onSubmit(values);\n  };\n\n  return /*#__PURE__*/React.createElement(Form, {\n    onSubmit: onFormSubmit,\n    initialValues: initialValues,\n    validate: validate\n  }, ({\n    handleSubmit,\n    errors,\n    submitFailed,\n    form\n  }) => /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit\n  }, /*#__PURE__*/React.createElement(Actions, null, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => selectAll(form),\n    dataTest: \"dhis2-cachecleaner-selectall\"\n  }, i18n.t('Select all')), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => deselectAll(form),\n    dataTest: \"dhis2-cachecleaner-deselectall\"\n  }, i18n.t('Deselect all')), /*#__PURE__*/React.createElement(Button, {\n    disabled: !!errors[FORM_ERROR],\n    destructive: true,\n    type: \"submit\",\n    dataTest: \"dhis2-cachecleaner-clear-top\"\n  }, i18n.t('Clear all selected items'))), /*#__PURE__*/React.createElement(FormSection, {\n    form: form,\n    emptyMessage: i18n.t('Local storage empty'),\n    selectButtonLabel: i18n.t('Select all local storage items'),\n    deselectButtonLabel: i18n.t('Deselect all local storage items'),\n    headline: i18n.t('Local storage'),\n    storageKeys: localStorageKeys,\n    storageName: \"localStorageKeys\"\n  }), /*#__PURE__*/React.createElement(FormSection, {\n    form: form,\n    emptyMessage: i18n.t('Session storage empty'),\n    selectButtonLabel: i18n.t('Select all session storage items'),\n    deselectButtonLabel: i18n.t('Deselect all session storage items'),\n    headline: i18n.t('Session storage'),\n    storageKeys: sessionStorageKeys,\n    storageName: \"sessionStorageKeys\"\n  }), /*#__PURE__*/React.createElement(FormSection, {\n    form: form,\n    emptyMessage: i18n.t('No indexed databases'),\n    selectButtonLabel: i18n.t('Select all databases'),\n    deselectButtonLabel: i18n.t('Deselect all databases'),\n    headline: i18n.t('Indexed database'),\n    storageKeys: indexedDatabaseKeys,\n    storageName: \"indexedDatabaseKeys\"\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.formErrors\n  }, errors[FORM_ERROR] && submitFailed && /*#__PURE__*/React.createElement(Help, {\n    error: true\n  }, errors[FORM_ERROR])), /*#__PURE__*/React.createElement(Actions, null, /*#__PURE__*/React.createElement(Button, {\n    disabled: !!errors[FORM_ERROR],\n    destructive: true,\n    type: \"submit\",\n    dataTest: \"dhis2-cachecleaner-clear-bottom\"\n  }, i18n.t('Clear all selected items')))));\n};\nClearForm.defaultProps = {\n  initialValues: {\n    localStorageKeys: [],\n    sessionStorageKeys: [],\n    indexedDatabaseKeys: []\n  }\n};\nClearForm.propTypes = {\n  indexedDatabaseKeys: PropTypes.arrayOf(PropTypes.string).isRequired,\n  localStorageKeys: PropTypes.arrayOf(PropTypes.string).isRequired,\n  sessionStorageKeys: PropTypes.arrayOf(PropTypes.string).isRequired,\n  onSubmit: PropTypes.func.isRequired,\n  initialValues: PropTypes.shape({\n    indexedDatabaseKeys: PropTypes.arrayOf(PropTypes.string),\n    localStorageKeys: PropTypes.arrayOf(PropTypes.string),\n    sessionStorageKeys: PropTypes.arrayOf(PropTypes.string)\n  })\n};","import { deleteDb } from './deleteDb.js';\n/**\n * @param {string} name\n * @returns {Promise.<bool>}\n */\n\nexport const dbExists = name => new Promise((resolve, reject) => {\n  let alreadyExists = true;\n  const request = window.indexedDB.open(name);\n\n  request.onsuccess = () => {\n    request.result.close();\n\n    if (!alreadyExists) {\n      deleteDb(name).then(() => resolve(false));\n    } else {\n      resolve(true);\n    }\n  };\n\n  request.onerror = error => reject(error);\n\n  request.onupgradeneeded = () => alreadyExists = false;\n});","import { dbExists } from './dbExists.js';\nexport const deleteDb = (name, succeedWhenNonExistant = false) => dbExists(name).then(exists => {\n  if (exists) {\n    return new Promise((resolve, reject) => {\n      const request = window.indexedDB.deleteDatabase(name);\n      request.onsuccess = resolve;\n      request.onerror = reject;\n    });\n  }\n\n  return succeedWhenNonExistant ? Promise.resolve() : Promise.reject();\n});","import { dbExists } from './dbExists.js';\nimport { getKeyFromObjectStore } from './getKeyFromObjectStore.js';\nimport { openDb } from './openDb.js';\nconst userCachesStoreName = 'userCaches';\nexport const getCaptureAppUserDatabases = () => dbExists('dhis2ca').then(async captureDbExists => {\n  let db;\n  let dbNames = [];\n\n  if (captureDbExists) {\n    try {\n      db = await openDb('dhis2ca');\n      const data = await getKeyFromObjectStore(db, userCachesStoreName, 'accessHistory');\n\n      if (data && data.values) {\n        dbNames = data.values;\n      }\n    } catch (e) {\n      dbNames = [];\n    } finally {\n      db && db.close();\n    }\n  }\n\n  return dbNames;\n});","/**\n * @param {string} name\n * @returns {Promise.<IDBDatabase>}\n */\nexport const openDb = name => new Promise((resolve, reject) => {\n  const request = window.indexedDB.open(name);\n\n  request.onsuccess = () => resolve(request.result);\n\n  request.onerror = reject;\n});","export const getKeyFromObjectStore = (db, storeName, key) => new Promise((resolve, reject) => {\n  try {\n    const request = db.transaction(storeName).objectStore(storeName).get(key);\n\n    request.onsuccess = event => resolve(event.target.result);\n\n    request.onerror = reject;\n  } catch (e) {\n    reject(e);\n  }\n});","export const dhis2DatabaseNames = ['dhis2ou', 'dhis2', 'dhis2tc', 'dhis2ec', 'dhis2de', 'dhis2er', 'dhis2ca'];","import { useEffect, useState } from 'react';\nimport { getCaptureAppUserDatabases } from './getCaptureAppUserDatabases.js';\nimport { getClearableDatabases } from './getClearableDatabases.js';\nexport const useClearableDatabaseKeys = () => {\n  const [refetchCounter, setRefetchCounter] = useState(0);\n\n  const refetch = () => setRefetchCounter(refetchCounter + 1);\n\n  const [loading, setLoading] = useState(true);\n  const [data, setData] = useState({\n    // Contains all databases that are listed in the\n    // \"dhis2DatabaseNames\" file that acutally exist\n    staticDatabases: [],\n    // these won't be listed, but should be deleted\n    // if the static database \"dhis2ca\" is deleted by the user\n    userDatabases: []\n  });\n  useEffect(() => {\n    const operation = async () => {\n      setLoading(true);\n      const staticDatabases = await getClearableDatabases().catch(() => []);\n      const userDatabases = await getCaptureAppUserDatabases().catch(() => []);\n      const allDatabases = {\n        staticDatabases,\n        userDatabases\n      };\n      setData(allDatabases);\n      setLoading(false);\n    };\n\n    operation();\n  }, [refetchCounter]);\n  return {\n    loading,\n    data,\n    refetch\n  };\n};","import { dbExists } from './dbExists.js';\nimport { dhis2DatabaseNames } from './dhis2DatabaseNames.js';\n/**\n * @returns {Promise.<String[]>}\n */\n\nexport const getClearableDatabases = () => Promise.all(dhis2DatabaseNames.map(name => dbExists(name).then(exists => exists ? name : null))).then(keys => {\n  const filtered = keys.filter(key => key);\n  return filtered;\n});","export const clearStoragesByKey = (storage, keys) => {\n  // remove keys\n  keys.forEach(key => storage.removeItem(key)); // return removal check\n\n  return keys.reduce((success, key) => {\n    // fail if already failed\n    if (!success) {\n      return false;\n    }\n\n    return storage.getItem(key) === null;\n  }, true);\n};","export const reservedStorageKeys = [// exclude methods and props of Storage instances\n...Object.keys(Storage.prototype), // custom dhis2 keys that should not be cleared\n'dhis2.menu.ui.headerBar.title', 'dhis2.menu.ui.headerBar.link', 'dhis2.menu.ui.headerBar.userStyle', 'DHIS2_BASE_URL'];","import { useCallback, useEffect, useState } from 'react';\nimport { getClearableKeys } from './getClearableKeys.js';\nexport const useClearableStorageKeys = storage => {\n  const [existingKeys, setExistingKeys] = useState([]);\n  const onStorageChange = useCallback(() => {\n    const existing = getClearableKeys(storage);\n    setExistingKeys(existing);\n  }, [storage]);\n  useEffect(() => {\n    onStorageChange();\n  }, [onStorageChange]);\n  return {\n    keys: existingKeys,\n    refetch: onStorageChange\n  };\n};","import { reservedStorageKeys } from './reservedStorageKeys.js';\n/**\n * @param {Storage} strage\n * @returns {String[]}\n */\n\nexport const getClearableKeys = storage => Object.keys(storage).filter(key => !reservedStorageKeys.includes(key));","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Home_container__uI4J6\",\"headline\":\"Home_headline__GVLIt\"};","import { clearDatabasesByKey } from '../../indexedDb/index.js';\nimport { clearStoragesByKey } from '../../storage/index.js';\n\nconst clearLocalStorageByKeys = keys => clearStoragesByKey(window.localStorage, keys);\n\nconst clearSessionStorageByKeys = keys => clearStoragesByKey(window.sessionStorage, keys);\n\nexport const deleteValues = async values => {\n  var _values$indexedDB;\n\n  if (values.localStorageKeys) {\n    clearLocalStorageByKeys(values.localStorageKeys);\n  }\n\n  if (values.sessionStorageKeys) {\n    clearSessionStorageByKeys(values.sessionStorageKeys);\n  }\n\n  if ((_values$indexedDB = values.indexedDB) !== null && _values$indexedDB !== void 0 && _values$indexedDB.length) {\n    await clearDatabasesByKey(values.indexedDB);\n  }\n};","import { deleteDb } from './deleteDb.js';\nexport const clearDatabasesByKey = keys => {\n  const allDeleteProcesses = keys.map(key => deleteDb(key, true));\n  return Promise.all(allDeleteProcesses);\n};","import i18n from '@dhis2/d2-i18n';\nimport React from 'react';\nimport { ClearForm } from '../clearForm/index.js';\nimport { useClearableDatabaseKeys } from '../indexedDb/index.js';\nimport { useClearableStorageKeys } from '../storage/index.js';\nimport styles from './Home.module.css';\nimport { deleteValues } from './Home/deleteValues.js';\nimport { formatDeleteValues } from './Home/formatDeleteValues.js';\nexport const Home = () => {\n  const {\n    keys: localStorageKeys,\n    refetch: refetchLocalStorageKeys\n  } = useClearableStorageKeys(window.localStorage);\n  const {\n    keys: sessionStorageKeys,\n    refetch: refetchSessionStorageKeys\n  } = useClearableStorageKeys(window.sessionStorage);\n  const {\n    loading,\n    error,\n    data: indexedDatabaseKeys,\n    refetch: refetchIndexedDatabaseKeys\n  } = useClearableDatabaseKeys();\n  const {\n    staticDatabases,\n    userDatabases\n  } = indexedDatabaseKeys;\n\n  const refetch = async () => {\n    refetchLocalStorageKeys();\n    refetchSessionStorageKeys();\n    await refetchIndexedDatabaseKeys();\n  };\n\n  const onSubmit = async values => {\n    const formattedValues = formatDeleteValues(values, userDatabases);\n    await deleteValues(formattedValues);\n    await refetch();\n  };\n\n  const showContent = !loading && !error;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container\n  }, loading && /*#__PURE__*/React.createElement(\"p\", {\n    \"data-test\": \"dhis2-cachecleaner-loading\"\n  }, i18n.t('Loading clearable data...')), error && i18n.t(`Something went wrong: ${error.message}`), showContent && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    className: styles.headline,\n    \"data-test\": \"dhis2-cachecleaner-homeheadline\"\n  }, i18n.t('DHIS 2 browser cache cleaner')), /*#__PURE__*/React.createElement(ClearForm // keep these so the previously selected values\n  // are kept for rejection in the confirmation step\n  , {\n    localStorageKeys: localStorageKeys,\n    sessionStorageKeys: sessionStorageKeys,\n    indexedDatabaseKeys: staticDatabases,\n    onSubmit: onSubmit\n  })));\n};","export const formatDeleteValues = (values, userDatabases) => {\n  const {\n    indexedDatabaseKeys,\n    localStorageKeys,\n    sessionStorageKeys\n  } = values; // user databases should only be cleared when the \"dhis2ca\" db is cleared\n\n  const shouldDeleteUserDatabases = (indexedDatabaseKeys === null || indexedDatabaseKeys === void 0 ? void 0 : indexedDatabaseKeys.includes('dhis2ca')) && (userDatabases === null || userDatabases === void 0 ? void 0 : userDatabases.length);\n  return {\n    localStorageKeys: localStorageKeys || [],\n    sessionStorageKeys: sessionStorageKeys || [],\n    indexedDB: [...(indexedDatabaseKeys || []), ...(shouldDeleteUserDatabases ? userDatabases : [])]\n  };\n};","import { CssVariables } from '@dhis2/ui';\nimport React from 'react';\nimport './locales/index.js';\nimport { Home } from './views/index.js';\nexport default function App() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\"\n  }, /*#__PURE__*/React.createElement(CssVariables, {\n    colors: true,\n    spacers: true\n  }), /*#__PURE__*/React.createElement(Home, null));\n}"],"names":["namespace","i18n","arTranslations","ckbTranslations","csTranslations","daTranslations","enTranslations","esTranslations","frTranslations","idTranslations","kmTranslations","loTranslations","myTranslations","nbTranslations","nlTranslations","prsTranslations","psTranslations","ptTranslations","pt_BRTranslations","ruTranslations","svTranslations","tetTranslations","tgTranslations","ukTranslations","urTranslations","uzTranslations","uz_LatnTranslations","viTranslations","zhTranslations","zh_CNTranslations","Actions","children","React","className","styles","ButtonStrip","Field","ReactFinalForm","FormSection","deselectButtonLabel","emptyMessage","form","headline","selectButtonLabel","storageKeys","storageName","storageDataTestName","toLowerCase","length","Button","secondary","small","onClick","change","dataTest","FieldGroupFF","map","key","type","component","CheckboxFieldFF","name","label","value","Form","validate","values","errors","localStorageKeys","sessionStorageKeys","indexedDatabaseKeys","FORM_ERROR","ClearForm","onSubmit","initialValues","handleSubmit","submitFailed","batch","selectAll","deselectAll","disabled","destructive","Help","error","defaultProps","dbExists","Promise","resolve","reject","alreadyExists","request","window","indexedDB","open","onsuccess","result","close","deleteDb","then","onerror","onupgradeneeded","succeedWhenNonExistant","exists","deleteDatabase","getCaptureAppUserDatabases","async","db","dbNames","captureDbExists","data","storeName","transaction","objectStore","get","event","target","e","getKeyFromObjectStore","dhis2DatabaseNames","useClearableDatabaseKeys","refetchCounter","setRefetchCounter","useState","loading","setLoading","setData","staticDatabases","userDatabases","useEffect","all","keys","filter","catch","operation","refetch","clearStoragesByKey","storage","forEach","removeItem","reduce","success","getItem","reservedStorageKeys","Object","Storage","prototype","useClearableStorageKeys","existingKeys","setExistingKeys","onStorageChange","useCallback","existing","includes","getClearableKeys","deleteValues","_values$indexedDB","localStorage","sessionStorage","clearSessionStorageByKeys","allDeleteProcesses","clearDatabasesByKey","Home","refetchLocalStorageKeys","refetchSessionStorageKeys","refetchIndexedDatabaseKeys","showContent","message","formattedValues","shouldDeleteUserDatabases","formatDeleteValues","App","CssVariables","colors","spacers"],"sourceRoot":""}