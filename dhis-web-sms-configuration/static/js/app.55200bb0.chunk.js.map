{"version":3,"sources":["D2App/shared/components/Date/Date.module.css","D2App/shared/components/FormRow/FormRow.module.css","D2App/shared/components/ListActions/ListActions.module.css","D2App/shared/components/Navigation/NavigationItem.module.css","D2App/shared/components/PageHeadline/PageHeadline.module.css","D2App/shared/components/PageSubHeadline/PageSubHeadline.module.css","D2App/shared/components/Paragraph/Paragraph.module.css","D2App/shared/components/pagination/Pagination.module.css","D2App/shared/components/SmsTable/SmsTable.module.css","D2App/shared/components/Template/LayoutContainer.module.css","D2App/shared/components/Template/LayoutContent.module.css","D2App/shared/components/Template/LayoutSidebar.module.css","D2App/shared/components/Time/Time.module.css","D2App/sms-command/ViewSmsCommandAdd/ViewSmsCommandAdd.module.css","D2App/sms-command/FieldSpecialCharacter/FieldSpecialCharacter.module.css","D2App/sms-command/FieldDataElementWithCategoryOptionCombo/CurrentFormula.module.css","D2App/sms-command/FieldDataElementWithCategoryOptionCombo/FieldDataElementWithCategoryOptionCombo.module.css","D2App/sms-command/DataElementTimesCategoryOptionCombos/DataElementTimesCategoryOptionCombos.module.css","D2App/sms-command/ViewSmsCommandEdit/ViewSmsCommandEdit.module.css","D2App/sms-command/ViewSmsCommandList/ViewSmsCommandList.module.css","D2App/sms-gateway/ActionAddKeyValuePair/ActionAddKeyValuePair.module.css","D2App/sms-gateway/FieldKeyValuePair/FieldKeyValuePair.module.css","D2App/sms-gateway/ViewSmsGatewayAdd/ViewSmsGatewayAdd.module.css","D2App/sms-gateway/ViewSmsGatewayEdit/ViewSmsGatewayEdit.module.css","D2App/sms-gateway/ViewSmsGatewayList/GatewaysTable.module.css","D2App/sms-gateway/ViewSmsGatewayList/List.module.css","D2App/sms-gateway/ViewSmsGatewayList/ViewSmsGatewayList.module.css","D2App/sms-inbound/Filter/Filter.module.css","D2App/sms-inbound/ReceivedSmsTable/ReceivedSmsTable.module.css","D2App/sms-inbound/ViewReceivedSmsList/ViewReceivedSmsList.module.css","D2App/sms-outbound/SentSmsTable/SentSmsTable.module.css","D2App/sms-outbound/StatusFilter/StatusFilter.module.css","D2App/sms-outbound/ViewSentSmsList/ViewSentSmsList.module.css","D2App/sms-overview/HomeCard/HomeCard.module.css","D2App/sms-overview/ViewOverview/ViewOverview.module.css","D2App/locales/index.js","D2App/shared/components/AlertHandler/AlertContext.js","D2App/shared/utils/dataTest/dataTest.js","D2App/shared/components/AlertHandler/AlertHandler.js","D2App/shared/components/CancelDialog/CancelDialog.js","D2App/shared/components/ContentLoading/ContentLoading.js","D2App/shared/components/ContentLoadingError/ContentLoadingError.js","D2App/shared/components/Date/Date.js","D2App/shared/components/DeleteConfirmationDialog/DeleteConfirmationDialog.js","D2App/shared/components/FieldUserGroup/FieldUserGroup.js","D2App/shared/components/FieldUserGroup/useReadUserGroupsQuery.js","D2App/shared/components/FieldUserGroup/FieldUserGroupWithAutoLoad.js","D2App/shared/components/FormRow/FormRow.js","D2App/shared/components/ListActions/ListActions.js","D2App/shared/components/Navigation/NavigationItem.js","D2App/shared/components/Navigation/Navigation.js","D2App/shared/components/PageHeadline/PageHeadline.js","D2App/shared/components/PageSubHeadline/PageSubHeadline.js","D2App/shared/components/Paragraph/Paragraph.js","D2App/shared/hooks/useQueryParam/useQueryParams.js","D2App/shared/hooks/useSubmit/useSubmit.js","D2App/shared/components/pagination/Pagination.js","D2App/shared/components/SmsTable/SmsTable.js","D2App/shared/components/Template/LayoutContainer.js","D2App/shared/components/Template/LayoutContent.js","D2App/shared/components/Template/LayoutSidebar.js","D2App/shared/components/Template/TemplateSidebarNavContent.js","D2App/shared/components/Time/Time.js","D2App/AppWrapper.js","D2App/sms-command/FieldCommandName/FieldCommandName.js","D2App/sms-command/FieldDataSet/FieldDataSet.js","D2App/sms-command/FieldDataSet/useReadDataSetsQuery.js","D2App/sms-command/FieldDataSet/FieldDataSetWithAutoLoad.js","D2App/sms-command/FieldParser/parserTypes.js","D2App/sms-command/FieldParser/FieldParser.js","D2App/sms-command/FieldProgram/FieldProgram.js","D2App/sms-command/FieldProgram/programTypes.js","D2App/sms-command/FieldProgram/useReadProgramsQuery.js","D2App/sms-command/FieldProgram/FieldProgramWithAutoLoad.js","D2App/sms-command/FieldProgramStage/FieldProgramStage.js","D2App/sms-command/FieldProgramStage/useReadProgramStagesQuery.js","D2App/sms-command/FieldProgramStage/FieldProgramStageWithLoadingStates.js","D2App/sms-command/ViewSmsCommandAdd/useCreateSmsCommandMutation.js","D2App/sms-command/ViewSmsCommandAdd/ViewSmsCommandAdd.js","D2App/sms-command/FieldConfirmMessage/FieldConfirmMessage.js","D2App/sms-command/FormActions/SaveCommandButton.js","D2App/sms-command/FormActions/FormActions.js","D2App/sms-command/SubmitErrors/SubmitErrors.js","D2App/sms-command/FormAlertParser/Form.js","D2App/sms-command/FormAlertParser/useAlertDataQuery.js","D2App/sms-command/FormAlertParser/useUpdateCommandMutation.js","D2App/sms-command/FormAlertParser/FormAlertParser.js","D2App/sms-command/FormAlertParser/createInitialValues.js","D2App/sms-command/FormAlertParser/createUserGroupOptions.js","D2App/sms-command/FieldDefaultMessage/FieldDefaultMessage.js","D2App/sms-command/FieldMoreThanOneOrgUnitMessage/FieldMoreThanOneOrgUnitMessage.js","D2App/sms-command/FieldNoUserMessage/FieldNoUserMessage.js","D2App/sms-command/FieldSeparator/FieldSeparator.js","D2App/sms-command/FieldSmsCode/FieldSmsCode.js","D2App/sms-command/FieldSmsCodeDataElement/FieldSmsCodeDataElement.js","D2App/sms-command/FieldSuccessMessage/FieldSuccessMessage.js","D2App/sms-command/FieldWrongFormatMessage/FieldWrongFormatMessage.js","D2App/sms-command/FormEventRegistrationParser/Form.js","D2App/sms-command/FormEventRegistrationParser/getInitialFormState.js","D2App/sms-command/FormEventRegistrationParser/useCommandQuery.js","D2App/sms-command/FormEventRegistrationParser/useUpdateCommandMutation.js","D2App/sms-command/FormEventRegistrationParser/FormEventRegistrationParser.js","D2App/sms-command/FieldSpecialCharacter/FieldSpecialCharacter.js","D2App/sms-command/AddSpecialCharacters/AddSpecialCharacters.js","D2App/sms-command/FieldDataElementWithCategoryOptionCombo/CurrentFormula.js","D2App/sms-command/FieldDataElementWithCategoryOptionCombo/AddFormulaButton.js","D2App/sms-command/FieldDataElementWithCategoryOptionCombo/useReadDataElementsOfDataSetQuery.js","D2App/sms-command/FieldDataElementWithCategoryOptionCombo/FormulaModalForm.js","D2App/sms-command/FieldDataElementWithCategoryOptionCombo/FieldDataElementWithCategoryOptionCombo.js","D2App/sms-command/FieldCompletenessMethod/completenessMethods.js","D2App/sms-command/FieldCompletenessMethod/FieldCompletenessMethod.js","D2App/sms-command/DataElementTimesCategoryOptionCombos/CompletenessMessage.js","D2App/sms-command/DataElementTimesCategoryOptionCombos/DataElementTimesCategoryOptionCombos.js","D2App/sms-command/FieldUseCurrentPeriodForReporting/FieldUseCurrentPeriodForReporting.js","D2App/sms-command/FormJ2meParser/Form.js","D2App/sms-command/FormJ2meParser/getInitialFormState.js","D2App/sms-command/getSmsCodeDuplicates/getSmsCodeDuplicates.js","D2App/sms-command/FormJ2meParser/globalValidate.js","D2App/sms-command/FormJ2meParser/useCommandData.js","D2App/sms-command/FormJ2meParser/useUpdateCommandMutation.js","D2App/sms-command/FormJ2meParser/FormJ2meParser.js","D2App/sms-command/FormKeyValueParser/Form.js","D2App/sms-command/FormKeyValueParser/getInitialFormState.js","D2App/sms-command/FormKeyValueParser/globalValidate.js","D2App/sms-command/FormKeyValueParser/useCommandData.js","D2App/sms-command/FormKeyValueParser/useUpdateCommandMutation.js","D2App/sms-command/FormKeyValueParser/FormKeyValueParser.js","D2App/sms-command/FormProgramStageDataEntryParser/FormComponent.js","D2App/sms-command/FormProgramStageDataEntryParser/getInitialFormState.js","D2App/sms-command/FormProgramStageDataEntryParser/useCommandData.js","D2App/sms-command/FormProgramStageDataEntryParser/useUpdateCommandMutation.js","D2App/sms-command/FormProgramStageDataEntryParser/FormProgramStageDataEntryParser.js","D2App/sms-command/FormTrackedEntityRegistrationParser/Form.js","D2App/sms-command/FormTrackedEntityRegistrationParser/useCommandData.js","D2App/sms-command/FormTrackedEntityRegistrationParser/useUpdateCommandMutation.js","D2App/sms-command/FormTrackedEntityRegistrationParser/FormTrackedEntityRegistrationParser.js","D2App/sms-command/FormUnregisteredParser/Form.js","D2App/sms-command/FormUnregisteredParser/useCommandData.js","D2App/sms-command/FormUnregisteredParser/useUpdateCommandMutation.js","D2App/sms-command/FormUnregisteredParser/FormUnregisteredParser.js","D2App/sms-command/ViewSmsCommandEdit/useReadSmsCommandParserTypeQuery.js","D2App/sms-command/ViewSmsCommandEdit/ViewSmsCommandEdit.js","D2App/sms-command/ViewSmsCommandList/useDeleteSmsCommandMutation.js","D2App/sms-command/ViewSmsCommandList/useReadSmsCommandsQuery.js","D2App/sms-command/ViewSmsCommandList/ViewSmsCommandList.js","D2App/sms-gateway/FieldGatewayName/FieldGatewayName.js","D2App/sms-gateway/FieldPassword/FieldPassword.js","D2App/sms-gateway/FieldPasswordConfirmation/FieldPasswordConfirmation.js","D2App/sms-gateway/FieldUsername/FieldUsername.js","D2App/sms-gateway/FormBulkSMS/FormBulkSMS.js","D2App/sms-gateway/FieldAuthToken/FieldAuthToken.js","D2App/sms-gateway/FieldUrlTemplate/FieldUrlTemplate.js","D2App/sms-gateway/FormClickatell/FormClickatell.js","D2App/sms-gateway/ActionAddKeyValuePair/ActionAddKeyValuePair.js","D2App/sms-gateway/FieldConfigurationTemplate/FieldConfigurationTemplate.js","D2App/sms-gateway/FieldContentType/FieldContentType.js","D2App/sms-gateway/FieldKeyValuePair/ValueField.js","D2App/sms-gateway/FieldKeyValuePair/FieldKeyValuePair.js","D2App/sms-gateway/FieldSendUrlParameters/FieldSendUrlParameters.js","D2App/sms-gateway/FieldUseGet/FieldUseGet.js","D2App/sms-gateway/FormGeneric/FormGeneric.js","D2App/sms-gateway/FieldBindType/FieldBindType.js","D2App/sms-gateway/FieldCompressed/FieldCompressed.js","D2App/sms-gateway/FieldHost/FieldHost.js","D2App/sms-gateway/FieldNumberPlanIndicator/FieldNumberPlanIndicator.js","D2App/sms-gateway/FieldPort/FieldPort.js","D2App/sms-gateway/FieldSystemId/FieldSystemId.js","D2App/sms-gateway/FieldSystemType/FieldSystemType.js","D2App/sms-gateway/FieldTypeOfNumber/FieldTypeOfNumber.js","D2App/sms-gateway/FormSMPP/FromSMPP.js","D2App/sms-gateway/InputSingleSelectGatewayType/gatewayTypes.js","D2App/sms-gateway/InputSingleSelectGatewayType/InputSingleSelectGatewayType.js","D2App/sms-gateway/ViewSmsGatewayAdd/useCreateBulkSMSGatewayMutation.js","D2App/sms-gateway/ViewSmsGatewayAdd/useCreateClickatellGatewayMutation.js","D2App/sms-gateway/createGenericGateWayDataFromVariables/createGenericGateWayDataFromVariables.js","D2App/sms-gateway/ViewSmsGatewayAdd/useCreateGenericGatewayMutation.js","D2App/sms-gateway/ViewSmsGatewayAdd/useCreateSMPPGatewayMutation.js","D2App/sms-gateway/ViewSmsGatewayAdd/ViewSmsGatewayAdd.js","D2App/sms-gateway/ViewSmsGatewayEdit/useReadGatewayQuery.js","D2App/sms-gateway/ViewSmsGatewayEdit/useUpdateGatewayMutation.js","D2App/sms-gateway/ViewSmsGatewayEdit/useUpdateBulkSMSGatewayMutation.js","D2App/sms-gateway/ViewSmsGatewayEdit/useUpdateClickatellGatewayMutation.js","D2App/sms-gateway/ViewSmsGatewayEdit/useUpdateGenericGatewayMutation.js","D2App/sms-gateway/ViewSmsGatewayEdit/useUpdateSMPPGatewayMutation.js","D2App/sms-gateway/ViewSmsGatewayEdit/ViewSmsGatewayEdit.js","D2App/sms-gateway/ViewSmsGatewayList/getTypeLabelByType.js","D2App/sms-gateway/ViewSmsGatewayList/GatewaysTable.js","D2App/sms-gateway/ViewSmsGatewayList/List.js","D2App/sms-gateway/ViewSmsGatewayList/useDeleteGatewaysMutation.js","D2App/sms-gateway/ViewSmsGatewayList/useReadGatewaysQuery.js","D2App/sms-gateway/ViewSmsGatewayList/useSetDefaultGatewayMutation.js","D2App/sms-gateway/ViewSmsGatewayList/ViewSmsGatewayList.js","D2App/sms-inbound/translations/translations.js","D2App/sms-inbound/Filter/Filter.js","D2App/sms-inbound/ReceivedSmsTable/ReceivedSmsTable.js","D2App/sms-inbound/ViewReceivedSmsList/useDeleteMutation.js","D2App/sms-inbound/ViewReceivedSmsList/ViewReceivedSmsList.js","D2App/sms-outbound/translations/translations.js","D2App/sms-outbound/SentSmsTable/SentSmsTable.js","D2App/sms-outbound/StatusFilter/StatusFilter.js","D2App/sms-outbound/ViewSentSmsList/useDeleteMutation.js","D2App/sms-outbound/ViewSentSmsList/ViewSentSmsList.js","D2App/sms-overview/HomeCard/HomeCard.js","D2App/sms-overview/ViewOverview/ViewOverview.js","D2App/index.js","D2App/App.js"],"names":["module","exports","namespace","i18n","addResources","arTranslations","ar_IQTranslations","bnTranslations","ckbTranslations","csTranslations","daTranslations","enTranslations","esTranslations","es_419Translations","frTranslations","idTranslations","kmTranslations","loTranslations","myTranslations","nbTranslations","nlTranslations","orTranslations","prsTranslations","psTranslations","ptTranslations","pt_BRTranslations","roTranslations","ruTranslations","siTranslations","svTranslations","tetTranslations","tgTranslations","ukTranslations","urTranslations","uzTranslations","uz_CyrlTranslations","uz_LatnTranslations","viTranslations","zhTranslations","zh_CNTranslations","AlertContext","createContext","addAlert","Error","dataTest","name","prefix","AlertHandler","children","alerts","setAlerts","useState","React","createElement","Provider","value","message","type","alert","timestamp","Date","now","AlertStack","map","AlertBar","key","CancelDialog","onConfirmCancel","onAbortCancel","Modal","ModalTitle","t","ModalActions","ButtonStrip","Button","onClick","primary","ContentLoading","CenteredContent","CircularLoader","ContentLoadingError","title","errorMessage","NoticeBox","error","date","formatted","moment","format","className","styles","DeleteConfirmationDialog","onCancelClick","onDeleteClick","ModalContent","secondary","Field","ReactFinalForm","FieldUserGroup","userGroups","loading","required","disabled","errorText","validationText","label","component","SingleSelectFieldFF","options","validate","hasValue","defaultProps","USER_GROUPS_QUERY","resource","params","paging","FieldUserGroupWithAutoLoad","data","useDataQuery","undefined","showLoadingStatus","id","displayName","FormRow","cx","formRow","ListActions","addLabel","deleteLabel","onAddClick","disableAdd","disableDelete","container","destructive","NavigationItem","path","exactMatch","history","useHistory","active","routeMatch","useRouteMatch","isExact","useIsItemActive","MenuItem","item","push","defualtProps","Navigation","Menu","PageHeadline","headline","PageSubHeadline","subHeadline","Paragraph","paragraph","useQueryParams","_useQueryParams","status","withDefault","StringParam","phoneNumber","page","NumberParam","pageSize","FORM_ERROR","FinalForm","useSubmit","onSubmit","useContext","args","catch","e","PAGE_LENGTHS","Pagination","pageCount","total","firstItem","Math","min","lastItem","availablePages","Array","from","length","_x","i","toString","setQueryParams","setPage","verticalAlign","SingleSelect","dense","selected","onChange","setPageSize","select","SingleSelectOption","summary","buttonPrevious","small","inputWidth","availablePage","buttonNext","SmsTable","messages","pager","selectedIds","setSelectedIds","columns","rowRenderFn","selectedIdSet","Set","allSelected","Table","TableHead","TableRowHead","TableCellHead","Checkbox","checked","column","TableBody","TableRow","TableCell","colSpan","String","noResults","has","toggle","delete","add","TableFoot","LayoutContainer","LayoutContent","content","LayoutSidebar","sidebar","TemplateSidebarNavContent","Time","time","AppWrapper","CssVariables","spacers","colors","HashRouter","QueryParamProvider","ReactRouterRoute","Route","FIELD_COMMAND_NAME","FieldCommandName","InputFieldFF","composeValidators","string","FIELD_DATA_SET_NAME","FieldDataSet","dataSets","parse","DATA_SETS_QUERY","fields","FieldDataSetWithAutoLoad","programs","parserTypes","KEY_VALUE_PARSER","J2ME_PARSER","ALERT_PARSER","UNREGISTERED_PARSER","TRACKED_ENTITY_REGISTRATION_PARSER","PROGRAM_STAGE_DATAENTRY_PARSER","EVENT_REGISTRATION_PARSER","Object","values","sort","a","b","FIELD_PARSER_NAME","FieldParser","FIELD_PROGRAM_NAME","FieldProgram","programTypes","PROGRAMS_WITH_REGISTRATION","PROGRAMS_WITHOUT_REGISTRATION","ALL_PROGRAMS","PROGRAMS_QUERY","registration","filter","useForm","FieldProgramWithAutoLoad","form","refetch","variables","useReadProgramsQuery","lazy","useEffect","change","FIELD_PROGRAM_STAGE_NAME","FieldProgramStage","programStages","initialValue","iinitialValue","PROGRAM_STAGES_QUERY","programId","FieldProgramStageWithLoadingStates","parserType","_data$programStages2","_data$programStages3","useReadProgramStagesQuery","_data$programStages","_data$programStages$p","isEventRegistrationParser","programStageValueForEventRegistration","CREATE_SMS_COMMAND_MUTATION","dataset","userGroup","program","programStage","Form","ActualForm","handleSubmit","submitting","prevValues","setPrevValues","getState","subscribe","batch","prevProgram","prevParserType","useResetFormFields","showDataSetField","showUserGroupField","showProgramField","showProgramStageField","shouldProgramsBeWithRegistration","disableProgramStage","helpText","icon","goBack","ViewSmsCommandAdd","createSmsCommand","onComplete","onError","useDataMutation","useCreateSmsCommandMutation","destroyOnUnregister","FieldConfirmMessage","TextAreaFieldFF","useFormState","subscription","pristine","SaveCommandButton","enabled","FormActions","enableSubmit","onCancel","submitError","hasSubmitErrors","SubmitErrors","ALERT_DATA_QUERY","smsCommand","commandId","updateAlertParserMutation","partial","receivedMessage","FormAlertParser","onAfterChange","useAlertDataQuery","updateCommand","engine","useDataEngine","mutate","then","useUpdateCommandMutation","initialValues","createInitialValues","keepDirtyOnReinitialize","FormComponent","FIELD_DEFAULT_MESSAGE_NAME","FieldDefaultMessage","FIELD_MORE_THAN_ONE_ORG_UNIT_MESSAGE_NAME","FieldMoreThanOneOrgUnitMessage","FIELD_NO_USER_MESSAGE_NAME","FieldNoUserMessage","FIELD_SEPARATOR_NAME","FieldSeparator","FIELD_SMS_CODES_NAME","FieldSmsCode","valueType","smsCode","code","nextCode","trackedEntityAttribute","FieldSmsCodeDataElement","dataElement","smsCodes","FIELD_SUCCESS_MESSAGE_NAME","FieldSuccessMessage","FIELD_WRONG_FORMAT_MESSAGE_NAME","FieldWrongFormatMessage","programStageDataElements","selectedProgramOption","selectedProgramStageOption","READ_SMS_COMMAND_EVENT_REGISTRATION_PARSER_QUERY","updateEventRegistrationParserMutation","command","separator","defaultMessage","wrongFormatMessage","noUserMessage","moreThanOneOrgUnitMessage","successMessage","FormEventRegistrationParser","msg","reduce","curSmsCodes","getInitialFormState","FIELD_SPECIAL_CHARS_NAME","FieldSpecialCharacter","index","onSpecialKeyRemoved","field","UiField","button","specialChars","newSpecialChars","slice","AddSpecialCharacters","CurrentFormula","formula","formulaDataElementName","operator","formulaInWords","formulaInWordsLabel","useField","DATA_ELEMENTS_QUERY","AddFormulaButton","baseName","setLoading","setFormulaDataElementName","input","dataElementId","query","response","finally","Fragment","dataSet","useReadDataElementsOfDataSetQuery","dataSetId","setError","setData","dataSetElements","left","right","leftDisplayName","rightDisplayName","queryDataElementsOfDataSet","FormulaModalForm","combo","targetFieldName","onClose","initialFormula","useMemo","dataElementCode","modalDataTest","onRemove","newFormula","event","stopPropagation","_extends","assign","target","arguments","source","prototype","hasOwnProperty","call","apply","this","FieldDataElementWithCategoryOptionCombo","categoryOptionCombo","showFormula","setShowFormula","cocCode","DE_COC_toFormName","formulaName","invalid","touched","meta","rest","codeField","formulaFieldName","completenessMethods","ALL_DATAVALUE","AT_LEAST_ONE_DATAVALUE","DO_NOT_MARK_COMPLETE","FIELD_COMPLETENESS_METHOD_NAME","FieldCompletenessMethod","CompletenessMessage","completenessMethod","warning","DataElementTimesCategoryOptionCombos","DE_COC_combinations","allRequired","FIELD_USE_CURRENT_PERIOD_FOR_REPORTING_NAME","FieldUseCurrentPeriodForReporting","CheckboxFieldFF","FormSpy","DE_COC_combination_data","hasSpecialChars","selectedDataSetOption","specialKeyRemoved","setSpecialKeyRemoved","_","getSmsCodeDuplicates","curDuplicates","includes","potentialDuplicates","curCode","curIndex","newlyFoundDuplicates","curWithCodeDuplicates","curName","globalValidate","hasErrors","errors","smsCodesFormState","smsCodesWithValue","entries","duplicates","duplicateErrors","forEach","duplicate","READ_SMS_COMMAND_KEY_VALUE_PARSER_QUERY","updateJ2meParserMutation","useCurrentPeriodForReporting","specialCharacters","codeWrapper","compulsory","optionId","formattedSmsCode","FormJ2meParser","loadingCommandError","commandData","useCommandData","categoryOptionComboId","split","acc","payload","optionIdWrapper","curCombinations","_dataElement$category","categoryCombo","categoryOptionCombos","combos","COC","dirty","updateKeyValueParserMutation","FormKeyValueParser","createDataTestValue","READ_SMS_COMMAND_PROGRAM_STAGE_DATA_ENTRY_PARSER_QUERY","REPLACE_SMS_COMMAND_MUTATION","FormProgramStageDataEntryParser","programStageId","dynamicFields","dynamicField","replace","FormTrackedEntityRegistrationParser","smsCodesOriginal","programTrackedEntityAttributes","merged","UPDATE_COMMAND_MUTATION","FormUnregisteredParser","READ_SMS_COMMAND_PARSER_TYPE_QUERY","isParserType","parser","ViewSmsCommandEdit","useParams","useReadSmsCommandParserTypeQuery","showCancelDialog","setShowCancelDialog","isParser","bind","getSmsCommandEditFormComponent","DELETE_SMS_COMMAND_MUTATION","useDeleteSmsCommandMutation","idToMutationRequest","idToMutationRequestFactory","onDone","ids","Promise","all","SMS_COMMANDS_QUERY","smsCommands","join","SMS_COMMAND_LIST_LABEL","ViewSmsCommandList","_data$smsCommands2","_data$smsCommands2$sm","_data$smsCommands3","_data$smsCommands3$sm","_data$smsCommands4","_data$smsCommands4$sm","checkedSmsCommands","setCheckedSmsCommands","showDeleteConfirmationDialog","setShowDeleteConfirmationDialog","loadingReadSmsCommands","errorReadSmsCommands","deleteSmsCommands","loadingDelete","errorDelete","allChecked","hasCommands","async","_data$smsCommands","checkbox","find","checkedId","findIndex","toggleSmsCommand","getLabelByParserTypes","editButtonCell","FieldGatewayName","FIELD_PASSWORD_NAME","FIELD_PASSWORD_LABEL","FieldPassword","equalToPassword","createEqualTo","FIELD_PASSWORD_CONFIRMATION_NAME","FieldPasswordConfirmation","FieldUsername","FormBulkSMS","submitText","FieldAuthToken","FieldUrlTemplate","url","FormClickatell","ActionAddKeyValuePair","parameters","header","encode","confidential","FieldConfigurationTemplate","optionApplicationJson","optionApplicationXml","optionFormUrlEncoded","optionTextPlain","FieldContentType","isStringWithLengthAtLeastOne","createFieldGatewayKeyValuePairValueName","ValueField","FieldKeyValuePair","textInputs","keyInput","valueInput","checkboxGroup","removeKeyValueFromFormState","FieldSendUrlParameters","FieldUseGet","FormGeneric","FieldBindType","defaultValue","FieldCompressed","FieldHost","FieldNumberPlanIndicator","FieldPort","integer","FieldSystemId","FieldSystemType","FieldTypeOfNumber","FormSMPP","gatewayTypes","GENERIC_FORM","BULK_SMS_FORM","CLICKATELL_FORM","SMPP_FORM","CREATE_BULK_SMS_GATEWAY_MUTATION","username","password","CREATE_CLICKATELL_GATEWAY_MUTATION","authToken","urlTemplate","createGenericGateWayDataFromVariables","configurationTemplate","contentType","sendUrlParameters","useGet","CREATE_GENERIC_GATEWAY_MUTATION","CREATE_SMPP_GATEWAY_MUTATION","systemId","host","systemType","numberPlanIndicator","typeOfNumber","bindType","port","compressed","ViewSmsGatewayAdd","visibleForm","setVisibleForm","saveGenericGateway","saveGenericGatewayError","saveBulkSMSGateway","saveBulkSMSGatewayError","saveClickatellGateway","saveClickatellGatewayError","saveSMPPGateway","saveSMPPGatewayError","reject","SingleSelectField","passwordRequired","GATEWAY_QUERY","gateway","useUpdateGatewayMutation","updatedQuery","UPDATE_BULK_SMS_GATEWAY_MUTATION","UPDATE_CLICKATELL_GATEWAY_MUTATION","UPDATE_GENERIC_GATEWAY_MUTATION","UPDATE_SMPP_GATEWAY_MUTATION","ViewSmsGatewayEdit","_data$gateway","loadError","jsonData","useReadGatewayQuery","saveError","JSON","gatewayType","getFormComponent","uid","formValues","GatewaysTable","allGatewaysChecked","checkedGateways","gateways","onGatewayToggle","onToggleAll","onMakeDefaultClick","checkboxCell","typeCell","defaultCell","isDefault","isDefaultText","makeDefaultButton","editCell","rowActions","List","setCheckedGateways","processing","processingMessage","loadingContainer","curId","newCheckedGateways","allGatewayIds","DELETE_GATEWAY_MUTATION","useDeleteGatewaysMutation","GATEWAYS_QUERY","SET_DEFAULT_GATEWAY_MUTATION","GATEWAY_CONFIG_LIST_LABEL","ViewSmsGatewayList","_data$gateways","_data$gateways$gatewa","showDeleteDialog","setShowDeleteDialog","loadingReadGateways","errorReadGateways","refetchReadGateways","_parsedData$gateways","parsedData","useReadGatewaysQuery","deleteCheckedGateways","makeGatewayDefault","loadingSetDefault","errorSetDefault","hasGateways","info","translations","ALL","FAILED","INCOMING","PROCESSED","PROCESSING","SENT","UNHANDLED","STATUS_FILTER_OPTIONS","Filter","setStatus","setPhoneNumber","onReset","inputStrip","InputField","large","ReceivedSmsTable","_message$user","_message$user$userCre","text","originator","smsstatus","user","userCredentials","receiveddate","DELETE_INBOUND_SMS_MUTATION","RECEIVED_SMS_LIST_LABEL","inboundSms","order","filters","ViewReceivedSmsList","_data$inboundSms","queryParams","called","callback","debouncedRefetch","useDebouncedCallback","leading","deleteSms","useDeleteMutation","inboundsmss","DELIVERED","ERROR","OUTBOUND","PENDING","SCHEDULED","SentSmsTable","recipients","recipient","StatusFilter","DELETE_OUTBOUND_SMS_MUTATION","SENT_SMS_LIST_LABEL","sms","ViewSentSmsList","_data$sms","outboundsmss","HomeCard","titleText","bodyText","linkText","to","Card","s","body","linkContainer","Link","link","ViewOverview","nsSeparator","explanation","grid","gridItem","App","Switch","exact","Redirect"],"mappings":"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","file":"static/js/app.55200bb0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"date\":\"Date_date__32PVN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formRow\":\"FormRow_formRow__1cNWl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ListActions_container__19UqQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"NavigationItem_item__1JJRt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headline\":\"PageHeadline_headline__2WNWN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"subHeadline\":\"PageSubHeadline_subHeadline__A0PKf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paragraph\":\"Paragraph_paragraph__G0OSg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Pagination_container__fuBgU\",\"verticalAlign\":\"Pagination_verticalAlign__20Arz\",\"select\":\"Pagination_select__15i-1\",\"buttonPrevious\":\"Pagination_buttonPrevious__20viW\",\"buttonNext\":\"Pagination_buttonNext__1gggb\",\"summary\":\"Pagination_summary__1jaey\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noResults\":\"SmsTable_noResults__148QG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"LayoutContainer_container__1Ix-e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"LayoutContent_content__1c2dI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"LayoutSidebar_sidebar__1wPe0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"time\":\"Time_time__3_6vE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ViewSmsCommandAdd_container__25VwY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FieldSpecialCharacter_container__3m7Vh\",\"field\":\"FieldSpecialCharacter_field__20YF7\",\"button\":\"FieldSpecialCharacter_button__1QDDi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formulaInWords\":\"CurrentFormula_formulaInWords__1FGIC\",\"formulaInWordsLabel\":\"CurrentFormula_formulaInWordsLabel__3UhrM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FieldDataElementWithCategoryOptionCombo_container__VbaUQ\",\"field\":\"FieldDataElementWithCategoryOptionCombo_field__3_Ux1\",\"codeField\":\"FieldDataElementWithCategoryOptionCombo_codeField__Uwq1r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formRow\":\"DataElementTimesCategoryOptionCombos_formRow__1ROJj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ViewSmsCommandEdit_container__3bTPs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ViewSmsCommandList_container__1rq9R\",\"editButtonCell\":\"ViewSmsCommandList_editButtonCell__3yHe0\",\"checkbox\":\"ViewSmsCommandList_checkbox__3dZPS\",\"noResults\":\"ViewSmsCommandList_noResults__1JuAK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ActionAddKeyValuePair_button__2VAQZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FieldKeyValuePair_container__2NkGf\",\"textInputs\":\"FieldKeyValuePair_textInputs__38rHh\",\"keyInput\":\"FieldKeyValuePair_keyInput__115P4\",\"valueInput\":\"FieldKeyValuePair_valueInput__fUk_z\",\"checkboxGroup\":\"FieldKeyValuePair_checkboxGroup__2CBb0\",\"checkbox\":\"FieldKeyValuePair_checkbox__2kgWE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ViewSmsGatewayAdd_container__1oKaO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ViewSmsGatewayEdit_container__2xMMX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"rowActions\":\"GatewaysTable_rowActions__3BC1f\",\"checkboxCell\":\"GatewaysTable_checkboxCell__SI_z0\",\"typeCell\":\"GatewaysTable_typeCell__2WBpF\",\"editCell\":\"GatewaysTable_editCell__2Bufa\",\"defaultCell\":\"GatewaysTable_defaultCell__3m7ng\",\"makeDefaultButton\":\"GatewaysTable_makeDefaultButton__2YJXZ\",\"isDefaultText\":\"GatewaysTable_isDefaultText__1YJ_o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"List_container__19UcB\",\"processingMessage\":\"List_processingMessage__36no2\",\"loadingContainer\":\"List_loadingContainer__3182Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ViewSmsGatewayList_container__M3vdP\",\"actions\":\"ViewSmsGatewayList_actions__1lfCj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Filter_container__F0zPH\",\"inputStrip\":\"Filter_inputStrip__2V-ff\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"originator\":\"ReceivedSmsTable_originator__2_Of0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ViewReceivedSmsList_container__31901\",\"header\":\"ViewReceivedSmsList_header__217oO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"recipient\":\"SentSmsTable_recipient__3N_Bb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"StatusFilter_container__2u2cP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ViewSentSmsList_container__2Vg_h\",\"header\":\"ViewSentSmsList_header__2d9xU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"HomeCard_container__1sTOF\",\"title\":\"HomeCard_title__4MzMw\",\"body\":\"HomeCard_body__2SG9l\",\"linkContainer\":\"HomeCard_linkContainer__3dX6c\",\"link\":\"HomeCard_link__wnKkR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ViewOverview_container__2EGnb\",\"explanation\":\"ViewOverview_explanation__2H7QS\",\"grid\":\"ViewOverview_grid__ns7f_\",\"gridItem\":\"ViewOverview_gridItem__36C2M\"};","//------------------------------------------------------------------------------\n// <auto-generated>\n// This code was generated by d2-i18n-generate.\n//\n// Changes to this file may cause incorrect behavior and will be lost if\n// the code is regenerated.\n// </auto-generated>\n//------------------------------------------------------------------------------\nimport i18n from '@dhis2/d2-i18n';\nimport arTranslations from './ar/translations.json';\nimport ar_IQTranslations from './ar_IQ/translations.json';\nimport bnTranslations from './bn/translations.json';\nimport ckbTranslations from './ckb/translations.json';\nimport csTranslations from './cs/translations.json';\nimport daTranslations from './da/translations.json';\nimport enTranslations from './en/translations.json';\nimport esTranslations from './es/translations.json';\nimport es_419Translations from './es_419/translations.json';\nimport frTranslations from './fr/translations.json';\nimport idTranslations from './id/translations.json';\nimport kmTranslations from './km/translations.json';\nimport loTranslations from './lo/translations.json';\nimport myTranslations from './my/translations.json';\nimport nbTranslations from './nb/translations.json';\nimport nlTranslations from './nl/translations.json';\nimport orTranslations from './or/translations.json';\nimport prsTranslations from './prs/translations.json';\nimport psTranslations from './ps/translations.json';\nimport ptTranslations from './pt/translations.json';\nimport pt_BRTranslations from './pt_BR/translations.json';\nimport roTranslations from './ro/translations.json';\nimport ruTranslations from './ru/translations.json';\nimport siTranslations from './si/translations.json';\nimport svTranslations from './sv/translations.json';\nimport tetTranslations from './tet/translations.json';\nimport tgTranslations from './tg/translations.json';\nimport ukTranslations from './uk/translations.json';\nimport urTranslations from './ur/translations.json';\nimport uzTranslations from './uz/translations.json';\nimport uz_CyrlTranslations from './uz_Cyrl/translations.json';\nimport uz_LatnTranslations from './uz_Latn/translations.json';\nimport viTranslations from './vi/translations.json';\nimport zhTranslations from './zh/translations.json';\nimport zh_CNTranslations from './zh_CN/translations.json';\nconst namespace = 'default';\ni18n.addResources('ar', namespace, arTranslations);\ni18n.addResources('ar_IQ', namespace, ar_IQTranslations);\ni18n.addResources('bn', namespace, bnTranslations);\ni18n.addResources('ckb', namespace, ckbTranslations);\ni18n.addResources('cs', namespace, csTranslations);\ni18n.addResources('da', namespace, daTranslations);\ni18n.addResources('en', namespace, enTranslations);\ni18n.addResources('es', namespace, esTranslations);\ni18n.addResources('es_419', namespace, es_419Translations);\ni18n.addResources('fr', namespace, frTranslations);\ni18n.addResources('id', namespace, idTranslations);\ni18n.addResources('km', namespace, kmTranslations);\ni18n.addResources('lo', namespace, loTranslations);\ni18n.addResources('my', namespace, myTranslations);\ni18n.addResources('nb', namespace, nbTranslations);\ni18n.addResources('nl', namespace, nlTranslations);\ni18n.addResources('or', namespace, orTranslations);\ni18n.addResources('prs', namespace, prsTranslations);\ni18n.addResources('ps', namespace, psTranslations);\ni18n.addResources('pt', namespace, ptTranslations);\ni18n.addResources('pt_BR', namespace, pt_BRTranslations);\ni18n.addResources('ro', namespace, roTranslations);\ni18n.addResources('ru', namespace, ruTranslations);\ni18n.addResources('si', namespace, siTranslations);\ni18n.addResources('sv', namespace, svTranslations);\ni18n.addResources('tet', namespace, tetTranslations);\ni18n.addResources('tg', namespace, tgTranslations);\ni18n.addResources('uk', namespace, ukTranslations);\ni18n.addResources('ur', namespace, urTranslations);\ni18n.addResources('uz', namespace, uzTranslations);\ni18n.addResources('uz_Cyrl', namespace, uz_CyrlTranslations);\ni18n.addResources('uz_Latn', namespace, uz_LatnTranslations);\ni18n.addResources('vi', namespace, viTranslations);\ni18n.addResources('zh', namespace, zhTranslations);\ni18n.addResources('zh_CN', namespace, zh_CNTranslations);\nexport default i18n;","import { createContext } from 'react';\nexport const AlertContext = /*#__PURE__*/createContext({\n  addAlert: () => {\n    throw new Error('AlertContext has not been initialized yet!');\n  }\n});","const defaultPrefix = 'dhis2-smsconfiguration';\nexport const dataTest = (name, prefix = defaultPrefix) => `${prefix}-${name}`;","import { PropTypes } from '@dhis2/prop-types';\nimport { AlertBar, AlertStack } from '@dhis2/ui';\nimport React, { useState } from 'react';\nimport { dataTest } from '../../utils/index.js';\nimport { AlertContext } from './AlertContext.js';\nexport const AlertHandler = ({\n  children\n}) => {\n  const [alerts, setAlerts] = useState([]);\n\n  const addAlert = ({\n    message,\n    type\n  }) => {\n    const alert = {\n      message,\n      type,\n      // Ensure that identical messages can be distinguished\n      timestamp: Date.now()\n    };\n    setAlerts([...alerts, alert]);\n  };\n\n  return /*#__PURE__*/React.createElement(AlertContext.Provider, {\n    value: {\n      addAlert\n    }\n  }, children, /*#__PURE__*/React.createElement(AlertStack, {\n    dataTest: dataTest('shared-alerthandler-alertstack')\n  }, alerts.map(({\n    message,\n    type,\n    timestamp\n  }) => /*#__PURE__*/React.createElement(AlertBar, {\n    dataTest: dataTest('shared-alerthandler-alertbar'),\n    key: `${message}${timestamp}`,\n    [type]: true\n  }, message))));\n};\nAlertHandler.propTypes = {\n  children: PropTypes.any\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { Button, ButtonStrip, Modal, ModalTitle, ModalActions } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../../locales/index.js';\nexport const CancelDialog = ({\n  onConfirmCancel,\n  onAbortCancel\n}) => /*#__PURE__*/React.createElement(Modal, null, /*#__PURE__*/React.createElement(ModalTitle, null, i18n.t('Are you sure you want to cancel? Unsaved changes will be lost')), /*#__PURE__*/React.createElement(ModalActions, null, /*#__PURE__*/React.createElement(ButtonStrip, null, /*#__PURE__*/React.createElement(Button, {\n  onClick: onAbortCancel\n}, i18n.t('No, stay on page')), /*#__PURE__*/React.createElement(Button, {\n  primary: true,\n  onClick: onConfirmCancel\n}, i18n.t('Yes, cancel')))));\nCancelDialog.propTypes = {\n  onAbortCancel: PropTypes.func.isRequired,\n  onConfirmCancel: PropTypes.func.isRequired\n};","import { CenteredContent, CircularLoader } from '@dhis2/ui';\nimport React from 'react';\nexport const ContentLoading = () => /*#__PURE__*/React.createElement(CenteredContent, null, /*#__PURE__*/React.createElement(CircularLoader, null));","import { PropTypes } from '@dhis2/prop-types';\nimport { NoticeBox } from '@dhis2/ui';\nimport React from 'react';\nexport const ContentLoadingError = ({\n  title,\n  errorMessage\n}) => /*#__PURE__*/React.createElement(NoticeBox, {\n  error: true,\n  title: title\n}, errorMessage);\nContentLoadingError.propTypes = {\n  errorMessage: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired\n};","import { PropTypes } from '@dhis2/prop-types';\nimport moment from 'moment';\nimport React from 'react';\nimport styles from './Date.module.css';\nexport const Date = ({\n  date\n}) => {\n  const momentDate = moment(date);\n  const formatted = momentDate.format('DD MMM YYYY');\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.date\n  }, formatted);\n};\nDate.propTypes = {\n  date: PropTypes.string.isRequired\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { Button, ButtonStrip, Modal, ModalActions, ModalContent, ModalTitle } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../../locales/index.js';\nimport { dataTest } from '../../utils/index.js';\nexport const DeleteConfirmationDialog = ({\n  children,\n  onCancelClick,\n  onDeleteClick\n}) => {\n  return /*#__PURE__*/React.createElement(Modal, {\n    dataTest: dataTest('shared-deleteconfirmationdialog')\n  }, /*#__PURE__*/React.createElement(ModalTitle, null, i18n.t('Confirm deletion')), /*#__PURE__*/React.createElement(ModalContent, null, children), /*#__PURE__*/React.createElement(ModalActions, null, /*#__PURE__*/React.createElement(ButtonStrip, null, /*#__PURE__*/React.createElement(Button, {\n    secondary: true,\n    onClick: onCancelClick,\n    dataTest: dataTest('shared-deleteconfirmationdialog-cancel')\n  }, i18n.t('Cancel')), /*#__PURE__*/React.createElement(Button, {\n    primary: true,\n    onClick: onDeleteClick,\n    dataTest: dataTest('shared-deleteconfirmationdialog-confirm')\n  }, i18n.t('Delete')))));\n};\nDeleteConfirmationDialog.propTypes = {\n  children: PropTypes.any.isRequired,\n  onCancelClick: PropTypes.func.isRequired,\n  onDeleteClick: PropTypes.func.isRequired\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { SingleSelectFieldFF, ReactFinalForm, hasValue } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../../locales/index.js';\nimport { dataTest } from '../../../shared/utils/index.js';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FIELD_USER_GROUP_NAME = 'userGroup';\nexport const FieldUserGroup = ({\n  userGroups,\n  loading,\n  required,\n  disabled,\n  errorText\n}) => /*#__PURE__*/React.createElement(Field, {\n  disabled: disabled,\n  error: !!errorText,\n  validationText: errorText,\n  required: required,\n  loading: loading,\n  dataTest: dataTest('shared-fieldusergroup'),\n  name: FIELD_USER_GROUP_NAME,\n  label: i18n.t('User group'),\n  component: SingleSelectFieldFF,\n  options: userGroups,\n  validate: required && hasValue\n});\nFieldUserGroup.defaultProps = {\n  disabled: false,\n  loading: false,\n  required: false,\n  errorText: ''\n};\nFieldUserGroup.propTypes = {\n  userGroups: PropTypes.arrayOf(PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired\n  })).isRequired,\n  disabled: PropTypes.bool,\n  errorText: PropTypes.string,\n  loading: PropTypes.bool,\n  required: PropTypes.bool\n};","import { useDataQuery } from '@dhis2/app-runtime';\nexport const USER_GROUPS_QUERY = {\n  userGroups: {\n    resource: 'userGroups',\n    params: {\n      paging: 'false'\n    }\n  }\n};\nexport const useReadUserGroupsQuery = () => useDataQuery(USER_GROUPS_QUERY);","import { PropTypes } from '@dhis2/prop-types';\nimport { hasValue } from '@dhis2/ui';\nimport React from 'react';\nimport { FieldUserGroup } from './FieldUserGroup.js';\nimport { useReadUserGroupsQuery } from './useReadUserGroupsQuery.js';\nexport const FieldUserGroupWithAutoLoad = ({\n  required\n}) => {\n  const {\n    loading,\n    error,\n    data\n  } = useReadUserGroupsQuery();\n  const validate = required ? hasValue : undefined;\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(FieldUserGroup, {\n      required: required,\n      loading: true,\n      showLoadingStatus: true,\n      userGroups: [],\n      validate: validate\n    });\n  }\n\n  if (error) {\n    return /*#__PURE__*/React.createElement(FieldUserGroup, {\n      required: required,\n      disabled: true,\n      userGroups: [],\n      errorText: error.message,\n      validate: validate\n    });\n  }\n\n  const {\n    userGroups\n  } = data.userGroups;\n  const options = userGroups.map(({\n    id,\n    displayName\n  }) => ({\n    label: displayName,\n    value: id\n  }));\n  return /*#__PURE__*/React.createElement(FieldUserGroup, {\n    required: required,\n    userGroups: options,\n    validate: validate\n  });\n};\nFieldUserGroupWithAutoLoad.defaultProps = {\n  required: false\n};\nFieldUserGroupWithAutoLoad.propTypes = {\n  required: PropTypes.bool\n};","import { PropTypes } from '@dhis2/prop-types';\nimport cx from 'classnames';\nimport React from 'react';\nimport { dataTest } from '../../utils/index.js';\nimport styles from './FormRow.module.css';\nexport const FormRow = ({\n  children,\n  className\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  className: cx(styles.formRow, className),\n  \"data-test\": dataTest('shared-formrow')\n}, children);\nFormRow.propTypes = {\n  children: PropTypes.any.isRequired,\n  className: PropTypes.string\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { ButtonStrip, Button } from '@dhis2/ui';\nimport React from 'react';\nimport { dataTest } from '../../utils/index.js';\nimport styles from './ListActions.module.css';\nexport const ListActions = ({\n  addLabel,\n  deleteLabel,\n  onAddClick,\n  onDeleteClick,\n  disableAdd,\n  disableDelete\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    \"data-test\": dataTest('shared-listactions')\n  }, /*#__PURE__*/React.createElement(ButtonStrip, {\n    \"data-test\": dataTest('shared-listactions-actions')\n  }, /*#__PURE__*/React.createElement(Button, {\n    primary: true,\n    onClick: onAddClick,\n    disabled: disableAdd,\n    dataTest: dataTest(`shared-listactions-add`)\n  }, addLabel), /*#__PURE__*/React.createElement(Button, {\n    destructive: true,\n    onClick: onDeleteClick,\n    disabled: disableDelete,\n    dataTest: dataTest(`shared-listactions-delete`)\n  }, deleteLabel)));\n};\nListActions.propTypes = {\n  addLabel: PropTypes.string.isRequired,\n  deleteLabel: PropTypes.string.isRequired,\n  onAddClick: PropTypes.func.isRequired,\n  onDeleteClick: PropTypes.func.isRequired,\n  disableAdd: PropTypes.bool,\n  disableDelete: PropTypes.bool\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { MenuItem } from '@dhis2/ui';\nimport React from 'react';\nimport { useHistory, useRouteMatch } from 'react-router-dom';\nimport { dataTest } from '../../utils/index.js';\nimport styles from './NavigationItem.module.css';\n\nconst useIsItemActive = (path, exactMatch) => {\n  const routeMatch = useRouteMatch(path);\n\n  if (!routeMatch) {\n    return false;\n  }\n\n  if (exactMatch) {\n    return routeMatch.isExact;\n  }\n\n  return true;\n};\n\nexport const NavigationItem = ({\n  label,\n  path,\n  exactMatch\n}) => {\n  const history = useHistory();\n  const active = useIsItemActive(path, exactMatch);\n\n  const navigateToPath = () => history.push(path);\n\n  return /*#__PURE__*/React.createElement(MenuItem, {\n    className: styles.item,\n    onClick: navigateToPath,\n    active: active,\n    label: label,\n    dataTest: dataTest('shared-navigationitem')\n  });\n};\nNavigationItem.defualtProps = {\n  exactMatch: false\n};\nNavigationItem.propTypes = {\n  label: PropTypes.string.isRequired,\n  path: PropTypes.string.isRequired,\n  exactMatch: PropTypes.bool\n};","import { Menu } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../../locales/index.js';\nimport { dataTest } from '../../utils/index.js';\nimport { NavigationItem } from './NavigationItem.js';\nexport const Navigation = () => /*#__PURE__*/React.createElement(Menu, {\n  dataTest: dataTest('shared-navigation')\n}, /*#__PURE__*/React.createElement(NavigationItem, {\n  path: \"/home\",\n  label: i18n.t('Home'),\n  exactMatch: true\n}), /*#__PURE__*/React.createElement(NavigationItem, {\n  path: \"/sms-gateway\",\n  label: i18n.t('Gateway configuration')\n}), /*#__PURE__*/React.createElement(NavigationItem, {\n  path: \"/sms-command\",\n  label: i18n.t('Commands')\n}), /*#__PURE__*/React.createElement(NavigationItem, {\n  path: \"/sent\",\n  label: i18n.t('Sent')\n}), /*#__PURE__*/React.createElement(NavigationItem, {\n  path: \"/received\",\n  label: i18n.t('Received')\n}));","import { PropTypes } from '@dhis2/prop-types';\nimport React from 'react';\nimport { dataTest } from '../../utils/index.js';\nimport styles from './PageHeadline.module.css';\nexport const PageHeadline = ({\n  children\n}) => /*#__PURE__*/React.createElement(\"h1\", {\n  className: styles.headline,\n  \"data-test\": dataTest('shared-pageheadline')\n}, children);\nPageHeadline.propTypes = {\n  children: PropTypes.string.isRequired\n};","import { PropTypes } from '@dhis2/prop-types';\nimport React from 'react';\nimport { dataTest } from '../../utils/index.js';\nimport styles from './PageSubHeadline.module.css';\nexport const PageSubHeadline = ({\n  children\n}) => /*#__PURE__*/React.createElement(\"h2\", {\n  className: styles.subHeadline,\n  \"data-test\": dataTest('shared-pagesubheadline')\n}, children);\nPageSubHeadline.propTypes = {\n  children: PropTypes.string.isRequired\n};","import { PropTypes } from '@dhis2/prop-types';\nimport React from 'react';\nimport { dataTest } from '../../utils/index.js';\nimport styles from './Paragraph.module.css';\nexport const Paragraph = ({\n  children\n}) => /*#__PURE__*/React.createElement(\"p\", {\n  className: styles.paragraph,\n  \"data-test\": dataTest('shared-paragraph')\n}, children);\nParagraph.propTypes = {\n  children: PropTypes.string.isRequired\n};","import { useQueryParams as _useQueryParams, StringParam, NumberParam, withDefault } from 'use-query-params';\nexport const useQueryParams = () => _useQueryParams({\n  status: withDefault(StringParam, 'ALL'),\n  phoneNumber: withDefault(StringParam, ''),\n  page: withDefault(NumberParam, 1),\n  pageSize: withDefault(NumberParam, 50)\n});","import { FinalForm } from '@dhis2/ui';\nimport { useContext } from 'react';\nimport i18n from '../../../locales/index.js';\nimport { AlertContext } from '../../components/index.js';\nconst {\n  FORM_ERROR\n} = FinalForm;\nexport const useSubmit = onSubmit => {\n  const {\n    addAlert\n  } = useContext(AlertContext);\n  return (...args) => onSubmit(...args).catch(e => {\n    const message = e.message || i18n.t('No error message was provided'); // Notify on unexpected errors\n\n    addAlert({\n      type: 'critical',\n      message: e.message\n    });\n    return {\n      [FORM_ERROR]: message\n    };\n  });\n};","import i18n from '@dhis2/d2-i18n';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { Button, SingleSelect, SingleSelectOption } from '@dhis2/ui';\nimport React from 'react';\nimport { useQueryParams } from '../../hooks/index.js';\nimport styles from './Pagination.module.css';\nconst PAGE_LENGTHS = ['1', '2', '10', '20', '30', '40', '50', '100'];\nexport const Pagination = ({\n  page,\n  pageCount,\n  pageSize,\n  total\n}) => {\n  const firstItem = Math.min((page - 1) * pageSize + 1, total);\n  const lastItem = Math.min(firstItem + pageSize - 1, total);\n  const availablePages = Array.from({\n    length: pageCount\n  }, (_x, i) => (i + 1).toString());\n  const [, setQueryParams] = useQueryParams();\n\n  const setPage = page => {\n    setQueryParams({\n      page\n    });\n  };\n\n  const setPageSize = pageSize => {\n    setQueryParams({\n      pageSize,\n      page: 1\n    });\n  };\n\n  if (pageCount === 0) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.verticalAlign\n  }, i18n.t('Show'), /*#__PURE__*/React.createElement(SingleSelect, {\n    dense: true,\n    selected: pageSize.toString(),\n    onChange: ({\n      selected\n    }) => setPageSize(selected),\n    className: styles.select\n  }, PAGE_LENGTHS.map(length => /*#__PURE__*/React.createElement(SingleSelectOption, {\n    key: length,\n    value: length,\n    label: length\n  }))), i18n.t('per page')), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.verticalAlign\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.summary\n  }, i18n.t('Viewing {{firstItem}}-{{lastItem}} of {{total}}', {\n    firstItem,\n    lastItem,\n    total\n  })), /*#__PURE__*/React.createElement(Button, {\n    className: styles.buttonPrevious,\n    small: true,\n    disabled: page === 1,\n    onClick: () => setPage(page - 1)\n  }, i18n.t('Previous')), /*#__PURE__*/React.createElement(\"span\", null, i18n.t('Page')), /*#__PURE__*/React.createElement(SingleSelect, {\n    dense: true,\n    inputWidth: \"600px\",\n    selected: page.toString(),\n    onChange: ({\n      selected\n    }) => setPage(selected),\n    className: styles.select\n  }, availablePages.map(availablePage => /*#__PURE__*/React.createElement(SingleSelectOption, {\n    key: availablePage,\n    value: availablePage,\n    label: availablePage\n  }))), /*#__PURE__*/React.createElement(\"span\", null, i18n.t('of {{pageCount}}', {\n    pageCount\n  })), /*#__PURE__*/React.createElement(Button, {\n    className: styles.buttonNext,\n    small: true,\n    disabled: page === pageCount,\n    onClick: () => setPage(page + 1)\n  }, i18n.t('Next'))));\n};\nPagination.propTypes = {\n  page: PropTypes.number.isRequired,\n  pageCount: PropTypes.number.isRequired,\n  pageSize: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired\n};","import i18n from '@dhis2/d2-i18n';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { Checkbox, Table, TableBody, TableCell, TableCellHead, TableFoot, TableHead, TableRow, TableRowHead } from '@dhis2/ui';\nimport React from 'react';\nimport { Pagination } from '../pagination/Pagination.js';\nimport styles from './SmsTable.module.css';\nexport const SmsTable = ({\n  messages,\n  pager,\n  selectedIds,\n  setSelectedIds,\n  columns,\n  rowRenderFn\n}) => {\n  const selectedIdSet = new Set(selectedIds);\n  const allSelected = messages.length > 0 && selectedIds.length === messages.length;\n\n  const toggle = id => {\n    if (selectedIdSet.has(id)) {\n      selectedIdSet.delete(id);\n    } else {\n      selectedIdSet.add(id);\n    }\n\n    setSelectedIds(Array.from(selectedIdSet));\n  };\n\n  const toggleAll = () => {\n    if (allSelected) {\n      setSelectedIds([]);\n    } else {\n      setSelectedIds(messages.map(({\n        id\n      }) => id));\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Table, null, /*#__PURE__*/React.createElement(TableHead, null, /*#__PURE__*/React.createElement(TableRowHead, null, /*#__PURE__*/React.createElement(TableCellHead, null, /*#__PURE__*/React.createElement(Checkbox, {\n    disabled: messages.length === 0,\n    onChange: toggleAll,\n    checked: allSelected\n  })), columns.map(column => /*#__PURE__*/React.createElement(TableCellHead, {\n    key: column\n  }, column)))), /*#__PURE__*/React.createElement(TableBody, null, messages.length === 0 ? /*#__PURE__*/React.createElement(TableRow, null, /*#__PURE__*/React.createElement(TableCell, {\n    colSpan: String(columns.length),\n    className: styles.noResults\n  }, i18n.t('No SMSes to display'))) : messages.map(message => /*#__PURE__*/React.createElement(TableRow, {\n    key: message.id\n  }, /*#__PURE__*/React.createElement(TableCell, null, /*#__PURE__*/React.createElement(Checkbox, {\n    checked: selectedIdSet.has(message.id),\n    onChange: () => toggle(message.id)\n  })), rowRenderFn(message)))), /*#__PURE__*/React.createElement(TableFoot, null, /*#__PURE__*/React.createElement(TableRow, null, /*#__PURE__*/React.createElement(TableCell, {\n    colSpan: String(columns.length)\n  }, /*#__PURE__*/React.createElement(Pagination, pager)))));\n};\nSmsTable.propTypes = {\n  columns: PropTypes.arrayOf(PropTypes.string).isRequired,\n  messages: PropTypes.arrayOf(PropTypes.object).isRequired,\n  pager: PropTypes.PropTypes.object.isRequired,\n  rowRenderFn: PropTypes.func.isRequired,\n  selectedIds: PropTypes.arrayOf(PropTypes.string).isRequired,\n  setSelectedIds: PropTypes.func.isRequired\n};","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { dataTest } from '../../utils/index.js';\nimport styles from './LayoutContainer.module.css';\nexport const LayoutContainer = ({\n  children\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  className: styles.container,\n  \"data-test\": dataTest('shared-layoutcontainer')\n}, children);\nLayoutContainer.propTypes = {\n  children: PropTypes.any.isRequired\n};","import PropTypes from 'prop-types';\nimport React from 'react';\nimport styles from './LayoutContent.module.css';\nexport const LayoutContent = ({\n  children\n}) => /*#__PURE__*/React.createElement(\"main\", {\n  className: styles.content\n}, children);\nLayoutContent.propTypes = {\n  children: PropTypes.any.isRequired\n};","import PropTypes from 'prop-types';\nimport React from 'react';\nimport styles from './LayoutSidebar.module.css';\nexport const LayoutSidebar = ({\n  children\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  className: styles.sidebar\n}, children);\nLayoutSidebar.propTypes = {\n  children: PropTypes.any.isRequired\n};","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Navigation } from '../Navigation/index.js';\nimport { LayoutContainer } from './LayoutContainer.js';\nimport { LayoutContent } from './LayoutContent.js';\nimport { LayoutSidebar } from './LayoutSidebar.js';\nexport const TemplateSidebarNavContent = ({\n  children\n}) => /*#__PURE__*/React.createElement(LayoutContainer, null, /*#__PURE__*/React.createElement(LayoutSidebar, null, /*#__PURE__*/React.createElement(Navigation, null)), /*#__PURE__*/React.createElement(LayoutContent, null, children));\nTemplateSidebarNavContent.propTypes = {\n  children: PropTypes.any.isRequired\n};","import { PropTypes } from '@dhis2/prop-types';\nimport moment from 'moment';\nimport React from 'react';\nimport styles from './Time.module.css';\nexport const Time = ({\n  time\n}) => {\n  const momentDate = moment(time);\n  const formatted = momentDate.format('HH:mm:ss');\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.time\n  }, formatted);\n};\nTime.propTypes = {\n  time: PropTypes.string.isRequired\n};","import './locales/index.js';\nimport { CssVariables } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { HashRouter, Route } from 'react-router-dom';\nimport { QueryParamProvider } from 'use-query-params';\nimport { AlertHandler } from './shared/components/index.js';\nexport const AppWrapper = ({\n  children\n}) => /*#__PURE__*/React.createElement(AlertHandler, null, /*#__PURE__*/React.createElement(CssVariables, {\n  spacers: true,\n  colors: true\n}), /*#__PURE__*/React.createElement(HashRouter, null, /*#__PURE__*/React.createElement(QueryParamProvider, {\n  ReactRouterRoute: Route\n}, children)));\nAppWrapper.propTypes = {\n  children: PropTypes.any.isRequired\n};","import { InputFieldFF, ReactFinalForm, composeValidators, hasValue, string } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales/index.js';\nimport { dataTest } from '../../shared/index.js';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FIELD_COMMAND_NAME = 'name';\nexport const FieldCommandName = () => /*#__PURE__*/React.createElement(Field, {\n  required: true,\n  dataTest: dataTest('smscommand-fieldcommandname'),\n  name: FIELD_COMMAND_NAME,\n  label: i18n.t('Name'),\n  component: InputFieldFF,\n  validate: composeValidators(string, hasValue)\n});","import { PropTypes } from '@dhis2/prop-types';\nimport { SingleSelectFieldFF, ReactFinalForm, hasValue } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales/index.js';\nimport { dataTest } from '../../shared/index.js';\nconst {\n  Field\n} = ReactFinalForm; // The \"s\" from \"set\" is not capitalized\n// as the property on the java-model\n// does not have a capitalized \"s\" either\n//\n// @TODO: Create issue to make it consistent\n\nexport const FIELD_DATA_SET_NAME = 'dataset';\nexport const FieldDataSet = ({\n  dataSets,\n  loading,\n  required,\n  disabled,\n  errorText\n}) => /*#__PURE__*/React.createElement(Field, {\n  disabled: disabled,\n  error: !!errorText,\n  validationText: errorText,\n  required: required,\n  loading: loading,\n  dataTest: dataTest('smscommand-fielddataset'),\n  name: FIELD_DATA_SET_NAME,\n  label: i18n.t('Data set'),\n  component: SingleSelectFieldFF,\n  options: dataSets,\n  validate: hasValue,\n  format: value => (value === null || value === void 0 ? void 0 : value.id) || null,\n  parse: id => ({\n    id\n  })\n});\nFieldDataSet.defaultProps = {\n  disabled: false,\n  loading: false,\n  required: false,\n  errorText: ''\n};\nFieldDataSet.propTypes = {\n  dataSets: PropTypes.arrayOf(PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired\n  })).isRequired,\n  disabled: PropTypes.bool,\n  errorText: PropTypes.string,\n  loading: PropTypes.bool,\n  required: PropTypes.bool\n};","import { useDataQuery } from '@dhis2/app-runtime';\nexport const DATA_SETS_QUERY = {\n  dataSets: {\n    resource: 'dataSets',\n    params: {\n      fields: ['id', 'displayName'],\n      paging: 'false'\n    }\n  }\n};\nexport const useReadDataSetsQuery = () => useDataQuery(DATA_SETS_QUERY);","import { PropTypes } from '@dhis2/prop-types';\nimport { hasValue } from '@dhis2/ui';\nimport React from 'react';\nimport { FieldDataSet } from './FieldDataSet.js';\nimport { useReadDataSetsQuery } from './useReadDataSetsQuery.js';\nexport const FieldDataSetWithAutoLoad = ({\n  required\n}) => {\n  const {\n    loading,\n    error,\n    data\n  } = useReadDataSetsQuery();\n  const validate = required ? hasValue : undefined;\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(FieldDataSet, {\n      loading: true,\n      showLoadingStatus: true,\n      required: required,\n      dataSets: [],\n      validate: validate\n    });\n  }\n\n  if (error) {\n    return /*#__PURE__*/React.createElement(FieldDataSet, {\n      required: required,\n      disabled: true,\n      programs: [],\n      errorText: error.message,\n      validate: validate\n    });\n  }\n\n  const {\n    dataSets\n  } = data.dataSets;\n  const options = dataSets.map(({\n    id,\n    displayName\n  }) => ({\n    label: displayName,\n    value: id\n  }));\n  return /*#__PURE__*/React.createElement(FieldDataSet, {\n    required: required,\n    dataSets: options,\n    validate: validate\n  });\n};\nFieldDataSetWithAutoLoad.defaultProps = {\n  required: false\n};\nFieldDataSetWithAutoLoad.propTypes = {\n  required: PropTypes.bool\n};","import i18n from '../../locales/index.js';\nconst KEY_VALUE_PARSER = {\n  value: 'KEY_VALUE_PARSER',\n  label: i18n.t('Key value parser')\n}; // @TODO: This parser is not listed in the docs,\n//        but it's listed in the original source code\n//   -> docs: https://docs.dhis2.org/master/en/dhis2_developer_manual/web-api.html#sms-command-values\n//   -> code: https://github.com/dhis2/dhis2-core/blob/79bd77ecf52051b00e3ba96eb1aca4d0a6063ed1/dhis-2/dhis-web/dhis-web-maintenance/dhis-web-maintenance-mobile/src/main/webapp/dhis-web-maintenance-mobile/smscommand/edit-sms-command.vm#L188\n\nconst J2ME_PARSER = {\n  value: 'J2ME_PARSER',\n  label: i18n.t('J2ME parser')\n};\nconst ALERT_PARSER = {\n  value: 'ALERT_PARSER',\n  label: i18n.t('Alert parser')\n};\nconst UNREGISTERED_PARSER = {\n  value: 'UNREGISTERED_PARSER',\n  label: i18n.t('Unregistered parser')\n};\nconst TRACKED_ENTITY_REGISTRATION_PARSER = {\n  value: 'TRACKED_ENTITY_REGISTRATION_PARSER',\n  label: i18n.t('Tracked entity registration parser')\n};\nconst PROGRAM_STAGE_DATAENTRY_PARSER = {\n  value: 'PROGRAM_STAGE_DATAENTRY_PARSER',\n  label: i18n.t('Program stage data entry parser')\n};\nconst EVENT_REGISTRATION_PARSER = {\n  value: 'EVENT_REGISTRATION_PARSER',\n  label: i18n.t('Event registration parser')\n};\nexport const parserTypes = {\n  KEY_VALUE_PARSER,\n  J2ME_PARSER,\n  ALERT_PARSER,\n  UNREGISTERED_PARSER,\n  TRACKED_ENTITY_REGISTRATION_PARSER,\n  PROGRAM_STAGE_DATAENTRY_PARSER,\n  EVENT_REGISTRATION_PARSER\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { SingleSelectFieldFF, ReactFinalForm, hasValue } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales/index.js';\nimport { dataTest } from '../../shared/index.js';\nimport { parserTypes } from './parserTypes.js';\nconst {\n  Field\n} = ReactFinalForm;\nconst options = Object.values(parserTypes).sort((a, b) => {\n  if (a.label < b.label) {\n    return -1;\n  }\n\n  if (a.label > b.label) {\n    return 1;\n  }\n\n  return 0;\n});\nexport const FIELD_PARSER_NAME = 'parserType';\nexport const FieldParser = ({\n  disabled\n}) => /*#__PURE__*/React.createElement(Field, {\n  required: true,\n  disabled: disabled,\n  dataTest: dataTest('smscommand-fieldparser'),\n  name: FIELD_PARSER_NAME,\n  label: i18n.t('Parser'),\n  component: SingleSelectFieldFF,\n  options: options,\n  validate: hasValue\n});\nFieldParser.defaultProps = {\n  disabled: false\n};\nFieldParser.propTypes = {\n  disabled: PropTypes.bool\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { SingleSelectFieldFF, ReactFinalForm, hasValue } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales/index.js';\nimport { dataTest } from '../../shared/index.js';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FIELD_PROGRAM_NAME = 'program';\nexport const FieldProgram = ({\n  programs,\n  loading,\n  required,\n  disabled,\n  errorText\n}) => /*#__PURE__*/React.createElement(Field, {\n  error: !!errorText,\n  validationText: errorText,\n  disabled: disabled,\n  required: required,\n  loading: loading,\n  dataTest: dataTest('smscommand-fieldprogram'),\n  name: FIELD_PROGRAM_NAME,\n  label: i18n.t('Program'),\n  component: SingleSelectFieldFF,\n  options: programs,\n  validate: required && hasValue,\n  format: value => (value === null || value === void 0 ? void 0 : value.id) || null,\n  parse: id => ({\n    id\n  })\n});\nFieldProgram.defaultProps = {\n  disabled: false,\n  errorText: '',\n  loading: false,\n  required: false\n};\nFieldProgram.propTypes = {\n  programs: PropTypes.arrayOf(PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired\n  })).isRequired,\n  disabled: PropTypes.bool,\n  errorText: PropTypes.string,\n  loading: PropTypes.bool,\n  required: PropTypes.bool\n};","const PROGRAMS_WITH_REGISTRATION = 'PROGRAMS_WITH_REGISTRATION';\nconst PROGRAMS_WITHOUT_REGISTRATION = 'PROGRAMS_WITHOUT_REGISTRATION';\nconst ALL_PROGRAMS = 'ALL_PROGRAMS';\nexport const programTypes = {\n  PROGRAMS_WITH_REGISTRATION,\n  PROGRAMS_WITHOUT_REGISTRATION,\n  ALL_PROGRAMS\n};","import { useDataQuery } from '@dhis2/app-runtime';\nimport { programTypes } from './programTypes.js';\nconst PROGRAMS_QUERY = {\n  programs: {\n    resource: 'programs',\n    params: ({\n      registration\n    }) => {\n      const params = {\n        paging: 'false'\n      };\n\n      if (registration === programTypes.PROGRAMS_WITH_REGISTRATION) {\n        params.filter = 'programType:eq:WITH_REGISTRATION';\n      } else if (registration === programTypes.PROGRAMS_WITHOUT_REGISTRATION) {\n        params.filter = 'programType:eq:WITHOUT_REGISTRATION';\n      }\n\n      return params;\n    }\n  }\n};\nexport const useReadProgramsQuery = registration => useDataQuery(PROGRAMS_QUERY, {\n  variables: {\n    registration\n  }\n});","import { PropTypes } from '@dhis2/prop-types';\nimport { hasValue, ReactFinalForm } from '@dhis2/ui';\nimport React, { useEffect } from 'react';\nimport { FIELD_PROGRAM_NAME, FieldProgram } from './FieldProgram.js';\nimport { programTypes } from './programTypes.js';\nimport { useReadProgramsQuery } from './useReadProgramsQuery.js';\nconst {\n  ALL_PROGRAMS\n} = programTypes;\nconst {\n  useForm\n} = ReactFinalForm;\nexport const FieldProgramWithAutoLoad = ({\n  required,\n  registration\n}) => {\n  const form = useForm();\n  const validate = required ? hasValue : undefined;\n  const {\n    loading,\n    error,\n    data,\n    refetch\n  } = useReadProgramsQuery({\n    lazy: true\n  });\n  useEffect(() => {\n    const variables = {\n      registration\n    };\n    form.change(FIELD_PROGRAM_NAME, null);\n    refetch(variables);\n  }, [registration]);\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(FieldProgram, {\n      required: required,\n      loading: true,\n      showLoadingStatus: true,\n      programs: [],\n      validate: validate\n    });\n  }\n\n  if (error) {\n    return /*#__PURE__*/React.createElement(FieldProgram, {\n      required: required,\n      disabled: true,\n      programs: [],\n      errorText: error.message,\n      validate: validate\n    });\n  }\n\n  const {\n    programs\n  } = data.programs;\n  const options = programs.map(({\n    id,\n    displayName\n  }) => ({\n    label: displayName,\n    value: id\n  }));\n  return /*#__PURE__*/React.createElement(FieldProgram, {\n    required: required,\n    programs: options,\n    validate: validate\n  });\n};\nFieldProgramWithAutoLoad.defaultProps = {\n  required: false,\n  registration: ALL_PROGRAMS\n};\nFieldProgramWithAutoLoad.propTypes = {\n  registration: PropTypes.string,\n  required: PropTypes.bool\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { SingleSelectFieldFF, ReactFinalForm, hasValue } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales/index.js';\nimport { dataTest } from '../../shared/index.js';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FIELD_PROGRAM_STAGE_NAME = 'programStage';\nexport const FieldProgramStage = ({\n  programStages,\n  disabled,\n  loading,\n  initialValue,\n  required,\n  errorText\n}) => /*#__PURE__*/React.createElement(Field, {\n  component: SingleSelectFieldFF,\n  dataTest: dataTest('smscommand-fieldprogramstage'),\n  disabled: disabled,\n  error: !!errorText,\n  format: value => (value === null || value === void 0 ? void 0 : value.id) || null,\n  iinitialValue: initialValue,\n  label: i18n.t('Program stage'),\n  loading: loading,\n  name: FIELD_PROGRAM_STAGE_NAME,\n  options: programStages,\n  parse: id => ({\n    id\n  }),\n  required: required,\n  validate: required && hasValue,\n  validationText: errorText\n});\nFieldProgramStage.defaultProps = {\n  disabled: false,\n  loading: false,\n  required: false,\n  errorText: ''\n};\nFieldProgramStage.propTypes = {\n  programStages: PropTypes.arrayOf(PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired\n  })).isRequired,\n  disabled: PropTypes.bool,\n  errorText: PropTypes.string,\n  initialValue: PropTypes.string,\n  loading: PropTypes.bool,\n  required: PropTypes.bool\n};","import { useDataQuery } from '@dhis2/app-runtime';\nexport const PROGRAM_STAGES_QUERY = {\n  programStages: {\n    resource: 'programStages',\n    params: ({\n      programId\n    }) => ({\n      paging: 'false',\n      filter: programId ? `program.id:eq:${programId}` : undefined\n    })\n  }\n};\nexport const useReadProgramStagesQuery = ({\n  programId,\n  lazy\n}) => useDataQuery(PROGRAM_STAGES_QUERY, {\n  variables: {\n    programId\n  },\n  lazy\n});","import { PropTypes } from '@dhis2/prop-types';\nimport { hasValue, ReactFinalForm } from '@dhis2/ui';\nimport React, { useEffect } from 'react';\nimport { parserTypes } from '../FieldParser/index.js';\nimport { FIELD_PROGRAM_STAGE_NAME, FieldProgramStage } from './FieldProgramStage.js';\nimport { useReadProgramStagesQuery } from './useReadProgramStagesQuery.js';\nconst {\n  useForm\n} = ReactFinalForm;\nconst {\n  EVENT_REGISTRATION_PARSER\n} = parserTypes;\nexport const FieldProgramStageWithLoadingStates = ({\n  parserType,\n  programId,\n  disabled,\n  required\n}) => {\n  var _data$programStages2, _data$programStages3;\n\n  const form = useForm();\n  const {\n    loading,\n    error,\n    data,\n    refetch\n  } = useReadProgramStagesQuery({\n    lazy: true\n  });\n  const validate = required ? hasValue : undefined;\n  useEffect(() => {\n    if (programId) {\n      refetch({\n        programId\n      });\n    }\n  }, [programId]);\n  useEffect(() => {\n    var _data$programStages, _data$programStages$p;\n\n    const isEventRegistrationParser = parserType === EVENT_REGISTRATION_PARSER.value;\n    const programStageValueForEventRegistration = {\n      id: data === null || data === void 0 ? void 0 : (_data$programStages = data.programStages) === null || _data$programStages === void 0 ? void 0 : (_data$programStages$p = _data$programStages.programStages[0]) === null || _data$programStages$p === void 0 ? void 0 : _data$programStages$p.id\n    };\n    const initialValue = isEventRegistrationParser ? programStageValueForEventRegistration : undefined;\n    form.change(FIELD_PROGRAM_STAGE_NAME, initialValue);\n  }, [parserType, data === null || data === void 0 ? void 0 : (_data$programStages2 = data.programStages) === null || _data$programStages2 === void 0 ? void 0 : _data$programStages2.programStages]);\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(FieldProgramStage, {\n      loading: true,\n      disabled: disabled,\n      required: required,\n      programStages: [],\n      validate: validate\n    });\n  }\n\n  if (error) {\n    return /*#__PURE__*/React.createElement(FieldProgramStage, {\n      disabled: true,\n      errorText: error.message,\n      required: required,\n      programStages: [],\n      validate: validate\n    });\n  }\n\n  if (!programId || !data) {\n    return /*#__PURE__*/React.createElement(FieldProgramStage, {\n      disabled: true,\n      required: required,\n      programStages: [],\n      validate: validate\n    });\n  }\n\n  const programStages = (data === null || data === void 0 ? void 0 : (_data$programStages3 = data.programStages) === null || _data$programStages3 === void 0 ? void 0 : _data$programStages3.programStages) || [];\n  const options = programStages.map(({\n    id,\n    displayName\n  }) => ({\n    label: displayName,\n    value: id\n  }));\n  return /*#__PURE__*/React.createElement(FieldProgramStage, {\n    disabled: disabled,\n    required: required,\n    programStages: options\n  });\n};\nFieldProgramStageWithLoadingStates.defaultProps = {\n  disabled: false,\n  required: false\n};\nFieldProgramStageWithLoadingStates.propTypes = {\n  parserType: PropTypes.string.isRequired,\n  programId: PropTypes.string.isRequired,\n  disabled: PropTypes.bool,\n  required: PropTypes.bool\n};","import { useDataMutation } from '@dhis2/app-runtime';\nimport { parserTypes } from '../FieldParser/index.js';\nconst {\n  ALERT_PARSER,\n  EVENT_REGISTRATION_PARSER,\n  J2ME_PARSER,\n  KEY_VALUE_PARSER,\n  PROGRAM_STAGE_DATAENTRY_PARSER,\n  TRACKED_ENTITY_REGISTRATION_PARSER,\n  UNREGISTERED_PARSER\n} = parserTypes;\nexport const CREATE_SMS_COMMAND_MUTATION = {\n  resource: 'smsCommands',\n  type: 'create',\n\n  /*\n   * @param {Object} args\n   * @param {string} args.parserType\n   * @param {string} args.name\n   * @param {string} args.dataset (id)\n   * @param {string} args.userGroup (id)\n   * @param {string} args.program (id)\n   * @param {string} args.programStage (id)\n   * @returns {Object}\n   */\n  data: ({\n    parserType,\n    name,\n    dataset,\n    userGroup,\n    program,\n    programStage\n  }) => {\n    if (parserType === KEY_VALUE_PARSER.value || parserType === J2ME_PARSER.value) {\n      return {\n        parserType,\n        name,\n        dataset\n      };\n    }\n\n    if (parserType === ALERT_PARSER.value || parserType === UNREGISTERED_PARSER.value) {\n      return {\n        parserType,\n        name,\n        userGroup: {\n          id: userGroup\n        }\n      };\n    }\n\n    if (parserType === TRACKED_ENTITY_REGISTRATION_PARSER.value) {\n      return {\n        parserType,\n        name,\n        program\n      };\n    }\n\n    if (parserType === PROGRAM_STAGE_DATAENTRY_PARSER.value || parserType === EVENT_REGISTRATION_PARSER.value) {\n      return {\n        parserType,\n        name,\n        program,\n        programStage\n      };\n    }\n\n    throw new Error(`You provided an unrecognized parserType \"${parserType}\"`);\n  }\n};\nexport const useCreateSmsCommandMutation = ({\n  onComplete,\n  onError\n}) => useDataMutation(CREATE_SMS_COMMAND_MUTATION, {\n  onComplete,\n  onError\n});","import { PropTypes } from '@dhis2/prop-types';\nimport { Button, ButtonStrip, ReactFinalForm, CircularLoader } from '@dhis2/ui';\nimport React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport i18n from '../../locales/index.js';\nimport { FormRow, PageHeadline, FieldUserGroupWithAutoLoad, TemplateSidebarNavContent, dataTest } from '../../shared/index.js';\nimport { FieldCommandName } from '../FieldCommandName/index.js';\nimport { FieldDataSetWithAutoLoad } from '../FieldDataSet/index.js';\nimport { FIELD_PARSER_NAME, FieldParser, parserTypes } from '../FieldParser/index.js';\nimport { FIELD_PROGRAM_NAME, FieldProgramWithAutoLoad, programTypes } from '../FieldProgram/index.js';\nimport { FIELD_PROGRAM_STAGE_NAME, FieldProgramStageWithLoadingStates } from '../FieldProgramStage/index.js';\nimport { useCreateSmsCommandMutation } from './useCreateSmsCommandMutation.js';\nimport styles from './ViewSmsCommandAdd.module.css';\nconst {\n  ALL_PROGRAMS,\n  PROGRAMS_WITH_REGISTRATION,\n  PROGRAMS_WITHOUT_REGISTRATION\n} = programTypes;\nconst {\n  Form,\n  useForm\n} = ReactFinalForm;\nconst {\n  ALERT_PARSER,\n  EVENT_REGISTRATION_PARSER,\n  J2ME_PARSER,\n  KEY_VALUE_PARSER,\n  PROGRAM_STAGE_DATAENTRY_PARSER,\n  TRACKED_ENTITY_REGISTRATION_PARSER,\n  UNREGISTERED_PARSER\n} = parserTypes;\nexport const SMS_COMMAND_FORM_NEW_PATH = '/sms-config/new';\n\nconst useResetFormFields = () => {\n  const form = useForm();\n  const [prevValues, setPrevValues] = useState(form.getState().values);\n  useEffect(() => form.subscribe(({\n    values\n  }) => {\n    form.batch(() => {\n      const parserType = values[FIELD_PARSER_NAME];\n      const program = values[FIELD_PROGRAM_NAME];\n      const programStage = values[FIELD_PROGRAM_STAGE_NAME];\n      const prevProgram = prevValues[FIELD_PROGRAM_NAME];\n      const prevParserType = prevValues[FIELD_PARSER_NAME];\n      const programChanged = prevProgram && program !== prevProgram;\n      const parserTypeChanged = prevParserType && parserType !== prevParserType;\n\n      if ( // only unset program stage if one exists already\n      programStage && (programChanged || parserTypeChanged)) {\n        form.change(FIELD_PROGRAM_STAGE_NAME, null);\n      }\n    });\n    setPrevValues(values);\n  }, {\n    values: true\n  }), [prevValues]);\n}; // undefined = all, false = program.programType --> WITHOUT_REGISTRATION\n\n\nconst shouldProgramsBeWithRegistration = parserType => {\n  // EVENT_REGISTRATION uses event programs\n  if (parserType === EVENT_REGISTRATION_PARSER.value) {\n    return PROGRAMS_WITHOUT_REGISTRATION;\n  } // This is for programs of type tracker,\n  // which can have multiple program stages\n\n\n  if (parserType === PROGRAM_STAGE_DATAENTRY_PARSER.value) {\n    return PROGRAMS_WITH_REGISTRATION;\n  } // Unrelated yet, but in case all program stages are need in the future\n\n\n  return ALL_PROGRAMS;\n};\n\nconst ActualForm = ({\n  handleSubmit,\n  submitting\n}) => {\n  // This is required to unset form fields that depend\n  // on the selected value of a previous field\n  useResetFormFields();\n  const history = useHistory();\n  const form = useForm();\n  const {\n    values\n  } = form.getState();\n  const parserType = values[FIELD_PARSER_NAME];\n  const program = values[FIELD_PROGRAM_NAME];\n  const showDataSetField = parserType === KEY_VALUE_PARSER.value || parserType === J2ME_PARSER.value;\n  const showUserGroupField = parserType === ALERT_PARSER.value || parserType === UNREGISTERED_PARSER.value;\n  const showProgramField = parserType === TRACKED_ENTITY_REGISTRATION_PARSER.value || parserType === PROGRAM_STAGE_DATAENTRY_PARSER.value || parserType === EVENT_REGISTRATION_PARSER.value;\n  const showProgramStageField = parserType === EVENT_REGISTRATION_PARSER.value || parserType === PROGRAM_STAGE_DATAENTRY_PARSER.value;\n  const registration = shouldProgramsBeWithRegistration(parserType);\n  const disableProgramStage = parserType === EVENT_REGISTRATION_PARSER.value;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container\n  }, /*#__PURE__*/React.createElement(PageHeadline, null, i18n.t('Add command')), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit\n  }, /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldCommandName, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldParser, null)), showDataSetField && /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldDataSetWithAutoLoad, {\n    required: true\n  })), showUserGroupField && /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldUserGroupWithAutoLoad, {\n    required: true\n  })), showProgramField && /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldProgramWithAutoLoad, {\n    required: true,\n    registration: registration\n  })), showProgramStageField && /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldProgramStageWithLoadingStates, {\n    disabled: disableProgramStage,\n    required: true,\n    programId: (program === null || program === void 0 ? void 0 : program.id) || '',\n    parserType: parserType,\n    helpText: disableProgramStage ? i18n.t('Automatically selected by selecting a program') : undefined\n  })), /*#__PURE__*/React.createElement(ButtonStrip, null, /*#__PURE__*/React.createElement(Button, {\n    primary: true,\n    type: \"submit\",\n    icon: submitting ? /*#__PURE__*/React.createElement(CircularLoader, {\n      small: true\n    }) : null,\n    disabled: submitting\n  }, i18n.t('Add command')), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => history.goBack()\n  }, i18n.t('Cancel')))));\n};\n\nActualForm.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n  submitting: PropTypes.bool.isRequired\n};\nexport const ViewSmsCommandAdd = () => {\n  const history = useHistory();\n  const [createSmsCommand] = useCreateSmsCommandMutation({\n    onComplete: () => history.push('/sms-command')\n  });\n\n  const onSubmit = values => createSmsCommand(values);\n\n  return /*#__PURE__*/React.createElement(TemplateSidebarNavContent, null, /*#__PURE__*/React.createElement(\"div\", {\n    \"data-test\": dataTest('smscommand-viewsmscommandadd')\n  }, /*#__PURE__*/React.createElement(Form, {\n    destroyOnUnregister: true,\n    onSubmit: onSubmit\n  }, ({\n    handleSubmit,\n    submitting\n  }) => /*#__PURE__*/React.createElement(ActualForm, {\n    handleSubmit: handleSubmit,\n    submitting: submitting\n  }))));\n};","import { TextAreaFieldFF, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales/index.js';\nimport { dataTest } from '../../shared/index.js';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FIELD_CONFIRM_MESSAGE_NAME = 'receivedMessage';\nexport const FieldConfirmMessage = () => /*#__PURE__*/React.createElement(Field, {\n  dataTest: dataTest('smscommand-fieldconfirmmessage'),\n  name: FIELD_CONFIRM_MESSAGE_NAME,\n  label: i18n.t('Confirm message'),\n  component: TextAreaFieldFF\n});","import { PropTypes } from '@dhis2/prop-types';\nimport { Button, CircularLoader, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales/index.js';\nconst {\n  useFormState\n} = ReactFinalForm;\nconst subscription = {\n  submitting: true,\n  pristine: true\n};\nexport const SaveCommandButton = ({\n  enabled\n}) => {\n  const {\n    submitting,\n    pristine\n  } = useFormState({\n    subscription\n  });\n  const disabled = pristine || submitting;\n  return /*#__PURE__*/React.createElement(Button, {\n    primary: true,\n    type: \"submit\",\n    disabled: !enabled && disabled,\n    icon: submitting ? /*#__PURE__*/React.createElement(CircularLoader, {\n      small: true\n    }) : null\n  }, i18n.t('Save command'));\n};\nSaveCommandButton.defaultProps = {\n  enabled: false\n};\nSaveCommandButton.propTypes = {\n  /*\n   * This prop is used when fields, stored as array entries\n   * in the form state, are being removed while the form\n   * is still pristine.\n   *\n   * Form some reasons, RFF doesn't recognize this as a change\n   * and keeps the form state's pristine value `true`\n   */\n  enabled: PropTypes.bool\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { Button, ButtonStrip } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales/index.js';\nimport { FormRow } from '../../shared/index.js';\nimport { SaveCommandButton } from './SaveCommandButton.js';\nexport const FormActions = ({\n  enableSubmit,\n  onCancel\n}) => /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(ButtonStrip, null, /*#__PURE__*/React.createElement(SaveCommandButton, {\n  enabled: enableSubmit\n}), /*#__PURE__*/React.createElement(Button, {\n  onClick: onCancel\n}, i18n.t('Cancel'))));\nFormActions.propTypes = {\n  onCancel: PropTypes.func.isRequired,\n  enableSubmit: PropTypes.bool\n};","import { NoticeBox, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales/index.js';\nimport { FormRow } from '../../shared/index.js';\nconst {\n  useFormState\n} = ReactFinalForm;\nconst subscription = {\n  submitError: true,\n  hasSubmitErrors: true\n};\nexport const SubmitErrors = () => {\n  const {\n    submitError,\n    hasSubmitErrors\n  } = useFormState({\n    subscription\n  });\n\n  if (!hasSubmitErrors) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(NoticeBox, {\n    error: true,\n    title: i18n.t('Something went wrong whilst submitting the form')\n  }, submitError));\n};","import { PropTypes } from '@dhis2/prop-types';\nimport React from 'react';\nimport { FormRow, FieldUserGroup, dataTest } from '../../shared/index.js';\nimport { FieldCommandName } from '../FieldCommandName/index.js';\nimport { FieldConfirmMessage } from '../FieldConfirmMessage/index.js';\nimport { FieldParser } from '../FieldParser/index.js';\nimport { FormActions } from '../FormActions/index.js';\nimport { SubmitErrors } from '../SubmitErrors/index.js';\nexport const Form = ({\n  userGroups,\n  handleSubmit,\n  pristine,\n  onCancel\n}) => /*#__PURE__*/React.createElement(\"form\", {\n  onSubmit: handleSubmit,\n  \"data-test\": dataTest('smscommand-formalertparser-form')\n}, /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldCommandName, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldParser, {\n  disabled: true\n})), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldUserGroup, {\n  disabled: true,\n  userGroups: userGroups\n})), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldConfirmMessage, null)), /*#__PURE__*/React.createElement(SubmitErrors, null), /*#__PURE__*/React.createElement(FormActions, {\n  onCancel: () => onCancel(pristine)\n}));\nForm.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n  pristine: PropTypes.bool.isRequired,\n  userGroups: PropTypes.arrayOf(PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired\n  })).isRequired,\n  onCancel: PropTypes.func.isRequired\n};","import { useDataQuery } from '@dhis2/app-runtime';\nconst ALERT_DATA_QUERY = {\n  smsCommand: {\n    resource: 'smsCommands',\n    type: 'update',\n    id: ({\n      commandId\n    }) => commandId,\n    params: {\n      fields: ['name', 'parserType', 'receivedMessage', 'userGroup[name,id]']\n    }\n  }\n};\nexport const useAlertDataQuery = commandId => {\n  const variables = {\n    commandId\n  };\n  return useDataQuery(ALERT_DATA_QUERY, {\n    variables\n  });\n};","import { useDataEngine } from '@dhis2/app-runtime';\nimport { useSubmit } from '../../shared/index.js';\nconst updateAlertParserMutation = {\n  resource: 'smsCommands',\n  type: 'update',\n  id: ({\n    id\n  }) => id,\n  partial: true,\n  data: ({\n    name,\n    parserType,\n    receivedMessage,\n    userGroup\n  }) => ({\n    name,\n    parserType,\n    receivedMessage,\n    userGroup\n  })\n};\nexport const useUpdateCommandMutation = ({\n  id,\n  onAfterChange\n}) => {\n  const engine = useDataEngine();\n\n  const onSubmit = values => {\n    const variables = { ...values,\n      id\n    };\n    return engine.mutate(updateAlertParserMutation, {\n      variables\n    }).then(onAfterChange);\n  };\n\n  return useSubmit(onSubmit);\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales/index.js';\nimport { ContentLoading, ContentLoadingError } from '../../shared/index.js';\nimport { createInitialValues } from './createInitialValues.js';\nimport { createUserGroupOptions } from './createUserGroupOptions.js';\nimport { Form as FormComponent } from './Form.js';\nimport { useAlertDataQuery } from './useAlertDataQuery.js';\nimport { useUpdateCommandMutation } from './useUpdateCommandMutation.js';\nconst {\n  Form\n} = ReactFinalForm;\nexport const FormAlertParser = ({\n  commandId,\n  onAfterChange,\n  onCancel\n}) => {\n  const {\n    loading,\n    error,\n    data\n  } = useAlertDataQuery(commandId);\n  const updateCommand = useUpdateCommandMutation({\n    id: commandId,\n    onAfterChange\n  });\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(ContentLoading, null);\n  }\n\n  if (error) {\n    return /*#__PURE__*/React.createElement(ContentLoadingError, {\n      errorMessage: error.message,\n      title: i18n.t('Something went wrong whilst loading the sms command')\n    });\n  }\n\n  const initialValues = createInitialValues(data.smsCommand);\n  const userGroups = createUserGroupOptions(data.smsCommand.userGroup);\n  return /*#__PURE__*/React.createElement(Form, {\n    keepDirtyOnReinitialize: true,\n    onSubmit: updateCommand,\n    initialValues: initialValues\n  }, ({\n    handleSubmit,\n    pristine\n  }) => /*#__PURE__*/React.createElement(FormComponent, {\n    userGroups: userGroups,\n    handleSubmit: handleSubmit,\n    pristine: pristine,\n    onCancel: onCancel\n  }));\n};\nFormAlertParser.propTypes = {\n  commandId: PropTypes.string.isRequired,\n  onAfterChange: PropTypes.func.isRequired,\n  onCancel: PropTypes.func.isRequired\n};","export const createInitialValues = ({\n  name,\n  parserType,\n  receivedMessage,\n  userGroup\n}) => ({\n  name,\n  parserType,\n  receivedMessage,\n  userGroup: userGroup.id\n});","export const createUserGroupOptions = userGroup => [{\n  value: userGroup.id,\n  label: userGroup.name\n}];","import { TextAreaFieldFF, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales/index.js';\nimport { dataTest } from '../../shared/index.js';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FIELD_DEFAULT_MESSAGE_NAME = 'defaultMessage';\nexport const FieldDefaultMessage = () => /*#__PURE__*/React.createElement(Field, {\n  dataTest: dataTest('smscommand-fielddefaultmessage'),\n  name: FIELD_DEFAULT_MESSAGE_NAME,\n  label: i18n.t('Reply message if no codes are sent (only the command)'),\n  component: TextAreaFieldFF\n});","import { TextAreaFieldFF, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales/index.js';\nimport { dataTest } from '../../shared/index.js';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FIELD_MORE_THAN_ONE_ORG_UNIT_MESSAGE_NAME = 'moreThanOneOrgUnitMessage';\nexport const FieldMoreThanOneOrgUnitMessage = () => /*#__PURE__*/React.createElement(Field, {\n  dataTest: dataTest('smscommand-fieldmorethanoneorgunitmessage'),\n  name: FIELD_MORE_THAN_ONE_ORG_UNIT_MESSAGE_NAME,\n  label: i18n.t('More than one orgunit message'),\n  component: TextAreaFieldFF\n});","import { TextAreaFieldFF, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales/index.js';\nimport { dataTest } from '../../shared/index.js';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FIELD_NO_USER_MESSAGE_NAME = 'noUserMessage';\nexport const FieldNoUserMessage = () => /*#__PURE__*/React.createElement(Field, {\n  dataTest: dataTest('smscommand-fieldnousermessage'),\n  name: FIELD_NO_USER_MESSAGE_NAME,\n  label: i18n.t('No user message'),\n  component: TextAreaFieldFF\n});","import { InputFieldFF, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales/index.js';\nimport { dataTest } from '../../shared/index.js';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FIELD_SEPARATOR_NAME = 'separator';\nexport const FieldSeparator = () => /*#__PURE__*/React.createElement(Field, {\n  dataTest: dataTest('smscommand-fieldseparator'),\n  name: FIELD_SEPARATOR_NAME,\n  label: i18n.t('Field separator'),\n  component: InputFieldFF\n});","import { PropTypes } from '@dhis2/prop-types';\nimport { InputFieldFF, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport { dataTest } from '../../shared/index.js';\nconst {\n  Field,\n  useFormState\n} = ReactFinalForm;\nconst subscription = {\n  values: true\n};\nexport const FIELD_SMS_CODES_NAME = 'smsCodes';\nexport const FieldSmsCode = ({\n  id,\n  displayName,\n  valueType\n}) => {\n  const {\n    values\n  } = useFormState({\n    subscription\n  });\n  const smsCode = values[FIELD_SMS_CODES_NAME][id];\n  /**\n   * This uses a dynamic, nested name for storing the field value in the\n   * form state. You can't submit the data as is though, since the backend\n   * expects a different shape. So I was thinking of dealing with that\n   * in the submit handler. Since you have the ids and the field value\n   * you should be able to transform it into any shape you need.\n   */\n\n  return /*#__PURE__*/React.createElement(Field, {\n    required: true,\n    dataTest: dataTest('smscommand-fieldsmscode'),\n    name: `${FIELD_SMS_CODES_NAME}.${id}`,\n    label: displayName,\n    component: InputFieldFF,\n    format: code => (code === null || code === void 0 ? void 0 : code.code) || '',\n    parse: nextCode => !smsCode ? {\n      code: nextCode,\n      trackedEntityAttribute: {\n        id,\n        displayName,\n        valueType\n      }\n    } : { ...smsCode,\n      code: nextCode\n    }\n  });\n};\nFieldSmsCode.propTypes = {\n  displayName: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  valueType: PropTypes.string.isRequired\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { InputFieldFF, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport { dataTest } from '../../shared/index.js';\nimport { FIELD_SMS_CODES_NAME } from '../FieldSmsCode/index.js';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FieldSmsCodeDataElement = ({\n  dataElement,\n  smsCodes\n}) => {\n  return /*#__PURE__*/React.createElement(Field, {\n    dataTest: dataTest('smscommand-fieldsmscodedataelement'),\n    key: dataElement.id,\n    name: `${FIELD_SMS_CODES_NAME}.${dataElement.id}`,\n    label: dataElement.displayName,\n    component: InputFieldFF,\n    format: value => (value === null || value === void 0 ? void 0 : value.code) || null,\n    parse: code => {\n      const currentValue = smsCodes[dataElement.id];\n      const newValue = { ...currentValue,\n        code: code || '',\n        dataElement\n      };\n      return newValue;\n    }\n  });\n};\nFieldSmsCodeDataElement.propTypes = {\n  dataElement: PropTypes.shape({\n    displayName: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired\n  }).isRequired,\n  smsCodes: PropTypes.objectOf(PropTypes.shape({\n    dataElement: PropTypes.shape({\n      id: PropTypes.string.isRequired\n    }).isRequired,\n    code: PropTypes.string,\n    compulsory: PropTypes.bool,\n    optionId: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n  }))\n};","import { TextAreaFieldFF, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales/index.js';\nimport { dataTest } from '../../shared/index.js';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FIELD_SUCCESS_MESSAGE_NAME = 'successMessage';\nexport const FieldSuccessMessage = () => /*#__PURE__*/React.createElement(Field, {\n  dataTest: dataTest('smscommand-fieldsuccessmessage'),\n  name: FIELD_SUCCESS_MESSAGE_NAME,\n  label: i18n.t('Success message'),\n  component: TextAreaFieldFF\n});","import { TextAreaFieldFF, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales/index.js';\nimport { dataTest } from '../../shared/index.js';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FIELD_WRONG_FORMAT_MESSAGE_NAME = 'wrongFormatMessage';\nexport const FieldWrongFormatMessage = () => /*#__PURE__*/React.createElement(Field, {\n  dataTest: dataTest('smscommand-fieldwrongformatmessage'),\n  name: FIELD_WRONG_FORMAT_MESSAGE_NAME,\n  label: i18n.t('Wrong format message'),\n  component: TextAreaFieldFF\n});","import { PropTypes } from '@dhis2/prop-types';\nimport { ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales/index.js';\nimport { FormRow, PageSubHeadline, dataTest } from '../../shared/index.js';\nimport { FieldCommandName } from '../FieldCommandName/index.js';\nimport { FieldDefaultMessage } from '../FieldDefaultMessage/index.js';\nimport { FieldMoreThanOneOrgUnitMessage } from '../FieldMoreThanOneOrgUnitMessage/index.js';\nimport { FieldNoUserMessage } from '../FieldNoUserMessage/index.js';\nimport { FieldParser } from '../FieldParser/index.js';\nimport { FieldProgram } from '../FieldProgram/index.js';\nimport { FieldProgramStage } from '../FieldProgramStage/index.js';\nimport { FieldSeparator } from '../FieldSeparator/index.js';\nimport { FIELD_SMS_CODES_NAME } from '../FieldSmsCode/index.js';\nimport { FieldSmsCodeDataElement } from '../FieldSmsCodeDataElement/index.js';\nimport { FieldSuccessMessage } from '../FieldSuccessMessage/index.js';\nimport { FieldWrongFormatMessage } from '../FieldWrongFormatMessage/index.js';\nimport { FormActions } from '../FormActions/index.js';\nimport { SubmitErrors } from '../SubmitErrors/index.js';\nconst {\n  useFormState\n} = ReactFinalForm;\nexport const Form = ({\n  handleSubmit,\n  onCancel,\n  programStageDataElements,\n  selectedProgramOption,\n  selectedProgramStageOption\n}) => {\n  const {\n    pristine,\n    values\n  } = useFormState();\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    \"data-test\": dataTest('smscommand-formeventregistrationparser-form')\n  }, /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldCommandName, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldParser, {\n    disabled: true\n  })), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldProgram, {\n    disabled: true,\n    programs: [selectedProgramOption]\n  })), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldProgramStage, {\n    disabled: true,\n    programStages: [selectedProgramStageOption]\n  })), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldSeparator, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldDefaultMessage, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldWrongFormatMessage, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldNoUserMessage, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldMoreThanOneOrgUnitMessage, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldSuccessMessage, null)), /*#__PURE__*/React.createElement(PageSubHeadline, null, i18n.t('SMS short codes')), programStageDataElements && /*#__PURE__*/React.createElement(FormRow, null, programStageDataElements.map(({\n    dataElement\n  }) => /*#__PURE__*/React.createElement(FieldSmsCodeDataElement, {\n    key: dataElement.id,\n    dataElement: dataElement,\n    smsCodes: values[FIELD_SMS_CODES_NAME]\n  }))), /*#__PURE__*/React.createElement(SubmitErrors, null), /*#__PURE__*/React.createElement(FormActions, {\n    onCancel: () => onCancel(pristine)\n  }));\n};\nForm.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n  programStageDataElements: PropTypes.arrayOf(PropTypes.shape({\n    dataElement: PropTypes.shape({\n      displayName: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired\n    })\n  })).isRequired,\n  selectedProgramOption: PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired\n  }).isRequired,\n  selectedProgramStageOption: PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired\n  }).isRequired,\n  onCancel: PropTypes.func.isRequired\n};","import { FIELD_COMMAND_NAME } from '../FieldCommandName/index.js';\nimport { FIELD_DEFAULT_MESSAGE_NAME } from '../FieldDefaultMessage/index.js';\nimport { FIELD_MORE_THAN_ONE_ORG_UNIT_MESSAGE_NAME } from '../FieldMoreThanOneOrgUnitMessage/index.js';\nimport { FIELD_NO_USER_MESSAGE_NAME } from '../FieldNoUserMessage/index.js';\nimport { FIELD_PARSER_NAME, parserTypes } from '../FieldParser/index.js';\nimport { FIELD_PROGRAM_NAME } from '../FieldProgram/index.js';\nimport { FIELD_PROGRAM_STAGE_NAME } from '../FieldProgramStage/index.js';\nimport { FIELD_SEPARATOR_NAME } from '../FieldSeparator/index.js';\nimport { FIELD_SMS_CODES_NAME } from '../FieldSmsCode/index.js';\nimport { FIELD_SUCCESS_MESSAGE_NAME } from '../FieldSuccessMessage/index.js';\nimport { FIELD_WRONG_FORMAT_MESSAGE_NAME } from '../FieldWrongFormatMessage/index.js';\nconst {\n  EVENT_REGISTRATION_PARSER\n} = parserTypes;\nexport const getInitialFormState = command => {\n  const name = command[FIELD_COMMAND_NAME];\n  const program = command[FIELD_PROGRAM_NAME];\n  const programStage = command[FIELD_PROGRAM_STAGE_NAME];\n  const separator = command[FIELD_SEPARATOR_NAME];\n  const defaultMessage = command[FIELD_DEFAULT_MESSAGE_NAME];\n  const wrongFormatMessage = command[FIELD_WRONG_FORMAT_MESSAGE_NAME];\n  const noUserMessage = command[FIELD_NO_USER_MESSAGE_NAME];\n  const moreThanOneOrgUnitMessage = command[FIELD_MORE_THAN_ONE_ORG_UNIT_MESSAGE_NAME];\n  const successMessage = command[FIELD_SUCCESS_MESSAGE_NAME];\n  const smsCodes = command[FIELD_SMS_CODES_NAME].reduce((curSmsCodes, smsCode) => ({ ...curSmsCodes,\n    [smsCode.dataElement.id]: smsCode\n  }), {});\n  return {\n    [FIELD_COMMAND_NAME]: name,\n    [FIELD_PARSER_NAME]: EVENT_REGISTRATION_PARSER.value,\n    [FIELD_PROGRAM_NAME]: program,\n    [FIELD_PROGRAM_STAGE_NAME]: programStage,\n    [FIELD_SEPARATOR_NAME]: separator,\n    [FIELD_DEFAULT_MESSAGE_NAME]: defaultMessage,\n    [FIELD_WRONG_FORMAT_MESSAGE_NAME]: wrongFormatMessage,\n    [FIELD_NO_USER_MESSAGE_NAME]: noUserMessage,\n    [FIELD_MORE_THAN_ONE_ORG_UNIT_MESSAGE_NAME]: moreThanOneOrgUnitMessage,\n    [FIELD_SUCCESS_MESSAGE_NAME]: successMessage,\n    [FIELD_SMS_CODES_NAME]: smsCodes\n  };\n};","import { useDataQuery } from '@dhis2/app-runtime';\nexport const READ_SMS_COMMAND_EVENT_REGISTRATION_PARSER_QUERY = {\n  smsCommand: {\n    resource: 'smsCommands',\n    id: ({\n      id\n    }) => id,\n    params: {\n      fields: ['*', 'program[id,displayName]', 'programStage[id,displayName,programStageDataElements[id,dataElement[id,displayName]]'],\n      paging: 'false'\n    }\n  }\n};\nexport const useCommandQuery = id => useDataQuery(READ_SMS_COMMAND_EVENT_REGISTRATION_PARSER_QUERY, {\n  variables: {\n    id\n  }\n});","import { useDataEngine } from '@dhis2/app-runtime';\nimport { useSubmit } from '../../shared/index.js';\nimport { FIELD_COMMAND_NAME } from '../FieldCommandName/index.js';\nimport { FIELD_DEFAULT_MESSAGE_NAME } from '../FieldDefaultMessage/index.js';\nimport { FIELD_MORE_THAN_ONE_ORG_UNIT_MESSAGE_NAME } from '../FieldMoreThanOneOrgUnitMessage/index.js';\nimport { FIELD_NO_USER_MESSAGE_NAME } from '../FieldNoUserMessage/index.js';\nimport { FIELD_PARSER_NAME } from '../FieldParser/index.js';\nimport { FIELD_PROGRAM_NAME } from '../FieldProgram/index.js';\nimport { FIELD_PROGRAM_STAGE_NAME } from '../FieldProgramStage/index.js';\nimport { FIELD_SEPARATOR_NAME } from '../FieldSeparator/index.js';\nimport { FIELD_SMS_CODES_NAME } from '../FieldSmsCode/index.js';\nimport { FIELD_SUCCESS_MESSAGE_NAME } from '../FieldSuccessMessage/index.js';\nimport { FIELD_WRONG_FORMAT_MESSAGE_NAME } from '../FieldWrongFormatMessage/index.js';\nconst updateEventRegistrationParserMutation = {\n  resource: 'smsCommands',\n  type: 'update',\n  id: ({\n    id\n  }) => id,\n  data: command => {\n    const name = command[FIELD_COMMAND_NAME];\n    const parserType = command[FIELD_PARSER_NAME];\n    const program = command[FIELD_PROGRAM_NAME];\n    const programStage = command[FIELD_PROGRAM_STAGE_NAME];\n    const separator = command[FIELD_SEPARATOR_NAME];\n    const defaultMessage = command[FIELD_DEFAULT_MESSAGE_NAME];\n    const wrongFormatMessage = command[FIELD_WRONG_FORMAT_MESSAGE_NAME];\n    const noUserMessage = command[FIELD_NO_USER_MESSAGE_NAME];\n    const moreThanOneOrgUnitMessage = command[FIELD_MORE_THAN_ONE_ORG_UNIT_MESSAGE_NAME];\n    const successMessage = command[FIELD_SUCCESS_MESSAGE_NAME];\n    const smsCodes = Object.values(command[FIELD_SMS_CODES_NAME]);\n    return {\n      [FIELD_COMMAND_NAME]: name,\n      [FIELD_PARSER_NAME]: parserType,\n      [FIELD_PROGRAM_NAME]: program,\n      [FIELD_PROGRAM_STAGE_NAME]: programStage,\n      [FIELD_SEPARATOR_NAME]: separator,\n      [FIELD_DEFAULT_MESSAGE_NAME]: defaultMessage,\n      [FIELD_WRONG_FORMAT_MESSAGE_NAME]: wrongFormatMessage,\n      [FIELD_NO_USER_MESSAGE_NAME]: noUserMessage,\n      [FIELD_MORE_THAN_ONE_ORG_UNIT_MESSAGE_NAME]: moreThanOneOrgUnitMessage,\n      [FIELD_SUCCESS_MESSAGE_NAME]: successMessage,\n      [FIELD_SMS_CODES_NAME]: smsCodes\n    };\n  }\n};\nexport const useUpdateCommandMutation = ({\n  id,\n  onAfterChange\n}) => {\n  const engine = useDataEngine();\n\n  const onSubmit = values => {\n    const variables = { ...values,\n      id\n    };\n    return engine.mutate(updateEventRegistrationParserMutation, {\n      variables\n    }).then(onAfterChange);\n  };\n\n  return useSubmit(onSubmit);\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { CenteredContent, CircularLoader, NoticeBox, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales/index.js';\nimport { Form as FormComponent } from './Form.js';\nimport { getInitialFormState } from './getInitialFormState.js';\nimport { useCommandQuery } from './useCommandQuery.js';\nimport { useUpdateCommandMutation } from './useUpdateCommandMutation.js';\nconst {\n  Form\n} = ReactFinalForm;\nexport const FormEventRegistrationParser = ({\n  commandId,\n  onAfterChange,\n  onCancel\n}) => {\n  const {\n    error,\n    data = {}\n  } = useCommandQuery(commandId);\n  const {\n    smsCommand: command\n  } = data;\n  const updateCommand = useUpdateCommandMutation({\n    id: commandId,\n    onAfterChange\n  });\n\n  if (error) {\n    const msg = i18n.t(\"Something went wrong whilst loading the command's details\");\n    return /*#__PURE__*/React.createElement(NoticeBox, {\n      error: true,\n      title: msg\n    }, error.message);\n  }\n\n  if (!command) {\n    return /*#__PURE__*/React.createElement(CenteredContent, null, /*#__PURE__*/React.createElement(CircularLoader, null));\n  }\n\n  const selectedProgramOption = {\n    value: command.program.id,\n    label: command.program.displayName\n  };\n  const selectedProgramStageOption = {\n    value: command.programStage.id,\n    label: command.programStage.displayName\n  };\n  const programStageDataElements = command.programStage.programStageDataElements;\n  const initialValues = getInitialFormState(command);\n  return /*#__PURE__*/React.createElement(Form, {\n    keepDirtyOnReinitialize: true,\n    initialValues: initialValues,\n    onSubmit: updateCommand\n  }, ({\n    handleSubmit\n  }) => {\n    return /*#__PURE__*/React.createElement(FormComponent, {\n      handleSubmit: handleSubmit,\n      selectedProgramOption: selectedProgramOption,\n      selectedProgramStageOption: selectedProgramStageOption,\n      programStageDataElements: programStageDataElements,\n      onCancel: onCancel\n    });\n  });\n};\nFormEventRegistrationParser.propTypes = {\n  commandId: PropTypes.string.isRequired,\n  onAfterChange: PropTypes.func.isRequired,\n  onCancel: PropTypes.func.isRequired\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { Button, Field as UiField, InputFieldFF, ReactFinalForm, hasValue } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales/index.js';\nimport { dataTest } from '../../shared/index.js';\nimport styles from './FieldSpecialCharacter.module.css';\nconst {\n  Field,\n  useForm\n} = ReactFinalForm;\nexport const FIELD_SPECIAL_CHARS_NAME = 'specialCharacters';\nexport const FieldSpecialCharacter = ({\n  index,\n  onSpecialKeyRemoved\n}) => {\n  const {\n    change,\n    getState\n  } = useForm();\n\n  const removeSpecialKeyFieldsFromFormState = () => {\n    const specialChars = getState().values[FIELD_SPECIAL_CHARS_NAME];\n    const newSpecialChars = [...specialChars.slice(0, index), ...specialChars.slice(index + 1)];\n    change(FIELD_SPECIAL_CHARS_NAME, newSpecialChars);\n    onSpecialKeyRemoved();\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    className: styles.container\n  }, /*#__PURE__*/React.createElement(Field, {\n    required: true,\n    className: styles.field,\n    dataTest: dataTest('smscommand-fieldspecialcharacter-name'),\n    label: i18n.t('Special character name'),\n    name: `${FIELD_SPECIAL_CHARS_NAME}[${index}].name`,\n    component: InputFieldFF,\n    validate: hasValue\n  }), /*#__PURE__*/React.createElement(Field, {\n    required: true,\n    className: styles.field,\n    dataTest: dataTest('smscommand-fieldspecialcharacter-value'),\n    label: i18n.t('Special character value'),\n    name: `${FIELD_SPECIAL_CHARS_NAME}[${index}].value`,\n    component: InputFieldFF,\n    validate: hasValue\n  }), /*#__PURE__*/React.createElement(UiField, {\n    label: \"\\xA0\"\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: styles.button,\n    onClick: removeSpecialKeyFieldsFromFormState,\n    dataTest: dataTest('smscommand-fieldspecialcharacter-remove')\n  }, i18n.t('Remove'))));\n};\nFieldSpecialCharacter.propTypes = {\n  index: PropTypes.number.isRequired,\n  onSpecialKeyRemoved: PropTypes.func.isRequired\n};","import { Button, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales/index.js';\nimport { FormRow, dataTest } from '../../shared/index.js';\nimport { FIELD_SPECIAL_CHARS_NAME } from '../FieldSpecialCharacter/index.js';\nconst {\n  useForm\n} = ReactFinalForm;\nexport const AddSpecialCharacters = () => {\n  const {\n    change,\n    getState\n  } = useForm();\n\n  const addSpecialKeyFieldsToFormState = () => {\n    const specialChars = getState().values[FIELD_SPECIAL_CHARS_NAME];\n    const newSpecialChars = [...specialChars, {\n      name: '',\n      value: ''\n    }];\n    change(FIELD_SPECIAL_CHARS_NAME, newSpecialChars);\n  };\n\n  return /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(Button, {\n    onClick: addSpecialKeyFieldsToFormState,\n    dataTest: dataTest('smscommand-addspecialcharacter')\n  }, i18n.t('Add special character')));\n};","import { PropTypes } from '@dhis2/prop-types';\nimport React from 'react';\nimport i18n from '../../locales/index.js';\nimport { dataTest } from '../../shared/index.js';\nimport styles from './CurrentFormula.module.css';\nexport const CurrentFormula = ({\n  code,\n  formula,\n  formulaDataElementName,\n  loading,\n  operator\n}) => {\n  if (!code || !formula || !formulaDataElementName || !operator) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.formulaInWords,\n    \"data-test\": dataTest('smscommand-fielddataelementwithcategoryoptioncombo-currentformula')\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.formulaInWordsLabel\n  }, i18n.t('Formula'), \":\"), loading && i18n.t('Loading formula'), !loading && `${code} ${operator} ${formulaDataElementName}`);\n};\nCurrentFormula.propTypes = {\n  loading: PropTypes.bool.isRequired,\n  code: PropTypes.string,\n  formula: PropTypes.string,\n  formulaDataElementName: PropTypes.string,\n  operator: PropTypes.string\n};","import { useDataEngine } from '@dhis2/app-runtime';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { Button, ReactFinalForm } from '@dhis2/ui';\nimport React, { useEffect, useState } from 'react';\nimport i18n from '../../locales/index.js';\nimport { dataTest } from '../../shared/index.js';\nimport { CurrentFormula } from './CurrentFormula.js';\nconst {\n  useField\n} = ReactFinalForm;\nconst DATA_ELEMENTS_QUERY = {\n  dataElement: {\n    resource: 'dataElements',\n    id: ({\n      id\n    }) => id,\n    params: () => ({\n      fields: 'displayName'\n    })\n  }\n};\nexport const AddFormulaButton = ({\n  baseName,\n  onClick,\n  disabled\n}) => {\n  const engine = useDataEngine();\n  const [loading, setLoading] = useState(false);\n  const [formulaDataElementName, setFormulaDataElementName] = useState('');\n  const smsCode = useField(baseName, {\n    subscription: {\n      value: true\n    }\n  }).input.value;\n  const {\n    formula,\n    code\n  } = smsCode;\n  const operator = formula && formula[0];\n  const dataElementId = formula && formula.slice(1);\n  useEffect(() => {\n    if (dataElementId) {\n      setLoading(true);\n      engine.query(DATA_ELEMENTS_QUERY, {\n        variables: {\n          id: dataElementId\n        }\n      }).then(response => {\n        const {\n          displayName\n        } = response.dataElement;\n        setFormulaDataElementName(displayName);\n      }).finally(() => setLoading(false));\n    }\n  }, [dataElementId]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(CurrentFormula, {\n    code: code,\n    formula: formula,\n    formulaDataElementName: formulaDataElementName,\n    loading: loading,\n    operator: operator\n  }), /*#__PURE__*/React.createElement(Button, {\n    small: true,\n    onClick: onClick,\n    disabled: disabled,\n    dataTest: dataTest('smscommand-fielddataelementwithcategoryoptioncombo-addformulabutton')\n  }, formula ? i18n.t('Edit formula') : i18n.t('Add formula')));\n};\nAddFormulaButton.propTypes = {\n  baseName: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n  disabled: PropTypes.bool\n};","import { useDataEngine } from '@dhis2/app-runtime';\nimport { useEffect, useState } from 'react';\nexport const DATA_ELEMENTS_QUERY = {\n  dataSet: {\n    resource: 'dataSets',\n    id: ({\n      id\n    }) => id,\n    params: ({\n      filter\n    }) => ({\n      filter,\n      fields: 'dataSetElements[dataElement[id,code,displayName]]'\n    })\n  }\n};\nexport const queryDataElementsOfDataSet = (engine, variables) => engine.query(DATA_ELEMENTS_QUERY, {\n  variables\n}).then(data => {\n  const {\n    dataSet\n  } = data;\n  const {\n    dataSetElements\n  } = dataSet;\n  const formatted = dataSetElements.map(({\n    dataElement\n  }) => dataElement);\n  formatted.sort((left, right) => {\n    const leftDisplayName = left.displayName;\n    const rightDisplayName = right.displayName;\n\n    if (leftDisplayName === rightDisplayName) {\n      return 0;\n    }\n\n    if (leftDisplayName < rightDisplayName) {\n      return -1;\n    }\n\n    return 1;\n  });\n  return formatted;\n});\nexport const useReadDataElementsOfDataSetQuery = (dataSetId, filter) => {\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [data, setData] = useState(null);\n  const engine = useDataEngine();\n\n  const refetch = variables => {\n    setLoading(true);\n    setError(null);\n    return queryDataElementsOfDataSet(engine, variables).then(setData).catch(setError).finally(() => setLoading(false));\n  }; // initial request\n\n\n  useEffect(() => {\n    refetch({\n      id: dataSetId,\n      filter\n    });\n  }, []);\n  return {\n    loading,\n    error,\n    data,\n    refetch\n  };\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { Button, ButtonStrip, CircularLoader, Modal, ModalActions, ModalContent, ModalTitle, NoticeBox, ReactFinalForm, SingleSelectFieldFF, hasValue } from '@dhis2/ui';\nimport React, { useMemo } from 'react';\nimport i18n from '../../locales/index.js';\nimport { FormRow, dataTest } from '../../shared/index.js';\nimport { FIELD_DATA_SET_NAME } from '../FieldDataSet/index.js';\nimport { useReadDataElementsOfDataSetQuery } from './useReadDataElementsOfDataSetQuery.js';\nconst {\n  Field,\n  Form,\n  useForm,\n  useField\n} = ReactFinalForm;\nexport const FormulaModalForm = ({\n  baseName,\n  combo,\n  targetFieldName,\n  onClose\n}) => {\n  const form = useForm();\n  const smsCode = useField(baseName, {\n    subscription: {\n      value: true\n    }\n  }).input.value;\n  const dataSetId = useField(FIELD_DATA_SET_NAME, {\n    subscription: {\n      value: true\n    }\n  }).input.value.id;\n  const {\n    loading,\n    error,\n    data\n  } = useReadDataElementsOfDataSetQuery(dataSetId); // Using memo so changing the form does not change the \"initialValues\"\n  // which would cause the form to update unnecessarily\n\n  const initialFormula = smsCode.formula;\n  const initialOperator = useMemo(() => initialFormula ? initialFormula[0] : '+', []);\n  const initialDataElementCode = useMemo(() => initialFormula ? initialFormula.slice(1) : '', []);\n  const initialValues = {\n    operator: initialOperator,\n    dataElementCode: initialDataElementCode\n  };\n  const modalDataTest = dataTest('smscommand-fielddataelementwithcategoryoptioncombo-formulamodalform');\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(Modal, {\n      dataTest: modalDataTest\n    }, /*#__PURE__*/React.createElement(CircularLoader, null));\n  }\n\n  const options = data.map(dataElement => {\n    const {\n      id,\n      displayName\n    } = dataElement;\n    return {\n      value: id,\n      label: displayName\n    };\n  });\n\n  const onSubmit = values => {\n    const newFormula = `${values.operator}${values.dataElementCode}`;\n    form.change(targetFieldName, newFormula);\n    onClose();\n  };\n\n  const onRemove = () => {\n    form.change(targetFieldName, null);\n    onClose();\n  };\n\n  return /*#__PURE__*/React.createElement(Form, {\n    onSubmit: onSubmit,\n    initialValues: initialValues\n  }, ({\n    handleSubmit\n  }) => /*#__PURE__*/React.createElement(Modal, {\n    dataTest: modalDataTest\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: event => {\n      event.stopPropagation();\n      handleSubmit(event);\n    }\n  }, /*#__PURE__*/React.createElement(ModalTitle, null, i18n.t('Formula for {{combo}}', {\n    combo\n  })), /*#__PURE__*/React.createElement(ModalContent, null, /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(Field, {\n    required: true,\n    dataTest: dataTest('smscommand-fielddataelementwithcategoryoptioncomboformula-dataelement'),\n    name: \"dataElementCode\",\n    label: i18n.t('Data element'),\n    component: SingleSelectFieldFF,\n    options: options,\n    validate: hasValue\n  })), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(Field, {\n    required: true,\n    dataTest: dataTest('smscommand-fielddataelementwithcategoryoptioncomboformula-operator'),\n    name: \"operator\",\n    label: i18n.t('formula operator'),\n    component: SingleSelectFieldFF,\n    initialValue: \"+\",\n    options: [{\n      value: '+',\n      label: '+'\n    }, {\n      value: '-',\n      label: '-'\n    }]\n  })), error && /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(NoticeBox, {\n    error: true,\n    title: i18n.t('Something went wrong whilst saving')\n  }, error.message))), /*#__PURE__*/React.createElement(ModalActions, null, /*#__PURE__*/React.createElement(ButtonStrip, null, /*#__PURE__*/React.createElement(Button, {\n    onClick: onRemove,\n    dataTest: dataTest('smscommand-fielddataelementwithcategoryoptioncomboformula-remove')\n  }, i18n.t('Remove')), /*#__PURE__*/React.createElement(Button, {\n    onClick: onClose,\n    dataTest: dataTest('smscommand-fielddataelementwithcategoryoptioncomboformula-cancel')\n  }, i18n.t('Cancel')), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    primary: true,\n    dataTest: dataTest('smscommand-fielddataelementwithcategoryoptioncomboformula-save')\n  }, i18n.t('Save')))))));\n};\nFormulaModalForm.propTypes = {\n  baseName: PropTypes.string.isRequired,\n  combo: PropTypes.string.isRequired,\n  targetFieldName: PropTypes.string.isRequired,\n  onClose: PropTypes.func.isRequired\n};","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { PropTypes } from '@dhis2/prop-types';\nimport { InputFieldFF, ReactFinalForm } from '@dhis2/ui';\nimport React, { useState } from 'react';\nimport i18n from '../../locales/index.js';\nimport { dataTest } from '../../shared/index.js';\nimport { FIELD_SMS_CODES_NAME } from '../FieldSmsCode/index.js';\nimport { AddFormulaButton } from './AddFormulaButton.js';\nimport styles from './FieldDataElementWithCategoryOptionCombo.module.css';\nimport { FormulaModalForm } from './FormulaModalForm.js';\n\nconst DE_COC_toFormName = (dataElement, categoryOptionCombo) => {\n  const dataElementId = dataElement.id;\n  const cocCode = categoryOptionCombo === null || categoryOptionCombo === void 0 ? void 0 : categoryOptionCombo.id;\n  const isDefault = cocCode === 'default';\n\n  if (!cocCode || isDefault) {\n    return `${FIELD_SMS_CODES_NAME}.${dataElementId}`;\n  }\n\n  return `${FIELD_SMS_CODES_NAME}.${dataElementId}-${cocCode}`;\n};\n\nconst {\n  Field\n} = ReactFinalForm;\nexport const FieldDataElementWithCategoryOptionCombo = ({\n  dataElement,\n  categoryOptionCombo\n}) => {\n  const [showFormula, setShowFormula] = useState(false);\n  const label = categoryOptionCombo ? `${dataElement.displayName} ${categoryOptionCombo.displayName}` : `${dataElement.displayName} ${i18n.t('default')}`;\n  const baseName = DE_COC_toFormName(dataElement, categoryOptionCombo);\n  const name = `${baseName}.code`;\n  const formulaName = `${baseName}.formula`;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    \"data-test\": dataTest('smscommand-fielddataelementwithcategoryoptioncombo')\n  }, /*#__PURE__*/React.createElement(Field, {\n    className: styles.field,\n    label: label,\n    name: name,\n    subscription: {\n      value: true,\n      error: true,\n      invalid: true,\n      touched: true\n    }\n  }, ({\n    input,\n    meta,\n    ...rest\n  }) => {\n    const code = input.value;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(InputFieldFF, _extends({}, rest, {\n      className: styles.codeField,\n      input: input,\n      meta: meta,\n      error: !!meta.error\n    })), /*#__PURE__*/React.createElement(AddFormulaButton, {\n      disabled: !code,\n      baseName: baseName,\n      formulaFieldName: formulaName,\n      onClick: () => setShowFormula(true)\n    }), showFormula && /*#__PURE__*/React.createElement(FormulaModalForm, {\n      baseName: baseName,\n      combo: label,\n      targetFieldName: formulaName,\n      onClose: () => setShowFormula(false)\n    }));\n  }));\n};\nFieldDataElementWithCategoryOptionCombo.defaultProps = {\n  categoryOptionCombo: null,\n  formula: ''\n};\nFieldDataElementWithCategoryOptionCombo.propTypes = {\n  dataElement: PropTypes.shape({\n    displayName: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired\n  }).isRequired,\n  categoryOptionCombo: PropTypes.shape({\n    displayName: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired\n  })\n};","import i18n from '../../locales/index.js';\nconst ALL_DATAVALUE = {\n  value: 'ALL_DATAVALUE',\n  label: i18n.t('Receive all data values')\n};\nconst AT_LEAST_ONE_DATAVALUE = {\n  value: 'AT_LEAST_ONE_DATAVALUE',\n  label: i18n.t('Receive at least one data value')\n};\nconst DO_NOT_MARK_COMPLETE = {\n  value: 'DO_NOT_MARK_COMPLETE',\n  label: i18n.t('Do not mark as complete')\n};\nexport const completenessMethods = {\n  ALL_DATAVALUE,\n  AT_LEAST_ONE_DATAVALUE,\n  DO_NOT_MARK_COMPLETE\n};","import { SingleSelectFieldFF, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales/index.js';\nimport { dataTest } from '../../shared/utils/index.js';\nimport { completenessMethods } from './completenessMethods.js';\nconst {\n  Field\n} = ReactFinalForm;\nconst options = Object.values(completenessMethods);\nexport const FIELD_COMPLETENESS_METHOD_NAME = 'completenessMethod';\nexport const FieldCompletenessMethod = () => /*#__PURE__*/React.createElement(Field, {\n  dataTest: dataTest('smscommand-fieldcompletenessmethod'),\n  name: FIELD_COMPLETENESS_METHOD_NAME,\n  label: i18n.t('Completeness method'),\n  component: SingleSelectFieldFF,\n  options: options\n});","import { NoticeBox, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales/index.js';\nimport { FormRow } from '../../shared/index.js';\nimport { FIELD_COMPLETENESS_METHOD_NAME, completenessMethods } from '../FieldCompletenessMethod/index.js';\nconst {\n  ALL_DATAVALUE,\n  AT_LEAST_ONE_DATAVALUE\n} = completenessMethods;\nconst {\n  useField\n} = ReactFinalForm;\nexport const CompletenessMessage = () => {\n  const {\n    input\n  } = useField(FIELD_COMPLETENESS_METHOD_NAME, {\n    subscription: {\n      value: true\n    }\n  });\n  const completenessMethod = input.value;\n  const title = i18n.t('Required values notice');\n\n  if (completenessMethod === ALL_DATAVALUE.value) {\n    return /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(NoticeBox, {\n      warning: true,\n      title: title\n    }, i18n.t(`Make sure all SMS short codes are provided when completeness method \"${ALL_DATAVALUE.label}\" is chosen, otherwise received messages will not be processed.`)));\n  }\n\n  if (completenessMethod === AT_LEAST_ONE_DATAVALUE.value) {\n    return /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(NoticeBox, {\n      warning: true,\n      title: title\n    }, i18n.t(`Make sure at least one SMS short code is provided when completeness method \"${AT_LEAST_ONE_DATAVALUE.label}\" is chosen, otherwise received messages will not be processed.`)));\n  }\n\n  return null;\n};","import { PropTypes } from '@dhis2/prop-types';\nimport React from 'react';\nimport i18n from '../../locales/index.js';\nimport { FormRow, PageSubHeadline, dataTest } from '../../shared/index.js';\nimport { FieldDataElementWithCategoryOptionCombo } from '../FieldDataElementWithCategoryOptionCombo/index.js';\nimport { CompletenessMessage } from './CompletenessMessage.js';\nimport styles from './DataElementTimesCategoryOptionCombos.module.css';\nexport const DataElementTimesCategoryOptionCombos = ({\n  DE_COC_combinations\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  \"data-test\": dataTest('smscommand-dataelementtimescategoryoptioncombos')\n}, /*#__PURE__*/React.createElement(PageSubHeadline, null, i18n.t('SMS short codes')), /*#__PURE__*/React.createElement(CompletenessMessage, null), /*#__PURE__*/React.createElement(\"div\", {\n  \"data-test\": dataTest('smscommand-dataelementtimescategoryoptioncombos-rows')\n}, DE_COC_combinations.map(({\n  dataElement,\n  categoryOptionCombo\n}) => {\n  return /*#__PURE__*/React.createElement(FormRow, {\n    className: styles.formRow,\n    key: dataElement.id + (categoryOptionCombo === null || categoryOptionCombo === void 0 ? void 0 : categoryOptionCombo.id)\n  }, /*#__PURE__*/React.createElement(FieldDataElementWithCategoryOptionCombo, {\n    dataElement: dataElement,\n    categoryOptionCombo: categoryOptionCombo\n  }));\n})));\nDataElementTimesCategoryOptionCombos.defaultProps = {\n  allRequired: false\n};\nDataElementTimesCategoryOptionCombos.propTypes = {\n  DE_COC_combinations: PropTypes.arrayOf(PropTypes.shape({\n    dataElement: PropTypes.shape({\n      displayName: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired\n    }).isRequired,\n    categoryOptionCombo: PropTypes.shape({\n      displayName: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired\n    })\n  })).isRequired\n};","import { CheckboxFieldFF, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales/index.js';\nimport { dataTest } from '../../shared/index.js';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FIELD_USE_CURRENT_PERIOD_FOR_REPORTING_NAME = 'currentPeriodUsedForReporting';\nexport const FieldUseCurrentPeriodForReporting = () => /*#__PURE__*/React.createElement(Field, {\n  type: \"checkbox\",\n  dataTest: dataTest('smscommand-fieldusecurrentperiodforreporting'),\n  name: FIELD_USE_CURRENT_PERIOD_FOR_REPORTING_NAME,\n  label: i18n.t('Use current period for reporting'),\n  component: CheckboxFieldFF\n});","import { PropTypes } from '@dhis2/prop-types';\nimport { ReactFinalForm } from '@dhis2/ui';\nimport React, { useState } from 'react';\nimport i18n from '../../locales/index.js';\nimport { FormRow, PageSubHeadline, dataTest } from '../../shared/index.js';\nimport { AddSpecialCharacters } from '../AddSpecialCharacters/index.js';\nimport { DataElementTimesCategoryOptionCombos } from '../DataElementTimesCategoryOptionCombos/index.js';\nimport { FieldCommandName } from '../FieldCommandName/index.js';\nimport { FieldCompletenessMethod } from '../FieldCompletenessMethod/index.js';\nimport { FieldDataSet } from '../FieldDataSet/index.js';\nimport { FieldDefaultMessage } from '../FieldDefaultMessage/index.js';\nimport { FieldMoreThanOneOrgUnitMessage } from '../FieldMoreThanOneOrgUnitMessage/index.js';\nimport { FieldNoUserMessage } from '../FieldNoUserMessage/index.js';\nimport { FieldParser } from '../FieldParser/index.js';\nimport { FieldSeparator } from '../FieldSeparator/index.js';\nimport { FIELD_SPECIAL_CHARS_NAME, FieldSpecialCharacter } from '../FieldSpecialCharacter/index.js';\nimport { FieldSuccessMessage } from '../FieldSuccessMessage/index.js';\nimport { FieldUseCurrentPeriodForReporting } from '../FieldUseCurrentPeriodForReporting/index.js';\nimport { FieldWrongFormatMessage } from '../FieldWrongFormatMessage/index.js';\nimport { FormActions } from '../FormActions/index.js';\nimport { SubmitErrors } from '../SubmitErrors/index.js';\nconst {\n  FormSpy\n} = ReactFinalForm;\nexport const Form = ({\n  DE_COC_combination_data,\n  handleSubmit,\n  hasSpecialChars,\n  onCancel,\n  pristine,\n  selectedDataSetOption\n}) => {\n  const [specialKeyRemoved, setSpecialKeyRemoved] = useState(false);\n\n  const onSpecialKeyRemoved = () => setSpecialKeyRemoved(true);\n\n  const enableSubmit = specialKeyRemoved && hasSpecialChars;\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    \"data-test\": dataTest('smscommand-formj2meparser-form')\n  }, /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldCommandName, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldParser, {\n    disabled: true\n  })), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldDataSet, {\n    disabled: true,\n    dataSets: [selectedDataSetOption]\n  })), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldCompletenessMethod, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldUseCurrentPeriodForReporting, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldSeparator, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldDefaultMessage, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldWrongFormatMessage, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldNoUserMessage, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldMoreThanOneOrgUnitMessage, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldSuccessMessage, null)), DE_COC_combination_data && /*#__PURE__*/React.createElement(DataElementTimesCategoryOptionCombos, {\n    DE_COC_combinations: DE_COC_combination_data\n  }), /*#__PURE__*/React.createElement(PageSubHeadline, null, i18n.t('Special characters')), /*#__PURE__*/React.createElement(FormSpy, {\n    subscription: {\n      values: true\n    }\n  }, ({\n    values\n  }) => /*#__PURE__*/React.createElement(React.Fragment, null, values[FIELD_SPECIAL_CHARS_NAME].map((_, index) => /*#__PURE__*/React.createElement(FormRow, {\n    key: index\n  }, /*#__PURE__*/React.createElement(FieldSpecialCharacter, {\n    index: index,\n    onSpecialKeyRemoved: onSpecialKeyRemoved\n  }))))), /*#__PURE__*/React.createElement(AddSpecialCharacters, null), /*#__PURE__*/React.createElement(SubmitErrors, null), /*#__PURE__*/React.createElement(FormActions, {\n    enableSubmit: enableSubmit,\n    onCancel: () => onCancel(pristine)\n  }));\n};\nForm.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n  hasSpecialChars: PropTypes.bool.isRequired,\n  pristine: PropTypes.bool.isRequired,\n  onCancel: PropTypes.func.isRequired,\n  DE_COC_combination_data: PropTypes.arrayOf(PropTypes.shape({\n    dataElement: PropTypes.shape({\n      displayName: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired\n    }).isRequired,\n    categoryOptionCombo: PropTypes.shape({\n      displayName: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired\n    })\n  })),\n  selectedDataSetOption: PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired\n  })\n};","import { FIELD_COMMAND_NAME } from '../FieldCommandName/index.js';\nimport { FIELD_COMPLETENESS_METHOD_NAME, completenessMethods } from '../FieldCompletenessMethod/index.js';\nimport { FIELD_DATA_SET_NAME } from '../FieldDataSet/index.js';\nimport { FIELD_DEFAULT_MESSAGE_NAME } from '../FieldDefaultMessage/index.js';\nimport { FIELD_MORE_THAN_ONE_ORG_UNIT_MESSAGE_NAME } from '../FieldMoreThanOneOrgUnitMessage/index.js';\nimport { FIELD_NO_USER_MESSAGE_NAME } from '../FieldNoUserMessage/index.js';\nimport { FIELD_PARSER_NAME, parserTypes } from '../FieldParser/index.js';\nimport { FIELD_SEPARATOR_NAME } from '../FieldSeparator/index.js';\nimport { FIELD_SMS_CODES_NAME } from '../FieldSmsCode/index.js';\nimport { FIELD_SPECIAL_CHARS_NAME } from '../FieldSpecialCharacter/index.js';\nimport { FIELD_SUCCESS_MESSAGE_NAME } from '../FieldSuccessMessage/index.js';\nimport { FIELD_USE_CURRENT_PERIOD_FOR_REPORTING_NAME } from '../FieldUseCurrentPeriodForReporting/index.js';\nimport { FIELD_WRONG_FORMAT_MESSAGE_NAME } from '../FieldWrongFormatMessage/index.js';\nconst {\n  AT_LEAST_ONE_DATAVALUE\n} = completenessMethods;\nconst {\n  J2ME_PARSER\n} = parserTypes;\nexport const getInitialFormState = command => {\n  const name = command[FIELD_COMMAND_NAME];\n  const parserType = J2ME_PARSER.value;\n  const dataSetId = {\n    id: command[FIELD_DATA_SET_NAME].id\n  };\n  const separator = command[FIELD_SEPARATOR_NAME];\n  const completenessMethod = AT_LEAST_ONE_DATAVALUE.value;\n  const useCurrentPeriodForReporting = command[FIELD_USE_CURRENT_PERIOD_FOR_REPORTING_NAME];\n  const defaultMessage = command[FIELD_DEFAULT_MESSAGE_NAME];\n  const wrongFormatMessage = command[FIELD_WRONG_FORMAT_MESSAGE_NAME];\n  const noUserMessage = command[FIELD_NO_USER_MESSAGE_NAME];\n  const moreThanOneOrgUnitMessage = command[FIELD_MORE_THAN_ONE_ORG_UNIT_MESSAGE_NAME];\n  const successMessage = command[FIELD_SUCCESS_MESSAGE_NAME];\n  const smsCodes = command[FIELD_SMS_CODES_NAME].reduce((acc, payload) => {\n    const {\n      code,\n      compulsory,\n      formula,\n      optionId: optionIdWrapper,\n      dataElement\n    } = payload;\n    const {\n      id: optionId\n    } = optionIdWrapper;\n    const key = optionId < 10 ? dataElement.id : `${dataElement.id}-${optionId}`;\n    const smsCode = {\n      code,\n      compulsory,\n      optionId\n    };\n\n    if (formula) {\n      smsCode.formula = formula;\n    }\n\n    return { ...acc,\n      [key]: smsCode\n    };\n  }, {});\n  const specialCharacters = command[FIELD_SPECIAL_CHARS_NAME] || [];\n  return {\n    [FIELD_COMMAND_NAME]: name,\n    [FIELD_PARSER_NAME]: parserType,\n    [FIELD_DATA_SET_NAME]: dataSetId,\n    [FIELD_SEPARATOR_NAME]: separator,\n    [FIELD_COMPLETENESS_METHOD_NAME]: completenessMethod,\n    [FIELD_USE_CURRENT_PERIOD_FOR_REPORTING_NAME]: useCurrentPeriodForReporting,\n    [FIELD_DEFAULT_MESSAGE_NAME]: defaultMessage,\n    [FIELD_WRONG_FORMAT_MESSAGE_NAME]: wrongFormatMessage,\n    [FIELD_NO_USER_MESSAGE_NAME]: noUserMessage,\n    [FIELD_MORE_THAN_ONE_ORG_UNIT_MESSAGE_NAME]: moreThanOneOrgUnitMessage,\n    [FIELD_SUCCESS_MESSAGE_NAME]: successMessage,\n    smsCodes,\n    specialCharacters\n  };\n};","export const getSmsCodeDuplicates = smsCodes => {\n  const duplicates = smsCodes.reduce((curDuplicates, smsCode, index) => {\n    const [name, code] = smsCode;\n    const errorAlreadyPresent = curDuplicates.includes(name);\n\n    if (errorAlreadyPresent) {\n      return curDuplicates;\n    }\n\n    const potentialDuplicates = smsCodes.filter( // eslint-disable-next-line no-unused-vars\n    ([_, curCode], curIndex) => {\n      return curCode.code === code.code && curIndex !== index;\n    });\n    const noDuplicates = !potentialDuplicates.length;\n\n    if (noDuplicates) {\n      return curDuplicates;\n    }\n\n    const newlyFoundDuplicates = potentialDuplicates.reduce((curWithCodeDuplicates, [curName]) => {\n      return [...curWithCodeDuplicates, curName];\n    }, [name]);\n    return [...curDuplicates, ...newlyFoundDuplicates];\n  }, []);\n  return duplicates;\n};","import i18n from '../../locales/index.js';\nimport { FIELD_SMS_CODES_NAME } from '../FieldSmsCode/index.js';\nimport { getSmsCodeDuplicates } from '../getSmsCodeDuplicates/index.js';\nexport const globalValidate = values => {\n  let hasErrors = false;\n  const errors = {};\n  const smsCodesFormState = values[FIELD_SMS_CODES_NAME];\n  const smsCodes = smsCodesFormState ? Object.entries(smsCodesFormState) : [];\n  const smsCodesWithValue = smsCodes.filter(([_, {\n    code\n  }]) => code); //eslint-disable-line no-unused-vars\n\n  if (smsCodesWithValue.length) {\n    const duplicates = getSmsCodeDuplicates(smsCodesWithValue);\n\n    if (duplicates.length) {\n      hasErrors = true;\n      const duplicateErrors = {};\n      duplicates.forEach(duplicate => {\n        duplicateErrors[duplicate] = {\n          code: i18n.t('Duplicate value!')\n        };\n      });\n      errors[FIELD_SMS_CODES_NAME] = errors[FIELD_SMS_CODES_NAME] || {};\n      Object.assign(errors[FIELD_SMS_CODES_NAME], duplicateErrors);\n    }\n  }\n\n  return hasErrors ? errors : undefined;\n};","import { useDataEngine } from '@dhis2/app-runtime';\nimport { useEffect, useState } from 'react'; // @TODO(non-critical):\n//   The response for key value parser\n//   does contain the information for \"Data element category combination\".\n//   But it does not contain the id of the category option combo,\n//   only the data element and a code.\n\nexport const READ_SMS_COMMAND_KEY_VALUE_PARSER_QUERY = {\n  smsCommand: {\n    resource: 'smsCommands',\n    id: ({\n      id\n    }) => id,\n    params: () => ({\n      fields: ['*', `dataset[id,displayName,dataSetElements[dataElement[id,displayName,categoryCombo[categoryOptionCombos[*,id,displayName]]]]]`]\n    })\n  }\n};\nexport const useCommandData = id => {\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [data, setData] = useState(null);\n  const engine = useDataEngine();\n\n  const refetch = variables => {\n    setLoading(true);\n    setError(null);\n    return engine.query(READ_SMS_COMMAND_KEY_VALUE_PARSER_QUERY, {\n      variables\n    }).then(response => {\n      response.smsCommand.dataset.dataSetElements.sort((left, right) => {\n        const leftDisplayName = left.dataElement.displayName;\n        const rightDisplayName = right.dataElement.displayName;\n\n        if (leftDisplayName === rightDisplayName) {\n          return 0;\n        }\n\n        if (leftDisplayName < rightDisplayName) {\n          return -1;\n        }\n\n        return 1;\n      });\n      setData(response);\n    }).catch(setError).finally(() => setLoading(false));\n  }; // initial request\n\n\n  useEffect(() => {\n    refetch({\n      id\n    });\n  }, []);\n  return {\n    loading,\n    error,\n    data,\n    refetch\n  };\n};","import { useDataEngine } from '@dhis2/app-runtime';\nimport { useSubmit } from '../../shared/index.js';\nimport { FIELD_COMMAND_NAME } from '../FieldCommandName/index.js';\nimport { FIELD_COMPLETENESS_METHOD_NAME } from '../FieldCompletenessMethod/index.js';\nimport { FIELD_DATA_SET_NAME } from '../FieldDataSet/index.js';\nimport { FIELD_DEFAULT_MESSAGE_NAME } from '../FieldDefaultMessage/index.js';\nimport { FIELD_MORE_THAN_ONE_ORG_UNIT_MESSAGE_NAME } from '../FieldMoreThanOneOrgUnitMessage/index.js';\nimport { FIELD_NO_USER_MESSAGE_NAME } from '../FieldNoUserMessage/index.js';\nimport { FIELD_PARSER_NAME } from '../FieldParser/index.js';\nimport { FIELD_SEPARATOR_NAME } from '../FieldSeparator/index.js';\nimport { FIELD_SMS_CODES_NAME } from '../FieldSmsCode/index.js';\nimport { FIELD_SPECIAL_CHARS_NAME } from '../FieldSpecialCharacter/index.js';\nimport { FIELD_SUCCESS_MESSAGE_NAME } from '../FieldSuccessMessage/index.js';\nimport { FIELD_USE_CURRENT_PERIOD_FOR_REPORTING_NAME } from '../FieldUseCurrentPeriodForReporting/index.js';\nimport { FIELD_WRONG_FORMAT_MESSAGE_NAME } from '../FieldWrongFormatMessage/index.js';\nconst updateJ2meParserMutation = {\n  resource: 'smsCommands',\n  type: 'update',\n  id: ({\n    id\n  }) => id,\n  data: command => {\n    const name = command[FIELD_COMMAND_NAME];\n    const parserType = command[FIELD_PARSER_NAME];\n    const dataSetId = {\n      id: command[FIELD_DATA_SET_NAME].id\n    };\n    const separator = command[FIELD_SEPARATOR_NAME];\n    const completenessMethod = command[FIELD_COMPLETENESS_METHOD_NAME];\n    const useCurrentPeriodForReporting = command[FIELD_USE_CURRENT_PERIOD_FOR_REPORTING_NAME];\n    const defaultMessage = command[FIELD_DEFAULT_MESSAGE_NAME];\n    const wrongFormatMessage = command[FIELD_WRONG_FORMAT_MESSAGE_NAME];\n    const noUserMessage = command[FIELD_NO_USER_MESSAGE_NAME];\n    const moreThanOneOrgUnitMessage = command[FIELD_MORE_THAN_ONE_ORG_UNIT_MESSAGE_NAME];\n    const successMessage = command[FIELD_SUCCESS_MESSAGE_NAME];\n    const specialCharacters = command[FIELD_SPECIAL_CHARS_NAME] || [];\n    const smsCodes = Object.values(command[FIELD_SMS_CODES_NAME]).map(({\n      code: codeWrapper,\n      compulsory,\n      optionId,\n      dataElement\n    }) => {\n      const {\n        code,\n        formula\n      } = codeWrapper;\n      const formattedSmsCode = {\n        code,\n        compulsory: !!compulsory,\n        dataElement\n      };\n\n      if (formula) {\n        formattedSmsCode.formula = formula;\n      }\n\n      if (optionId) {\n        formattedSmsCode.optionId = optionId;\n      }\n\n      return formattedSmsCode;\n    });\n    return {\n      [FIELD_COMMAND_NAME]: name,\n      [FIELD_PARSER_NAME]: parserType,\n      [FIELD_DATA_SET_NAME]: dataSetId,\n      [FIELD_SEPARATOR_NAME]: separator,\n      [FIELD_COMPLETENESS_METHOD_NAME]: completenessMethod,\n      [FIELD_USE_CURRENT_PERIOD_FOR_REPORTING_NAME]: useCurrentPeriodForReporting,\n      [FIELD_DEFAULT_MESSAGE_NAME]: defaultMessage,\n      [FIELD_WRONG_FORMAT_MESSAGE_NAME]: wrongFormatMessage,\n      [FIELD_NO_USER_MESSAGE_NAME]: noUserMessage,\n      [FIELD_MORE_THAN_ONE_ORG_UNIT_MESSAGE_NAME]: moreThanOneOrgUnitMessage,\n      [FIELD_SUCCESS_MESSAGE_NAME]: successMessage,\n      [FIELD_SPECIAL_CHARS_NAME]: specialCharacters,\n      [FIELD_SMS_CODES_NAME]: smsCodes\n    };\n  }\n};\nexport const useUpdateCommandMutation = ({\n  id,\n  onAfterChange\n}) => {\n  const engine = useDataEngine();\n\n  const onSubmit = values => {\n    const variables = { ...values,\n      id,\n      smsCodes: !values.smsCodes || !Object.values(values.smsCodes).length ? [] : Object.entries(values.smsCodes).map(([key, value]) => {\n        const [dataElementId, categoryOptionComboId] = key.split('-');\n        return { ...(categoryOptionComboId ? {\n            optionId: {\n              id: categoryOptionComboId\n            }\n          } : {}),\n          code: value,\n          dataElement: {\n            id: dataElementId\n          }\n        };\n      })\n    };\n    return engine.mutate(updateJ2meParserMutation, {\n      variables\n    }).then(onAfterChange);\n  };\n\n  return useSubmit(onSubmit);\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { CenteredContent, CircularLoader, NoticeBox, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales/index.js';\nimport { FIELD_DATA_SET_NAME } from '../FieldDataSet/index.js';\nimport { FIELD_SPECIAL_CHARS_NAME } from '../FieldSpecialCharacter/index.js';\nimport { Form as FormComponent } from './Form.js';\nimport { getInitialFormState } from './getInitialFormState.js';\nimport { globalValidate } from './globalValidate.js';\nimport { useCommandData } from './useCommandData.js';\nimport { useUpdateCommandMutation } from './useUpdateCommandMutation.js';\nconst {\n  Form\n} = ReactFinalForm;\nexport const FormJ2meParser = ({\n  commandId,\n  onAfterChange,\n  onCancel\n}) => {\n  const {\n    error: loadingCommandError,\n    data: commandData\n  } = useCommandData(commandId);\n  const command = commandData === null || commandData === void 0 ? void 0 : commandData.smsCommand;\n  const updateCommand = useUpdateCommandMutation({\n    id: commandId,\n    onAfterChange\n  });\n\n  if (loadingCommandError) {\n    const msg = i18n.t(\"Something went wrong whilst loading the command's details\");\n    return /*#__PURE__*/React.createElement(NoticeBox, {\n      error: true,\n      title: msg\n    }, loadingCommandError.message);\n  }\n\n  if (!command) {\n    return /*#__PURE__*/React.createElement(CenteredContent, null, /*#__PURE__*/React.createElement(CircularLoader, null));\n  }\n\n  const selectedDataSetOption = {\n    value: command[FIELD_DATA_SET_NAME].id,\n    label: command[FIELD_DATA_SET_NAME].displayName\n  };\n  const initialValues = getInitialFormState(command);\n  const DE_COC_combination_data = command.dataset.dataSetElements.reduce((curCombinations, {\n    dataElement\n  }) => {\n    var _dataElement$category;\n\n    const categoryOptionCombo = (_dataElement$category = dataElement.categoryCombo) === null || _dataElement$category === void 0 ? void 0 : _dataElement$category.categoryOptionCombos;\n\n    if (!categoryOptionCombo) {\n      return [...curCombinations, {\n        dataElement\n      }];\n    }\n\n    const combos = categoryOptionCombo.map(COC => ({\n      dataElement,\n      categoryOptionCombo: COC\n    }));\n    return [...curCombinations, ...combos];\n  }, []);\n  const specialChars = initialValues[FIELD_SPECIAL_CHARS_NAME];\n  const hasSpecialChars = !!(specialChars !== null && specialChars !== void 0 && specialChars.length);\n  return /*#__PURE__*/React.createElement(Form, {\n    keepDirtyOnReinitialize: true,\n    onSubmit: updateCommand,\n    initialValues: initialValues,\n    validate: globalValidate,\n    subscription: {\n      pristine: true\n    }\n  }, ({\n    handleSubmit,\n    pristine,\n    dirty\n  }) => /*#__PURE__*/React.createElement(FormComponent, {\n    DE_COC_combination_data: DE_COC_combination_data,\n    dirty: dirty,\n    handleSubmit: handleSubmit,\n    pristine: pristine,\n    hasSpecialChars: hasSpecialChars,\n    selectedDataSetOption: selectedDataSetOption,\n    onCancel: onCancel\n  }));\n};\nFormJ2meParser.propTypes = {\n  commandId: PropTypes.string.isRequired,\n  onAfterChange: PropTypes.func.isRequired,\n  onCancel: PropTypes.func.isRequired\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { ReactFinalForm } from '@dhis2/ui';\nimport React, { useState } from 'react';\nimport i18n from '../../locales/index.js';\nimport { FormRow, PageSubHeadline, dataTest } from '../../shared/index.js';\nimport { AddSpecialCharacters } from '../AddSpecialCharacters/index.js';\nimport { DataElementTimesCategoryOptionCombos } from '../DataElementTimesCategoryOptionCombos/index.js';\nimport { FieldCommandName } from '../FieldCommandName/index.js';\nimport { FieldCompletenessMethod } from '../FieldCompletenessMethod/index.js';\nimport { FieldDataSet } from '../FieldDataSet/index.js';\nimport { FieldDefaultMessage } from '../FieldDefaultMessage/index.js';\nimport { FieldMoreThanOneOrgUnitMessage } from '../FieldMoreThanOneOrgUnitMessage/index.js';\nimport { FieldNoUserMessage } from '../FieldNoUserMessage/index.js';\nimport { FieldParser } from '../FieldParser/index.js';\nimport { FieldSeparator } from '../FieldSeparator/index.js';\nimport { FIELD_SPECIAL_CHARS_NAME, FieldSpecialCharacter } from '../FieldSpecialCharacter/index.js';\nimport { FieldSuccessMessage } from '../FieldSuccessMessage/index.js';\nimport { FieldUseCurrentPeriodForReporting } from '../FieldUseCurrentPeriodForReporting/index.js';\nimport { FieldWrongFormatMessage } from '../FieldWrongFormatMessage/index.js';\nimport { FormActions } from '../FormActions/index.js';\nimport { SubmitErrors } from '../SubmitErrors/index.js';\nconst {\n  FormSpy\n} = ReactFinalForm;\nexport const Form = ({\n  DE_COC_combination_data,\n  handleSubmit,\n  hasSpecialChars,\n  onCancel,\n  pristine,\n  selectedDataSetOption\n}) => {\n  const [specialKeyRemoved, setSpecialKeyRemoved] = useState(false);\n\n  const onSpecialKeyRemoved = () => setSpecialKeyRemoved(true);\n\n  const enableSubmit = specialKeyRemoved && hasSpecialChars;\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    \"data-test\": dataTest('smscommand-formkeyvalueparser-form')\n  }, /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldCommandName, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldParser, {\n    disabled: true\n  })), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldDataSet, {\n    disabled: true,\n    dataSets: [selectedDataSetOption]\n  })), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldCompletenessMethod, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldUseCurrentPeriodForReporting, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldSeparator, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldDefaultMessage, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldWrongFormatMessage, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldNoUserMessage, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldMoreThanOneOrgUnitMessage, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldSuccessMessage, null)), DE_COC_combination_data && /*#__PURE__*/React.createElement(DataElementTimesCategoryOptionCombos, {\n    DE_COC_combinations: DE_COC_combination_data\n  }), /*#__PURE__*/React.createElement(PageSubHeadline, null, i18n.t('Special characters')), /*#__PURE__*/React.createElement(FormSpy, {\n    subscription: {\n      values: true\n    }\n  }, ({\n    values\n  }) => /*#__PURE__*/React.createElement(React.Fragment, null, values[FIELD_SPECIAL_CHARS_NAME].map((_, index) => /*#__PURE__*/React.createElement(FormRow, {\n    key: index\n  }, /*#__PURE__*/React.createElement(FieldSpecialCharacter, {\n    index: index,\n    onSpecialKeyRemoved: onSpecialKeyRemoved\n  }))))), /*#__PURE__*/React.createElement(AddSpecialCharacters, null), /*#__PURE__*/React.createElement(SubmitErrors, null), /*#__PURE__*/React.createElement(FormActions, {\n    enableSubmit: enableSubmit,\n    onCancel: () => onCancel(pristine)\n  }));\n};\nForm.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n  hasSpecialChars: PropTypes.bool.isRequired,\n  pristine: PropTypes.bool.isRequired,\n  onCancel: PropTypes.func.isRequired,\n  DE_COC_combination_data: PropTypes.arrayOf(PropTypes.shape({\n    dataElement: PropTypes.shape({\n      displayName: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired\n    }).isRequired,\n    categoryOptionCombo: PropTypes.shape({\n      displayName: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired\n    })\n  })),\n  selectedDataSetOption: PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired\n  })\n};","import { FIELD_COMMAND_NAME } from '../FieldCommandName/index.js';\nimport { FIELD_COMPLETENESS_METHOD_NAME, completenessMethods } from '../FieldCompletenessMethod/index.js';\nimport { FIELD_DATA_SET_NAME } from '../FieldDataSet/index.js';\nimport { FIELD_DEFAULT_MESSAGE_NAME } from '../FieldDefaultMessage/index.js';\nimport { FIELD_MORE_THAN_ONE_ORG_UNIT_MESSAGE_NAME } from '../FieldMoreThanOneOrgUnitMessage/index.js';\nimport { FIELD_NO_USER_MESSAGE_NAME } from '../FieldNoUserMessage/index.js';\nimport { FIELD_PARSER_NAME, parserTypes } from '../FieldParser/index.js';\nimport { FIELD_SEPARATOR_NAME } from '../FieldSeparator/index.js';\nimport { FIELD_SMS_CODES_NAME } from '../FieldSmsCode/index.js';\nimport { FIELD_SPECIAL_CHARS_NAME } from '../FieldSpecialCharacter/index.js';\nimport { FIELD_SUCCESS_MESSAGE_NAME } from '../FieldSuccessMessage/index.js';\nimport { FIELD_USE_CURRENT_PERIOD_FOR_REPORTING_NAME } from '../FieldUseCurrentPeriodForReporting/index.js';\nimport { FIELD_WRONG_FORMAT_MESSAGE_NAME } from '../FieldWrongFormatMessage/index.js';\nconst {\n  AT_LEAST_ONE_DATAVALUE\n} = completenessMethods;\nconst {\n  KEY_VALUE_PARSER\n} = parserTypes;\nexport const getInitialFormState = command => {\n  const name = command[FIELD_COMMAND_NAME];\n  const parserType = KEY_VALUE_PARSER.value;\n  const dataSetId = {\n    id: command[FIELD_DATA_SET_NAME].id\n  };\n  const separator = command[FIELD_SEPARATOR_NAME];\n  const completenessMethod = AT_LEAST_ONE_DATAVALUE.value;\n  const useCurrentPeriodForReporting = command[FIELD_USE_CURRENT_PERIOD_FOR_REPORTING_NAME];\n  const defaultMessage = command[FIELD_DEFAULT_MESSAGE_NAME];\n  const wrongFormatMessage = command[FIELD_WRONG_FORMAT_MESSAGE_NAME];\n  const noUserMessage = command[FIELD_NO_USER_MESSAGE_NAME];\n  const moreThanOneOrgUnitMessage = command[FIELD_MORE_THAN_ONE_ORG_UNIT_MESSAGE_NAME];\n  const successMessage = command[FIELD_SUCCESS_MESSAGE_NAME];\n  const smsCodes = command[FIELD_SMS_CODES_NAME].reduce((acc, payload) => {\n    const {\n      code,\n      compulsory,\n      formula,\n      optionId: optionIdWrapper,\n      dataElement\n    } = payload;\n    const {\n      id: optionId\n    } = optionIdWrapper;\n    const key = optionId < 10 ? dataElement.id : `${dataElement.id}-${optionId}`;\n    const smsCode = {\n      code,\n      compulsory,\n      optionId\n    };\n\n    if (formula) {\n      smsCode.formula = formula;\n    }\n\n    return { ...acc,\n      [key]: smsCode\n    };\n  }, {});\n  const specialCharacters = command[FIELD_SPECIAL_CHARS_NAME] || [];\n  return {\n    [FIELD_COMMAND_NAME]: name,\n    [FIELD_PARSER_NAME]: parserType,\n    [FIELD_DATA_SET_NAME]: dataSetId,\n    [FIELD_SEPARATOR_NAME]: separator,\n    [FIELD_COMPLETENESS_METHOD_NAME]: completenessMethod,\n    [FIELD_USE_CURRENT_PERIOD_FOR_REPORTING_NAME]: useCurrentPeriodForReporting,\n    [FIELD_DEFAULT_MESSAGE_NAME]: defaultMessage,\n    [FIELD_WRONG_FORMAT_MESSAGE_NAME]: wrongFormatMessage,\n    [FIELD_NO_USER_MESSAGE_NAME]: noUserMessage,\n    [FIELD_MORE_THAN_ONE_ORG_UNIT_MESSAGE_NAME]: moreThanOneOrgUnitMessage,\n    [FIELD_SUCCESS_MESSAGE_NAME]: successMessage,\n    smsCodes,\n    specialCharacters\n  };\n};","import i18n from '../../locales/index.js';\nimport { FIELD_SMS_CODES_NAME } from '../FieldSmsCode/index.js';\nimport { getSmsCodeDuplicates } from '../getSmsCodeDuplicates/index.js';\nexport const globalValidate = values => {\n  let hasErrors = false;\n  const errors = {};\n  const smsCodesFormState = values[FIELD_SMS_CODES_NAME];\n  const smsCodes = smsCodesFormState ? Object.entries(smsCodesFormState) : [];\n  const smsCodesWithValue = smsCodes.filter(([_, {\n    code\n  }]) => code); //eslint-disable-line no-unused-vars\n\n  if (smsCodesWithValue.length) {\n    const duplicates = getSmsCodeDuplicates(smsCodesWithValue);\n\n    if (duplicates.length) {\n      hasErrors = true;\n      const duplicateErrors = {};\n      duplicates.forEach(duplicate => {\n        duplicateErrors[duplicate] = {\n          code: i18n.t('Duplicate value!')\n        };\n      });\n      errors[FIELD_SMS_CODES_NAME] = errors[FIELD_SMS_CODES_NAME] || {};\n      Object.assign(errors[FIELD_SMS_CODES_NAME], duplicateErrors);\n    }\n  }\n\n  return hasErrors ? errors : undefined;\n};","import { useDataEngine } from '@dhis2/app-runtime';\nimport { useEffect, useState } from 'react'; // @TODO(non-critical):\n//   The response for key value parser\n//   does contain the information for \"Data element category combination\".\n//   But it does not contain the id of the category option combo,\n//   only the data element and a code.\n\nexport const READ_SMS_COMMAND_KEY_VALUE_PARSER_QUERY = {\n  smsCommand: {\n    resource: 'smsCommands',\n    id: ({\n      id\n    }) => id,\n    params: () => ({\n      fields: ['*', `dataset[id,displayName,dataSetElements[dataElement[id,displayName,categoryCombo[categoryOptionCombos[*,id,displayName]]]]]`]\n    })\n  }\n};\nexport const useCommandData = id => {\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [data, setData] = useState(null);\n  const engine = useDataEngine();\n\n  const refetch = variables => {\n    setLoading(true);\n    setError(null);\n    return engine.query(READ_SMS_COMMAND_KEY_VALUE_PARSER_QUERY, {\n      variables\n    }).then(response => {\n      response.smsCommand.dataset.dataSetElements.sort((left, right) => {\n        const leftDisplayName = left.dataElement.displayName;\n        const rightDisplayName = right.dataElement.displayName;\n\n        if (leftDisplayName === rightDisplayName) {\n          return 0;\n        }\n\n        if (leftDisplayName < rightDisplayName) {\n          return -1;\n        }\n\n        return 1;\n      });\n      setData(response);\n    }).catch(setError).finally(() => setLoading(false));\n  }; // initial request\n\n\n  useEffect(() => {\n    refetch({\n      id\n    });\n  }, []);\n  return {\n    loading,\n    error,\n    data,\n    refetch\n  };\n};","import { useDataEngine } from '@dhis2/app-runtime';\nimport { useSubmit } from '../../shared/index.js';\nimport { FIELD_COMMAND_NAME } from '../FieldCommandName/index.js';\nimport { FIELD_COMPLETENESS_METHOD_NAME } from '../FieldCompletenessMethod/index.js';\nimport { FIELD_DATA_SET_NAME } from '../FieldDataSet/index.js';\nimport { FIELD_DEFAULT_MESSAGE_NAME } from '../FieldDefaultMessage/index.js';\nimport { FIELD_MORE_THAN_ONE_ORG_UNIT_MESSAGE_NAME } from '../FieldMoreThanOneOrgUnitMessage/index.js';\nimport { FIELD_NO_USER_MESSAGE_NAME } from '../FieldNoUserMessage/index.js';\nimport { FIELD_PARSER_NAME } from '../FieldParser/index.js';\nimport { FIELD_SEPARATOR_NAME } from '../FieldSeparator/index.js';\nimport { FIELD_SMS_CODES_NAME } from '../FieldSmsCode/index.js';\nimport { FIELD_SPECIAL_CHARS_NAME } from '../FieldSpecialCharacter/index.js';\nimport { FIELD_SUCCESS_MESSAGE_NAME } from '../FieldSuccessMessage/index.js';\nimport { FIELD_USE_CURRENT_PERIOD_FOR_REPORTING_NAME } from '../FieldUseCurrentPeriodForReporting/index.js';\nimport { FIELD_WRONG_FORMAT_MESSAGE_NAME } from '../FieldWrongFormatMessage/index.js';\nconst updateKeyValueParserMutation = {\n  resource: 'smsCommands',\n  type: 'update',\n  id: ({\n    id\n  }) => id,\n  data: command => {\n    const name = command[FIELD_COMMAND_NAME];\n    const parserType = command[FIELD_PARSER_NAME];\n    const dataSetId = {\n      id: command[FIELD_DATA_SET_NAME].id\n    };\n    const separator = command[FIELD_SEPARATOR_NAME];\n    const completenessMethod = command[FIELD_COMPLETENESS_METHOD_NAME];\n    const useCurrentPeriodForReporting = command[FIELD_USE_CURRENT_PERIOD_FOR_REPORTING_NAME];\n    const defaultMessage = command[FIELD_DEFAULT_MESSAGE_NAME];\n    const wrongFormatMessage = command[FIELD_WRONG_FORMAT_MESSAGE_NAME];\n    const noUserMessage = command[FIELD_NO_USER_MESSAGE_NAME];\n    const moreThanOneOrgUnitMessage = command[FIELD_MORE_THAN_ONE_ORG_UNIT_MESSAGE_NAME];\n    const successMessage = command[FIELD_SUCCESS_MESSAGE_NAME];\n    const specialCharacters = command[FIELD_SPECIAL_CHARS_NAME] || [];\n    const smsCodes = Object.values(command[FIELD_SMS_CODES_NAME]).map(({\n      code: codeWrapper,\n      compulsory,\n      optionId,\n      dataElement\n    }) => {\n      const {\n        code,\n        formula\n      } = codeWrapper;\n      const formattedSmsCode = {\n        code,\n        compulsory: !!compulsory,\n        dataElement\n      };\n\n      if (formula) {\n        formattedSmsCode.formula = formula;\n      }\n\n      if (optionId) {\n        formattedSmsCode.optionId = optionId;\n      }\n\n      return formattedSmsCode;\n    });\n    return {\n      [FIELD_COMMAND_NAME]: name,\n      [FIELD_PARSER_NAME]: parserType,\n      [FIELD_DATA_SET_NAME]: dataSetId,\n      [FIELD_SEPARATOR_NAME]: separator,\n      [FIELD_COMPLETENESS_METHOD_NAME]: completenessMethod,\n      [FIELD_USE_CURRENT_PERIOD_FOR_REPORTING_NAME]: useCurrentPeriodForReporting,\n      [FIELD_DEFAULT_MESSAGE_NAME]: defaultMessage,\n      [FIELD_WRONG_FORMAT_MESSAGE_NAME]: wrongFormatMessage,\n      [FIELD_NO_USER_MESSAGE_NAME]: noUserMessage,\n      [FIELD_MORE_THAN_ONE_ORG_UNIT_MESSAGE_NAME]: moreThanOneOrgUnitMessage,\n      [FIELD_SUCCESS_MESSAGE_NAME]: successMessage,\n      [FIELD_SPECIAL_CHARS_NAME]: specialCharacters,\n      [FIELD_SMS_CODES_NAME]: smsCodes\n    };\n  }\n};\nexport const useUpdateCommandMutation = ({\n  id,\n  onAfterChange\n}) => {\n  const engine = useDataEngine();\n\n  const onSubmit = values => {\n    const variables = { ...values,\n      id,\n      smsCodes: !values.smsCodes || !Object.values(values.smsCodes).length ? [] : Object.entries(values.smsCodes).map(([key, value]) => {\n        const [dataElementId, categoryOptionComboId] = key.split('-');\n        return { ...(categoryOptionComboId ? {\n            optionId: {\n              id: categoryOptionComboId\n            }\n          } : {}),\n          code: value,\n          dataElement: {\n            id: dataElementId\n          }\n        };\n      })\n    };\n    return engine.mutate(updateKeyValueParserMutation, {\n      variables\n    }).then(onAfterChange);\n  };\n\n  return useSubmit(onSubmit);\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { CenteredContent, CircularLoader, NoticeBox, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales/index.js';\nimport { dataTest as createDataTestValue } from '../../shared/index.js';\nimport { FIELD_DATA_SET_NAME } from '../FieldDataSet/index.js';\nimport { FIELD_SPECIAL_CHARS_NAME } from '../FieldSpecialCharacter/index.js';\nimport { Form as FormComponent } from './Form.js';\nimport { getInitialFormState } from './getInitialFormState.js';\nimport { globalValidate } from './globalValidate.js';\nimport { useCommandData } from './useCommandData.js';\nimport { useUpdateCommandMutation } from './useUpdateCommandMutation.js';\nconst {\n  Form\n} = ReactFinalForm;\nexport const FormKeyValueParser = ({\n  commandId,\n  onAfterChange,\n  onCancel\n}) => {\n  const dataTest = createDataTestValue('smscommandkeyvalueparser-commandeditj2meparserform');\n  const {\n    error: loadingCommandError,\n    data: commandData\n  } = useCommandData(commandId);\n  const command = commandData === null || commandData === void 0 ? void 0 : commandData.smsCommand;\n  const updateCommand = useUpdateCommandMutation({\n    id: commandId,\n    onAfterChange\n  });\n\n  if (loadingCommandError) {\n    const msg = i18n.t(\"Something went wrong whilst loading the command's details\");\n    return /*#__PURE__*/React.createElement(NoticeBox, {\n      error: true,\n      title: msg\n    }, loadingCommandError.message);\n  }\n\n  if (!command) {\n    return /*#__PURE__*/React.createElement(CenteredContent, null, /*#__PURE__*/React.createElement(CircularLoader, null));\n  }\n\n  const selectedDataSetOption = {\n    value: command[FIELD_DATA_SET_NAME].id,\n    label: command[FIELD_DATA_SET_NAME].displayName\n  };\n  const initialValues = getInitialFormState(command);\n  const DE_COC_combination_data = command.dataset.dataSetElements.reduce((curCombinations, {\n    dataElement\n  }) => {\n    var _dataElement$category;\n\n    const categoryOptionCombo = (_dataElement$category = dataElement.categoryCombo) === null || _dataElement$category === void 0 ? void 0 : _dataElement$category.categoryOptionCombos;\n\n    if (!categoryOptionCombo) {\n      return [...curCombinations, {\n        dataElement\n      }];\n    }\n\n    const combos = categoryOptionCombo.map(COC => ({\n      dataElement,\n      categoryOptionCombo: COC\n    }));\n    return [...curCombinations, ...combos];\n  }, []);\n  const specialChars = initialValues[FIELD_SPECIAL_CHARS_NAME];\n  const hasSpecialChars = !!(specialChars !== null && specialChars !== void 0 && specialChars.length);\n  return /*#__PURE__*/React.createElement(Form, {\n    keepDirtyOnReinitialize: true,\n    onSubmit: updateCommand,\n    initialValues: initialValues,\n    validate: globalValidate,\n    subscription: {\n      pristine: true\n    }\n  }, ({\n    handleSubmit,\n    pristine,\n    dirty\n  }) => /*#__PURE__*/React.createElement(FormComponent, {\n    DE_COC_combination_data: DE_COC_combination_data,\n    dataTest: dataTest,\n    dirty: dirty,\n    handleSubmit: handleSubmit,\n    pristine: pristine,\n    hasSpecialChars: hasSpecialChars,\n    selectedDataSetOption: selectedDataSetOption,\n    onCancel: onCancel\n  }));\n};\nFormKeyValueParser.propTypes = {\n  commandId: PropTypes.string.isRequired,\n  onAfterChange: PropTypes.func.isRequired,\n  onCancel: PropTypes.func.isRequired\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales/index.js';\nimport { FormRow, PageSubHeadline, dataTest } from '../../shared/index.js';\nimport { FieldCommandName } from '../FieldCommandName/index.js';\nimport { FieldDefaultMessage } from '../FieldDefaultMessage/index.js';\nimport { FieldMoreThanOneOrgUnitMessage } from '../FieldMoreThanOneOrgUnitMessage/index.js';\nimport { FieldNoUserMessage } from '../FieldNoUserMessage/index.js';\nimport { FieldParser } from '../FieldParser/index.js';\nimport { FieldProgram } from '../FieldProgram/index.js';\nimport { FieldProgramStage } from '../FieldProgramStage/index.js';\nimport { FieldSeparator } from '../FieldSeparator/index.js';\nimport { FIELD_SMS_CODES_NAME } from '../FieldSmsCode/index.js';\nimport { FieldSmsCodeDataElement } from '../FieldSmsCodeDataElement/index.js';\nimport { FieldSuccessMessage } from '../FieldSuccessMessage/index.js';\nimport { FieldWrongFormatMessage } from '../FieldWrongFormatMessage/index.js';\nimport { FormActions } from '../FormActions/index.js';\nimport { SubmitErrors } from '../SubmitErrors/index.js';\nconst {\n  useFormState\n} = ReactFinalForm;\nexport const FormComponent = ({\n  handleSubmit,\n  selectedProgramOption,\n  programStageDataElements,\n  selectedProgramStageOption,\n  onCancel\n}) => {\n  const {\n    pristine,\n    values\n  } = useFormState();\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    \"data-test\": dataTest('commands-commandeditprogramstagedataentryparserform')\n  }, /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldCommandName, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldParser, {\n    disabled: true\n  })), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldProgram, {\n    disabled: true,\n    programs: [selectedProgramOption]\n  })), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldProgramStage, {\n    disabled: true,\n    programStages: [selectedProgramStageOption]\n  })), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldSeparator, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldDefaultMessage, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldWrongFormatMessage, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldNoUserMessage, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldMoreThanOneOrgUnitMessage, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldSuccessMessage, null)), /*#__PURE__*/React.createElement(PageSubHeadline, null, i18n.t('SMS short codes')), programStageDataElements && /*#__PURE__*/React.createElement(FormRow, null, programStageDataElements.map(({\n    dataElement\n  }) => /*#__PURE__*/React.createElement(FieldSmsCodeDataElement, {\n    key: dataElement.id,\n    dataElement: dataElement,\n    smsCodes: values[FIELD_SMS_CODES_NAME]\n  }))), /*#__PURE__*/React.createElement(SubmitErrors, null), /*#__PURE__*/React.createElement(FormActions, {\n    onCancel: () => onCancel(pristine)\n  }));\n};\nFormComponent.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n  programStageDataElements: PropTypes.arrayOf(PropTypes.shape({\n    dataElement: PropTypes.shape({\n      displayName: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired\n    })\n  })).isRequired,\n  selectedProgramOption: PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired\n  }).isRequired,\n  selectedProgramStageOption: PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired\n  }).isRequired,\n  onCancel: PropTypes.func.isRequired\n};","import { FIELD_COMMAND_NAME } from '../FieldCommandName/index.js';\nimport { FIELD_DEFAULT_MESSAGE_NAME } from '../FieldDefaultMessage/index.js';\nimport { FIELD_MORE_THAN_ONE_ORG_UNIT_MESSAGE_NAME } from '../FieldMoreThanOneOrgUnitMessage/index.js';\nimport { FIELD_NO_USER_MESSAGE_NAME } from '../FieldNoUserMessage/index.js';\nimport { FIELD_PARSER_NAME, parserTypes } from '../FieldParser/index.js';\nimport { FIELD_PROGRAM_NAME } from '../FieldProgram/index.js';\nimport { FIELD_PROGRAM_STAGE_NAME } from '../FieldProgramStage/index.js';\nimport { FIELD_SEPARATOR_NAME } from '../FieldSeparator/index.js';\nimport { FIELD_SMS_CODES_NAME } from '../FieldSmsCode/index.js';\nimport { FIELD_SUCCESS_MESSAGE_NAME } from '../FieldSuccessMessage/index.js';\nimport { FIELD_WRONG_FORMAT_MESSAGE_NAME } from '../FieldWrongFormatMessage/index.js';\nconst {\n  PROGRAM_STAGE_DATAENTRY_PARSER\n} = parserTypes;\nexport const getInitialFormState = command => {\n  const name = command[FIELD_COMMAND_NAME];\n  const program = command[FIELD_PROGRAM_NAME];\n  const programStage = command[FIELD_PROGRAM_STAGE_NAME];\n  const separator = command[FIELD_SEPARATOR_NAME];\n  const defaultMessage = command[FIELD_DEFAULT_MESSAGE_NAME];\n  const wrongFormatMessage = command[FIELD_WRONG_FORMAT_MESSAGE_NAME];\n  const noUserMessage = command[FIELD_NO_USER_MESSAGE_NAME];\n  const moreThanOneOrgUnitMessage = command[FIELD_MORE_THAN_ONE_ORG_UNIT_MESSAGE_NAME];\n  const successMessage = command[FIELD_SUCCESS_MESSAGE_NAME];\n  const smsCodes = command[FIELD_SMS_CODES_NAME].reduce((curSmsCodes, smsCode) => ({ ...curSmsCodes,\n    [smsCode.dataElement.id]: smsCode\n  }), {});\n  return {\n    [FIELD_COMMAND_NAME]: name,\n    [FIELD_PARSER_NAME]: PROGRAM_STAGE_DATAENTRY_PARSER.value,\n    [FIELD_PROGRAM_NAME]: program,\n    [FIELD_PROGRAM_STAGE_NAME]: programStage,\n    [FIELD_SEPARATOR_NAME]: separator,\n    [FIELD_DEFAULT_MESSAGE_NAME]: defaultMessage,\n    [FIELD_WRONG_FORMAT_MESSAGE_NAME]: wrongFormatMessage,\n    [FIELD_NO_USER_MESSAGE_NAME]: noUserMessage,\n    [FIELD_MORE_THAN_ONE_ORG_UNIT_MESSAGE_NAME]: moreThanOneOrgUnitMessage,\n    [FIELD_SUCCESS_MESSAGE_NAME]: successMessage,\n    [FIELD_SMS_CODES_NAME]: smsCodes\n  };\n};","import { useDataQuery } from '@dhis2/app-runtime';\nconst READ_SMS_COMMAND_PROGRAM_STAGE_DATA_ENTRY_PARSER_QUERY = {\n  smsCommand: {\n    resource: 'smsCommands',\n    id: ({\n      id\n    }) => id,\n    params: {\n      fields: ['*', 'program[id,displayName]', 'programStage[id,displayName,programStageDataElements[dataElement[id,displayName]]]'],\n      paging: 'false'\n    }\n  }\n};\nexport const useCommandData = programStageId => useDataQuery(READ_SMS_COMMAND_PROGRAM_STAGE_DATA_ENTRY_PARSER_QUERY, {\n  variables: {\n    id: programStageId\n  }\n});","import { useDataEngine } from '@dhis2/app-runtime';\nimport { useSubmit } from '../../shared/index.js';\nimport { FIELD_SMS_CODES_NAME } from '../FieldSmsCode/index.js';\nexport const REPLACE_SMS_COMMAND_MUTATION = {\n  resource: 'smsCommands',\n  type: 'update',\n  id: ({\n    commandId\n  }) => commandId,\n  // @TODO(non-critical):\n  //   Make this produce static object structures\n  // eslint-disable-next-line no-unused-vars\n  data: ({\n    commandId,\n    ...params\n  }) => ({ ...params,\n    [FIELD_SMS_CODES_NAME]: Object.values(params[FIELD_SMS_CODES_NAME])\n  })\n};\nexport const UPDATE_SMS_COMMAND_MUTATION = { ...REPLACE_SMS_COMMAND_MUTATION,\n  partial: true\n};\nexport const useUpdateCommandMutation = ({\n  onAfterChange,\n  commandId\n}) => {\n  const engine = useDataEngine();\n\n  const onSubmit = values => {\n    const variables = { ...values,\n      commandId\n    };\n    return engine.mutate(REPLACE_SMS_COMMAND_MUTATION, {\n      variables\n    }).then(onAfterChange);\n  };\n\n  return useSubmit(onSubmit);\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales/index.js';\nimport { ContentLoading, ContentLoadingError } from '../../shared/index.js';\nimport { FormComponent } from './FormComponent.js';\nimport { getInitialFormState } from './getInitialFormState.js';\nimport { useCommandData } from './useCommandData.js';\nimport { useUpdateCommandMutation } from './useUpdateCommandMutation.js';\nconst {\n  Form\n} = ReactFinalForm;\nexport const FormProgramStageDataEntryParser = ({\n  commandId,\n  onAfterChange,\n  onCancel\n}) => {\n  const {\n    loading,\n    error,\n    data\n  } = useCommandData(commandId);\n  const updateCommand = useUpdateCommandMutation({\n    commandId,\n    onAfterChange\n  });\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(ContentLoading, null);\n  }\n\n  if (error) {\n    return /*#__PURE__*/React.createElement(ContentLoadingError, {\n      errorMessage: error.message,\n      title: i18n.t('Something went wrong whilst loading the sms command')\n    });\n  }\n\n  const command = data === null || data === void 0 ? void 0 : data.smsCommand;\n  const programStageDataElements = command === null || command === void 0 ? void 0 : command.programStage.programStageDataElements;\n  const initialValues = getInitialFormState(command);\n  const selectedProgramOption = {\n    value: command.program.id,\n    label: command.program.displayName\n  };\n  const selectedProgramStageOption = {\n    value: command.programStage.id,\n    label: command.programStage.displayName\n  };\n  return /*#__PURE__*/React.createElement(Form, {\n    keepDirtyOnReinitialize: true,\n    onSubmit: updateCommand,\n    initialValues: initialValues\n  }, ({\n    handleSubmit\n  }) => /*#__PURE__*/React.createElement(FormComponent, {\n    handleSubmit: handleSubmit,\n    selectedProgramOption: selectedProgramOption,\n    programStageDataElements: programStageDataElements,\n    selectedProgramStageOption: selectedProgramStageOption,\n    onCancel: onCancel\n  }));\n};\nFormProgramStageDataEntryParser.propTypes = {\n  commandId: PropTypes.string.isRequired,\n  onAfterChange: PropTypes.func.isRequired,\n  onCancel: PropTypes.func.isRequired\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales/index.js';\nimport { FormRow, PageSubHeadline, dataTest } from '../../shared/index.js';\nimport { FieldCommandName } from '../FieldCommandName/index.js';\nimport { FieldDefaultMessage } from '../FieldDefaultMessage/index.js';\nimport { FieldMoreThanOneOrgUnitMessage } from '../FieldMoreThanOneOrgUnitMessage/index.js';\nimport { FieldNoUserMessage } from '../FieldNoUserMessage/index.js';\nimport { FieldParser } from '../FieldParser/index.js';\nimport { FieldProgram } from '../FieldProgram/index.js';\nimport { FieldSeparator } from '../FieldSeparator/index.js';\nimport { FieldSmsCode } from '../FieldSmsCode/index.js';\nimport { FieldSuccessMessage } from '../FieldSuccessMessage/index.js';\nimport { FieldWrongFormatMessage } from '../FieldWrongFormatMessage/index.js';\nimport { FormActions } from '../FormActions/index.js';\nimport { SubmitErrors } from '../SubmitErrors/index.js';\nconst {\n  useFormState\n} = ReactFinalForm;\nexport const Form = ({\n  handleSubmit,\n  dynamicFields,\n  selectedProgramOption,\n  onCancel\n}) => {\n  const {\n    pristine\n  } = useFormState();\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    \"data-test\": dataTest('smscommand-formtrackedentityregistrationparser-form')\n  }, /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldCommandName, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldParser, {\n    disabled: true\n  })), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldProgram, {\n    disabled: true,\n    programs: [selectedProgramOption]\n  })), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldSeparator, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldDefaultMessage, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldWrongFormatMessage, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldNoUserMessage, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldMoreThanOneOrgUnitMessage, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldSuccessMessage, null)), /*#__PURE__*/React.createElement(PageSubHeadline, null, i18n.t('SMS short codes')), dynamicFields.map(dynamicField => {\n    // I assume this should switch field types based on `valueType`\n    // which can be 'TEXT', 'NUMBER', etc. Currently this renders\n    // a regular input for everything.\n    return /*#__PURE__*/React.createElement(FormRow, {\n      key: dynamicField.id\n    }, /*#__PURE__*/React.createElement(FieldSmsCode, {\n      id: dynamicField.id,\n      displayName: dynamicField.displayName,\n      valueType: dynamicField.valueType\n    }));\n  }), /*#__PURE__*/React.createElement(SubmitErrors, null), /*#__PURE__*/React.createElement(FormActions, {\n    onCancel: () => onCancel(pristine)\n  }));\n};\nForm.propTypes = {\n  dynamicFields: PropTypes.arrayOf(PropTypes.shape({\n    displayName: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n    valueType: PropTypes.string.isRequired\n  })).isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  selectedProgramOption: PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired\n  }).isRequired,\n  onCancel: PropTypes.func.isRequired\n};","import { useDataQuery } from '@dhis2/app-runtime';\nconst query = {\n  smsCommand: {\n    resource: 'smsCommands',\n    id: ({\n      id\n    }) => id,\n    params: () => {\n      const fields = ['name', 'parserType', 'separator', 'defaultMessage', 'wrongFormatMessage', 'noUserMessage', 'moreThanOneOrgUnitMessage', 'successMessage', // The queries below should be reduced to only the data we need\n      `program [\n                    id,\n                    displayName,\n                    programTrackedEntityAttributes [\n                        trackedEntityAttribute [\n                            :all,\n                            id,\n                            displayName\n                        ]\n                    ]\n                ]`, `smsCodes [\n                    :all,\n                    trackedEntityAttribute [\n                        id,\n                        displayName,\n                        valueType\n                    ]\n                ]`];\n      return {\n        fields: fields.map(field => field.replace(/(\\n|\\s)/g, ''))\n      };\n    }\n  }\n};\nexport const useCommandData = id => useDataQuery(query, {\n  variables: {\n    id\n  }\n});","import { useDataEngine } from '@dhis2/app-runtime';\nimport { useSubmit } from '../../shared/index.js';\nimport { FIELD_SMS_CODES_NAME } from '../FieldSmsCode/index.js';\nexport const REPLACE_SMS_COMMAND_MUTATION = {\n  resource: 'smsCommands',\n  type: 'update',\n  id: ({\n    commandId\n  }) => commandId,\n  // @TODO(non-critical):\n  //   Make this produce static object structures\n  // eslint-disable-next-line no-unused-vars\n  data: ({\n    commandId,\n    ...params\n  }) => ({ ...params,\n    [FIELD_SMS_CODES_NAME]: Object.values(params[FIELD_SMS_CODES_NAME])\n  })\n};\nexport const UPDATE_SMS_COMMAND_MUTATION = { ...REPLACE_SMS_COMMAND_MUTATION,\n  partial: true\n};\nexport const useUpdateCommandMutation = ({\n  onAfterChange,\n  commandId\n}) => {\n  const engine = useDataEngine();\n\n  const onSubmit = values => {\n    const variables = { ...values,\n      commandId\n    };\n    return engine.mutate(REPLACE_SMS_COMMAND_MUTATION, {\n      variables\n    }).then(onAfterChange);\n  };\n\n  return useSubmit(onSubmit);\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales/index.js';\nimport { ContentLoading, ContentLoadingError } from '../../shared/index.js';\nimport { Form as FormComponent } from './Form.js';\nimport { useCommandData } from './useCommandData.js';\nimport { useUpdateCommandMutation } from './useUpdateCommandMutation.js';\nconst {\n  Form\n} = ReactFinalForm;\nexport const FormTrackedEntityRegistrationParser = ({\n  commandId,\n  onAfterChange,\n  onCancel\n}) => {\n  const {\n    loading,\n    error,\n    data\n  } = useCommandData(commandId);\n  const updateCommand = useUpdateCommandMutation({\n    commandId,\n    onAfterChange\n  });\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(ContentLoading, null);\n  }\n\n  if (error) {\n    return /*#__PURE__*/React.createElement(ContentLoadingError, {\n      errorMessage: error.message,\n      title: i18n.t('Something went wrong whilst loading the sms command')\n    });\n  }\n\n  const {\n    name,\n    parserType,\n    program,\n    separator,\n    defaultMessage,\n    wrongFormatMessage,\n    noUserMessage,\n    moreThanOneOrgUnitMessage,\n    successMessage,\n    smsCodes: smsCodesOriginal\n  } = data.smsCommand;\n  const smsCodes = smsCodesOriginal.reduce((curSmsCodes, smsCode) => ({ ...curSmsCodes,\n    [smsCode.trackedEntityAttribute.id]: smsCode\n  }), {});\n  const initialValues = {\n    name,\n    parserType,\n    program,\n    separator,\n    defaultMessage,\n    wrongFormatMessage,\n    noUserMessage,\n    moreThanOneOrgUnitMessage,\n    successMessage,\n    smsCodes\n  };\n  const selectedProgramOption = {\n    value: program.id,\n    label: program.displayName\n  };\n  /**\n   * Create usable data for the dynamic fields\n   */\n  // The tracked entity attributes here have the right order for the fields\n\n  const trackedEntityAttributes = program.programTrackedEntityAttributes.map(({\n    trackedEntityAttribute\n  }) => trackedEntityAttribute); // Creating an array with only the data we need to render our dynamic form fields\n\n  const dynamicFields = trackedEntityAttributes.map(trackedEntityAttribute => {\n    const {\n      id,\n      displayName,\n      valueType\n    } = trackedEntityAttribute;\n    const merged = {\n      id,\n      displayName,\n      valueType\n    };\n    const smsCode = smsCodes[id];\n\n    if (smsCode) {\n      // This contains the actual value of the field\n      merged.initialValue = smsCode.code;\n    }\n\n    return merged;\n  });\n  return /*#__PURE__*/React.createElement(Form, {\n    keepDirtyOnReinitialize: true,\n    onSubmit: updateCommand,\n    initialValues: initialValues\n  }, ({\n    handleSubmit\n  }) => /*#__PURE__*/React.createElement(FormComponent, {\n    dynamicFields: dynamicFields,\n    handleSubmit: handleSubmit,\n    selectedProgramOption: selectedProgramOption,\n    onCancel: onCancel\n  }));\n};\nFormTrackedEntityRegistrationParser.propTypes = {\n  commandId: PropTypes.string.isRequired,\n  onAfterChange: PropTypes.func.isRequired,\n  onCancel: PropTypes.func.isRequired\n};","import { PropTypes } from '@dhis2/prop-types';\nimport React from 'react';\nimport { FormRow, FieldUserGroup, dataTest } from '../../shared/index.js';\nimport { FieldCommandName } from '../FieldCommandName/index.js';\nimport { FieldConfirmMessage } from '../FieldConfirmMessage/index.js';\nimport { FieldParser } from '../FieldParser/index.js';\nimport { FormActions } from '../FormActions/index.js';\nimport { SubmitErrors } from '../SubmitErrors/index.js';\nexport const Form = ({\n  handleSubmit,\n  userGroups,\n  pristine,\n  onCancel\n}) => /*#__PURE__*/React.createElement(\"form\", {\n  onSubmit: handleSubmit,\n  \"data-test\": dataTest('commands-commandunregisteredparserform')\n}, /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldCommandName, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldParser, {\n  disabled: true\n})), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldUserGroup, {\n  disabled: true,\n  userGroups: userGroups\n})), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldConfirmMessage, null)), /*#__PURE__*/React.createElement(SubmitErrors, null), /*#__PURE__*/React.createElement(FormActions, {\n  onCancel: () => onCancel(pristine)\n}));\nForm.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n  pristine: PropTypes.bool.isRequired,\n  userGroups: PropTypes.arrayOf(PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired\n  })).isRequired,\n  onCancel: PropTypes.func.isRequired\n};","import { useDataQuery } from '@dhis2/app-runtime';\nconst query = {\n  smsCommand: {\n    resource: 'smsCommands',\n    id: ({\n      commandId\n    }) => commandId,\n    params: {\n      fields: ['name', 'parserType', 'receivedMessage', 'userGroup[name,id]']\n    }\n  }\n};\nexport const useCommandData = commandId => {\n  const variables = {\n    commandId\n  };\n  return useDataQuery(query, {\n    variables\n  });\n};","import { useDataEngine } from '@dhis2/app-runtime';\nimport { useSubmit } from '../../shared/index.js';\nexport const UPDATE_COMMAND_MUTATION = {\n  resource: 'smsCommands',\n  type: 'update',\n  partial: true,\n  id: ({\n    commandId\n  }) => commandId,\n  // @TODO(non-critical):\n  //   Make this produce static object structures\n  // eslint-disable-next-line no-unused-vars\n  data: ({\n    commandId,\n    ...params\n  }) => params\n};\nexport const useUpdateCommandMutation = ({\n  onAfterChange,\n  commandId\n}) => {\n  const engine = useDataEngine();\n\n  const onSubmit = values => {\n    const variables = { ...values,\n      commandId\n    };\n    return engine.mutate(UPDATE_COMMAND_MUTATION, {\n      variables\n    }).then(onAfterChange);\n  };\n\n  return useSubmit(onSubmit);\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales/index.js';\nimport { ContentLoading, ContentLoadingError } from '../../shared/index.js';\nimport { Form as FormComponent } from './Form.js';\nimport { useCommandData } from './useCommandData.js';\nimport { useUpdateCommandMutation } from './useUpdateCommandMutation.js';\nconst {\n  Form\n} = ReactFinalForm;\nexport const FormUnregisteredParser = ({\n  commandId,\n  onAfterChange,\n  onCancel\n}) => {\n  const {\n    loading,\n    error,\n    data\n  } = useCommandData(commandId);\n  const updateCommand = useUpdateCommandMutation({\n    commandId,\n    onAfterChange\n  });\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(ContentLoading, null);\n  }\n\n  if (error) {\n    return /*#__PURE__*/React.createElement(ContentLoadingError, {\n      errorMessage: error.message,\n      title: i18n.t('Something went wrong whilst loading the sms command')\n    });\n  }\n\n  const {\n    name,\n    parserType,\n    receivedMessage,\n    userGroup\n  } = data.smsCommand;\n  const initialValues = {\n    name,\n    parserType,\n    receivedMessage,\n    userGroup: userGroup.id\n  };\n  const userGroups = [{\n    value: userGroup.id,\n    label: userGroup.name\n  }];\n  return /*#__PURE__*/React.createElement(Form, {\n    keepDirtyOnReinitialize: true,\n    onSubmit: updateCommand,\n    initialValues: initialValues\n  }, ({\n    handleSubmit,\n    pristine\n  }) => /*#__PURE__*/React.createElement(FormComponent, {\n    handleSubmit: handleSubmit,\n    userGroups: userGroups,\n    pristine: pristine,\n    onCancel: onCancel\n  }));\n};\nFormUnregisteredParser.propTypes = {\n  commandId: PropTypes.string.isRequired,\n  onAfterChange: PropTypes.func.isRequired,\n  onCancel: PropTypes.func.isRequired\n};","import { useDataQuery } from '@dhis2/app-runtime';\nexport const READ_SMS_COMMAND_PARSER_TYPE_QUERY = {\n  smsCommand: {\n    resource: 'smsCommands',\n    id: ({\n      id\n    }) => id,\n    params: {\n      fields: 'parserType',\n      paging: 'false'\n    }\n  }\n};\nexport const useReadSmsCommandParserTypeQuery = id => useDataQuery(READ_SMS_COMMAND_PARSER_TYPE_QUERY, {\n  variables: {\n    id\n  }\n});","import { NoticeBox, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport React, { useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport i18n from '../../locales/index.js';\nimport { CancelDialog, PageHeadline, TemplateSidebarNavContent, dataTest } from '../../shared/index.js';\nimport { FIELD_PARSER_NAME, parserTypes } from '../FieldParser/index.js';\nimport { FormAlertParser } from '../FormAlertParser/index.js';\nimport { FormEventRegistrationParser } from '../FormEventRegistrationParser/index.js';\nimport { FormJ2meParser } from '../FormJ2meParser/index.js';\nimport { FormKeyValueParser } from '../FormKeyValueParser/index.js';\nimport { FormProgramStageDataEntryParser } from '../FormProgramStageDataEntryParser/index.js';\nimport { FormTrackedEntityRegistrationParser } from '../FormTrackedEntityRegistrationParser/index.js';\nimport { FormUnregisteredParser } from '../FormUnregisteredParser/index.js';\nimport { useReadSmsCommandParserTypeQuery } from './useReadSmsCommandParserTypeQuery.js';\nimport styles from './ViewSmsCommandEdit.module.css';\nexport const SMS_COMMAND_FORM_EDIT_PATH_STATIC = '/sms-config/edit';\nexport const SMS_COMMAND_FORM_EDIT_PATH = `${SMS_COMMAND_FORM_EDIT_PATH_STATIC}/:id`;\nconst {\n  ALERT_PARSER,\n  EVENT_REGISTRATION_PARSER,\n  J2ME_PARSER,\n  KEY_VALUE_PARSER,\n  PROGRAM_STAGE_DATAENTRY_PARSER,\n  TRACKED_ENTITY_REGISTRATION_PARSER,\n  UNREGISTERED_PARSER\n} = parserTypes;\n\nconst isParserType = (parserType, parser) => parserType === parser.value;\n\nconst getSmsCommandEditFormComponent = parserType => {\n  const isParser = isParserType.bind(null, parserType);\n\n  if (!parserType) {\n    return null;\n  }\n\n  if (isParser(KEY_VALUE_PARSER)) {\n    return FormKeyValueParser;\n  }\n\n  if (isParser(J2ME_PARSER)) {\n    return FormJ2meParser;\n  }\n\n  if (isParser(ALERT_PARSER)) {\n    return FormAlertParser;\n  }\n\n  if (isParser(PROGRAM_STAGE_DATAENTRY_PARSER)) {\n    return FormProgramStageDataEntryParser;\n  }\n\n  if (isParser(UNREGISTERED_PARSER)) {\n    return FormUnregisteredParser;\n  }\n\n  if (isParser(EVENT_REGISTRATION_PARSER)) {\n    return FormEventRegistrationParser;\n  }\n\n  if (isParser(TRACKED_ENTITY_REGISTRATION_PARSER)) {\n    return FormTrackedEntityRegistrationParser;\n  }\n\n  return null;\n};\n\nexport const ViewSmsCommandEdit = () => {\n  const history = useHistory();\n  const {\n    id\n  } = useParams();\n  const {\n    loading,\n    error,\n    data\n  } = useReadSmsCommandParserTypeQuery(id);\n  const [showCancelDialog, setShowCancelDialog] = useState(false);\n\n  const onAfterChange = () => history.push('/sms-command');\n\n  const onCancel = pristine => pristine ? history.goBack() : setShowCancelDialog(true);\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(CenteredContent, null, /*#__PURE__*/React.createElement(CircularLoader, null));\n  }\n\n  if (error) {\n    const msg = i18n.t('Something went wrong whilst loading commands');\n    return /*#__PURE__*/React.createElement(NoticeBox, {\n      error: true,\n      title: msg\n    }, error.message);\n  }\n\n  const parserType = data === null || data === void 0 ? void 0 : data.smsCommand[FIELD_PARSER_NAME];\n  const FormComponent = getSmsCommandEditFormComponent(parserType);\n  return /*#__PURE__*/React.createElement(TemplateSidebarNavContent, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    \"data-test\": dataTest('smscommand-viewsmscommandedit')\n  }, /*#__PURE__*/React.createElement(PageHeadline, null, i18n.t('Edit command')), FormComponent && /*#__PURE__*/React.createElement(FormComponent, {\n    commandId: id,\n    onCancel: onCancel,\n    onAfterChange: onAfterChange\n  }), showCancelDialog && /*#__PURE__*/React.createElement(CancelDialog, {\n    onConfirmCancel: () => history.push('/sms-command'),\n    onAbortCancel: () => setShowCancelDialog(false)\n  }), !parserType && /*#__PURE__*/React.createElement(NoticeBox, {\n    error: true,\n    title: i18n.t('Unrecognised parser type')\n  }, i18n.t('Could not find the requested parser type'))));\n};","import { useDataEngine } from '@dhis2/app-runtime';\nimport { useState } from 'react';\nexport const DELETE_SMS_COMMAND_MUTATION = {\n  resource: 'smsCommands',\n  type: 'delete',\n  id: ({\n    id\n  }) => id\n};\n\nconst idToMutationRequestFactory = engine => id => {\n  const variables = {\n    id\n  };\n  return engine.mutate(DELETE_SMS_COMMAND_MUTATION, {\n    variables\n  });\n};\n\nexport const useDeleteSmsCommandMutation = () => {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const engine = useDataEngine();\n  const idToMutationRequest = idToMutationRequestFactory(engine);\n\n  const onStart = () => setLoading(true);\n\n  const onDone = response => {\n    setLoading(false);\n    return response;\n  };\n\n  const onError = error => {\n    setError(error);\n    setLoading(false);\n  };\n\n  const mutate = ({\n    ids\n  }) => {\n    onStart();\n    return Promise.all(ids.map(idToMutationRequest)).then(onDone).catch(onError);\n  };\n\n  return [mutate, {\n    loading,\n    error\n  }];\n};","import { useDataQuery } from '@dhis2/app-runtime';\nexport const SMS_COMMANDS_QUERY = {\n  smsCommands: {\n    resource: 'smsCommands',\n    pager: false,\n    params: ({\n      ids\n    } = {}) => ({\n      // @TODO: Why is `paging: false` not working?\n      paging: 'false',\n      fields: '*',\n      filter: ids ? `ids:in:[${ids.join(',')}]` : undefined\n    })\n  }\n};\nexport const useReadSmsCommandsQuery = () => useDataQuery(SMS_COMMANDS_QUERY);","import { Button, Checkbox, Table, TableHead, TableBody, TableRow, TableRowHead, TableCell, TableCellHead, NoticeBox, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport i18n from '../../locales/index.js';\nimport { ListActions, DeleteConfirmationDialog, PageHeadline, Paragraph, TemplateSidebarNavContent, dataTest } from '../../shared/index.js';\nimport { parserTypes } from '../FieldParser/index.js';\nimport { useDeleteSmsCommandMutation } from './useDeleteSmsCommandMutation.js';\nimport { useReadSmsCommandsQuery } from './useReadSmsCommandsQuery.js';\nimport styles from './ViewSmsCommandList.module.css';\nexport const SMS_COMMAND_LIST_LABEL = i18n.t('Commands');\nexport const SMS_COMMAND_LIST_PATH = '/sms-config';\n\nconst getLabelByParserTypes = parserType => {\n  const type = Object.values(parserTypes).find(({\n    value\n  }) => value === parserType);\n  return (type === null || type === void 0 ? void 0 : type.label) || parserType;\n};\n\nexport const ViewSmsCommandList = () => {\n  var _data$smsCommands2, _data$smsCommands2$sm, _data$smsCommands3, _data$smsCommands3$sm, _data$smsCommands4, _data$smsCommands4$sm;\n\n  const history = useHistory();\n\n  const onAddCommandClick = () => history.push('sms-command/new');\n\n  const [checkedSmsCommands, setCheckedSmsCommands] = useState([]);\n  const [showDeleteConfirmationDialog, setShowDeleteConfirmationDialog] = useState(false);\n  const {\n    loading: loadingReadSmsCommands,\n    error: errorReadSmsCommands,\n    data,\n    refetch\n  } = useReadSmsCommandsQuery();\n  const [deleteSmsCommands, {\n    loading: loadingDelete,\n    error: errorDelete\n  }] = useDeleteSmsCommandMutation();\n\n  if (loadingReadSmsCommands) {\n    return /*#__PURE__*/React.createElement(TemplateSidebarNavContent, null, /*#__PURE__*/React.createElement(\"div\", {\n      \"data-test\": dataTest('smscommand-viewsmscommandlist')\n    }, /*#__PURE__*/React.createElement(PageHeadline, null, SMS_COMMAND_LIST_LABEL), /*#__PURE__*/React.createElement(CenteredContent, null, /*#__PURE__*/React.createElement(CircularLoader, null))));\n  }\n\n  const error = errorReadSmsCommands || errorDelete;\n\n  if (error) {\n    const msg = i18n.t('Something went wrong whilst performing the requested operation');\n    return /*#__PURE__*/React.createElement(TemplateSidebarNavContent, null, /*#__PURE__*/React.createElement(\"div\", {\n      \"data-test\": dataTest('views-smscommandlist')\n    }, /*#__PURE__*/React.createElement(PageHeadline, null, SMS_COMMAND_LIST_LABEL), /*#__PURE__*/React.createElement(NoticeBox, {\n      error: true,\n      title: msg\n    }, error.message)));\n  }\n\n  const onToggleCallChange = () => {\n    var _data$smsCommands;\n\n    const smsCommands = data === null || data === void 0 ? void 0 : (_data$smsCommands = data.smsCommands) === null || _data$smsCommands === void 0 ? void 0 : _data$smsCommands.smsCommands;\n\n    if (!smsCommands) {\n      return;\n    }\n\n    if (checkedSmsCommands.length === smsCommands.length) {\n      setCheckedSmsCommands([]);\n    } else {\n      setCheckedSmsCommands(smsCommands.map(({\n        id,\n        displayName\n      }) => ({\n        id,\n        displayName\n      })));\n    }\n  };\n\n  const toggleSmsCommand = smsCommand => {\n    const {\n      id\n    } = smsCommand;\n\n    if (checkedSmsCommands.find(({\n      id: checkedId\n    }) => id === checkedId)) {\n      const index = checkedSmsCommands.findIndex(({\n        id: checkedId\n      }) => id === checkedId);\n      return setCheckedSmsCommands([...checkedSmsCommands.slice(0, index), ...checkedSmsCommands.slice(index + 1)]);\n    }\n\n    return setCheckedSmsCommands([...checkedSmsCommands, smsCommand]);\n  };\n\n  const onDeleteClick = async () => {\n    const ids = checkedSmsCommands.map(({\n      id\n    }) => id);\n    await deleteSmsCommands({\n      ids\n    });\n    setCheckedSmsCommands([]);\n    setShowDeleteConfirmationDialog(false);\n    refetch();\n  };\n\n  const allChecked = checkedSmsCommands.length === (data === null || data === void 0 ? void 0 : (_data$smsCommands2 = data.smsCommands) === null || _data$smsCommands2 === void 0 ? void 0 : (_data$smsCommands2$sm = _data$smsCommands2.smsCommands) === null || _data$smsCommands2$sm === void 0 ? void 0 : _data$smsCommands2$sm.length);\n  const hasCommands = (data === null || data === void 0 ? void 0 : (_data$smsCommands3 = data.smsCommands) === null || _data$smsCommands3 === void 0 ? void 0 : (_data$smsCommands3$sm = _data$smsCommands3.smsCommands) === null || _data$smsCommands3$sm === void 0 ? void 0 : _data$smsCommands3$sm.length) > 0;\n  return /*#__PURE__*/React.createElement(TemplateSidebarNavContent, null, /*#__PURE__*/React.createElement(\"div\", {\n    \"data-test\": dataTest('views-smscommandlist'),\n    className: styles.container\n  }, /*#__PURE__*/React.createElement(PageHeadline, null, SMS_COMMAND_LIST_LABEL), /*#__PURE__*/React.createElement(Paragraph, null, i18n.t('SMS commands process SMS messages received by a DHIS2 instance, taking certain actions depending on the command and message content. Multiple SMS commands can be set up to process and handle data in multiple ways. Add and configure SMS commands below. Read about SMS commands in the DHIS2 documentation.')), /*#__PURE__*/React.createElement(ListActions, {\n    addLabel: i18n.t('Add command'),\n    deleteLabel: i18n.t('Delete selected'),\n    onAddClick: onAddCommandClick,\n    onDeleteClick: () => setShowDeleteConfirmationDialog(true),\n    disableAdd: loadingDelete,\n    disableDelete: !checkedSmsCommands.length || loadingDelete\n  }), showDeleteConfirmationDialog && /*#__PURE__*/React.createElement(DeleteConfirmationDialog, {\n    onCancelClick: () => setShowDeleteConfirmationDialog(false),\n    onDeleteClick: onDeleteClick\n  }, i18n.t('Are you sure you want to delete the selected commands?')), /*#__PURE__*/React.createElement(Table, {\n    dataTest: dataTest('views-smscommandlist-commandtable')\n  }, /*#__PURE__*/React.createElement(TableHead, null, /*#__PURE__*/React.createElement(TableRowHead, null, /*#__PURE__*/React.createElement(TableCellHead, null, /*#__PURE__*/React.createElement(Checkbox, {\n    checked: allChecked,\n    onChange: onToggleCallChange\n  })), /*#__PURE__*/React.createElement(TableCellHead, null, i18n.t('Sms command')), /*#__PURE__*/React.createElement(TableCellHead, null, i18n.t('Parser')), /*#__PURE__*/React.createElement(TableCellHead, null))), /*#__PURE__*/React.createElement(TableBody, null, hasCommands ? data === null || data === void 0 ? void 0 : (_data$smsCommands4 = data.smsCommands) === null || _data$smsCommands4 === void 0 ? void 0 : (_data$smsCommands4$sm = _data$smsCommands4.smsCommands) === null || _data$smsCommands4$sm === void 0 ? void 0 : _data$smsCommands4$sm.map(({\n    id,\n    displayName,\n    parserType\n  }) => /*#__PURE__*/React.createElement(TableRow, {\n    key: id\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    className: styles.checkbox\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    checked: !!checkedSmsCommands.find(({\n      id: checkedId\n    }) => id === checkedId),\n    onChange: () => toggleSmsCommand({\n      id,\n      displayName\n    })\n  })), /*#__PURE__*/React.createElement(TableCell, null, displayName), /*#__PURE__*/React.createElement(TableCell, null, getLabelByParserTypes(parserType)), /*#__PURE__*/React.createElement(TableCell, {\n    className: styles.editButtonCell\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => history.push(`sms-command/${id}`)\n  }, i18n.t('Edit'))))) : /*#__PURE__*/React.createElement(TableRow, null, /*#__PURE__*/React.createElement(TableCell, {\n    colSpan: \"4\",\n    className: styles.noResults\n  }, i18n.t('No commands to display')))))));\n};","import { InputFieldFF, ReactFinalForm, composeValidators, hasValue, string } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales/index.js';\nimport { dataTest } from '../../shared/index.js';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FieldGatewayName = () => /*#__PURE__*/React.createElement(Field, {\n  required: true,\n  dataTest: dataTest('smsgateway-fieldgatewayname'),\n  name: \"name\",\n  label: i18n.t('Name'),\n  component: InputFieldFF,\n  validate: composeValidators(string, hasValue)\n});","import { InputFieldFF, ReactFinalForm, composeValidators, hasValue, string } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales/index.js';\nimport { dataTest } from '../../shared/index.js';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FIELD_PASSWORD_NAME = 'password';\nexport const FIELD_PASSWORD_LABEL = i18n.t('Password');\nexport const FieldPassword = () => /*#__PURE__*/React.createElement(Field, {\n  required: true,\n  type: \"password\",\n  dataTest: dataTest('smsgateway-fieldpassword'),\n  name: FIELD_PASSWORD_NAME,\n  label: FIELD_PASSWORD_LABEL,\n  component: InputFieldFF,\n  validate: composeValidators(string, hasValue)\n});","import { InputFieldFF, ReactFinalForm, composeValidators, createEqualTo, hasValue, string } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales/index.js';\nimport { dataTest } from '../../shared/index.js';\nimport { FIELD_PASSWORD_LABEL, FIELD_PASSWORD_NAME } from '../FieldPassword/index.js';\nconst {\n  Field\n} = ReactFinalForm;\nconst equalToPassword = createEqualTo(FIELD_PASSWORD_NAME, FIELD_PASSWORD_LABEL);\nexport const FIELD_PASSWORD_CONFIRMATION_NAME = 'password-confirmation';\nexport const FieldPasswordConfirmation = () => /*#__PURE__*/React.createElement(Field, {\n  required: true,\n  type: \"password\",\n  dataTest: dataTest('smsgateway-fieldpasswordconfirmation'),\n  name: FIELD_PASSWORD_CONFIRMATION_NAME,\n  label: i18n.t('Confirm password'),\n  component: InputFieldFF,\n  validate: composeValidators(string, hasValue, equalToPassword)\n});","import { InputFieldFF, ReactFinalForm, composeValidators, hasValue, string } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales/index.js';\nimport { dataTest } from '../../shared/index.js';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FieldUsername = () => /*#__PURE__*/React.createElement(Field, {\n  required: true,\n  dataTest: dataTest('smsgateway-fieldusername'),\n  name: \"username\",\n  label: i18n.t('User name'),\n  component: InputFieldFF,\n  validate: composeValidators(string, hasValue)\n});","import { PropTypes } from '@dhis2/prop-types';\nimport { Button, ButtonStrip, ReactFinalForm, CircularLoader } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales/index.js';\nimport { FormRow, dataTest } from '../../shared/index.js';\nimport { FieldGatewayName } from '../FieldGatewayName/index.js';\nimport { FieldPassword } from '../FieldPassword/index.js';\nimport { FieldPasswordConfirmation } from '../FieldPasswordConfirmation/index.js';\nimport { FieldUsername } from '../FieldUsername/index.js';\nconst {\n  Form\n} = ReactFinalForm;\nexport const FormBulkSMS = ({\n  onCancelClick,\n  onSubmit,\n  initialValues\n}) => {\n  const submitText = initialValues ? i18n.t('Save gateway') : i18n.t('Add gateway');\n  return /*#__PURE__*/React.createElement(Form, {\n    keepDirtyOnReinitialize: true,\n    onSubmit: onSubmit,\n    initialValues: initialValues\n  }, ({\n    handleSubmit,\n    submitting,\n    pristine\n  }) => /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    \"data-test\": dataTest('smsgateway-formbulksms')\n  }, /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldGatewayName, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldUsername, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldPassword, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldPasswordConfirmation, null)), /*#__PURE__*/React.createElement(ButtonStrip, null, /*#__PURE__*/React.createElement(Button, {\n    primary: true,\n    type: \"submit\",\n    icon: submitting ? /*#__PURE__*/React.createElement(CircularLoader, {\n      small: true\n    }) : null,\n    disabled: submitting,\n    dataTest: dataTest('forms-gatewaybulksmsform-submit')\n  }, submitText), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => onCancelClick(pristine)\n  }, i18n.t('Cancel')))));\n};\nFormBulkSMS.defaultProps = {\n  initialValues: {}\n};\nFormBulkSMS.propTypes = {\n  onCancelClick: PropTypes.func.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n  initialValues: PropTypes.object\n};","import { InputFieldFF, ReactFinalForm, composeValidators, hasValue, string } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales/index.js';\nimport { dataTest } from '../../shared/index.js';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FieldAuthToken = () => /*#__PURE__*/React.createElement(Field, {\n  required: true,\n  dataTest: dataTest('smsgateway-fieldauthtoken'),\n  name: \"authToken\",\n  label: i18n.t('Auth token'),\n  component: InputFieldFF,\n  validate: composeValidators(string, hasValue)\n});","import { InputFieldFF, ReactFinalForm, composeValidators, hasValue, url } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales/index.js';\nimport { dataTest } from '../../shared/index.js';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FieldUrlTemplate = () => /*#__PURE__*/React.createElement(Field, {\n  required: true,\n  dataTest: dataTest('smsgateway-fieldurltemplate'),\n  name: \"urlTemplate\",\n  label: i18n.t('Url template'),\n  component: InputFieldFF,\n  validate: composeValidators(url, hasValue)\n});","import { PropTypes } from '@dhis2/prop-types';\nimport { Button, ButtonStrip, ReactFinalForm, CircularLoader } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales/index.js';\nimport { FormRow, dataTest } from '../../shared/index.js';\nimport { FieldAuthToken } from '../FieldAuthToken/index.js';\nimport { FieldGatewayName } from '../FieldGatewayName/index.js';\nimport { FieldUrlTemplate } from '../FieldUrlTemplate/index.js';\nimport { FieldUsername } from '../FieldUsername/index.js';\nconst {\n  Form\n} = ReactFinalForm;\nexport const FormClickatell = ({\n  onCancelClick,\n  onSubmit,\n  initialValues\n}) => {\n  const submitText = initialValues ? i18n.t('Save gateway') : i18n.t('Add gateway');\n  return /*#__PURE__*/React.createElement(Form, {\n    keepDirtyOnReinitialize: true,\n    onSubmit: onSubmit,\n    initialValues: initialValues\n  }, ({\n    handleSubmit,\n    submitting,\n    pristine\n  }) => /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    \"data-test\": dataTest('smsgateway-formclickatell')\n  }, /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldGatewayName, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldUsername, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldAuthToken, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldUrlTemplate, null)), /*#__PURE__*/React.createElement(ButtonStrip, null, /*#__PURE__*/React.createElement(Button, {\n    primary: true,\n    type: \"submit\",\n    icon: submitting ? /*#__PURE__*/React.createElement(CircularLoader, {\n      small: true\n    }) : null,\n    disabled: submitting,\n    dataTest: dataTest('forms-gatewayclickatellform-submit')\n  }, submitText), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => onCancelClick(pristine)\n  }, i18n.t('Cancel')))));\n};\nFormClickatell.defaultProps = {\n  initialValues: {}\n};\nFormClickatell.propTypes = {\n  onCancelClick: PropTypes.func.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n  initialValues: PropTypes.object\n};","import { Button, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales/index.js';\nimport { dataTest } from '../../shared/index.js';\nimport styles from './ActionAddKeyValuePair.module.css';\nconst {\n  useForm\n} = ReactFinalForm;\nexport const ActionAddKeyValuePair = () => {\n  const {\n    change,\n    getState\n  } = useForm();\n\n  const addKeyValueToFormState = () => {\n    const {\n      parameters\n    } = getState().values;\n    change('parameters', [...parameters, {\n      header: false,\n      encode: false,\n      key: '',\n      value: '',\n      confidential: false\n    }]);\n  };\n\n  return /*#__PURE__*/React.createElement(Button, {\n    className: styles.button,\n    onClick: addKeyValueToFormState,\n    dataTest: dataTest('smsgateway-actionaddkeyvaluepair')\n  }, i18n.t('Add key value pair'));\n};","import { InputFieldFF, ReactFinalForm, composeValidators, hasValue, string } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales/index.js';\nimport { dataTest } from '../../shared/index.js';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FieldConfigurationTemplate = () => /*#__PURE__*/React.createElement(Field, {\n  required: true,\n  dataTest: dataTest('smsgateway-fieldconfigurationtemplate'),\n  name: \"configurationTemplate\",\n  label: i18n.t('Configuration template'),\n  component: InputFieldFF,\n  validate: composeValidators(string, hasValue),\n  helpText: i18n.t('Please refer to the documentation for possible values')\n});","import { SingleSelectFieldFF, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales/index.js';\nimport { dataTest } from '../../shared/index.js';\nconst {\n  Field\n} = ReactFinalForm;\nconst optionApplicationJson = {\n  label: i18n.t('Application/json'),\n  value: 'APPLICATION_JSON'\n};\nconst optionApplicationXml = {\n  label: i18n.t('Application/xml'),\n  value: 'APPLICATION_XML'\n};\nconst optionFormUrlEncoded = {\n  label: i18n.t('Form url encoded'),\n  value: 'FORM_URL_ENCODED'\n};\nconst optionTextPlain = {\n  label: i18n.t('Plain text'),\n  value: 'TEXT_PLAIN'\n};\nconst options = [optionApplicationJson, optionApplicationXml, optionFormUrlEncoded, optionTextPlain];\nexport const FieldContentType = () => /*#__PURE__*/React.createElement(Field, {\n  dataTest: dataTest('smsgateway-fieldcontenttype'),\n  name: \"contentType\",\n  label: i18n.t('Content type'),\n  component: SingleSelectFieldFF,\n  options: options,\n  initialValue: optionApplicationJson.value\n});","import { PropTypes } from '@dhis2/prop-types';\nimport { InputFieldFF, ReactFinalForm, composeValidators, string, hasValue } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales/index.js';\nimport { dataTest } from '../../shared/index.js';\nconst {\n  Field,\n  useFormState\n} = ReactFinalForm;\nconst isStringWithLengthAtLeastOne = composeValidators(string, hasValue);\nexport const createFieldGatewayKeyValuePairValueName = index => `parameters[${index}].value`;\nexport const ValueField = ({\n  index\n}) => {\n  const {\n    confidential\n  } = useFormState().values.parameters[index];\n  return /*#__PURE__*/React.createElement(Field, {\n    type: confidential ? 'password' : 'text',\n    dataTest: dataTest('smsgateway-fieldkeyvaluepair-value'),\n    name: createFieldGatewayKeyValuePairValueName(index),\n    label: i18n.t('Value'),\n    component: InputFieldFF,\n    validate: isStringWithLengthAtLeastOne\n  });\n};\nValueField.propTypes = {\n  index: PropTypes.number.isRequired\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { Button, CheckboxFieldFF, InputFieldFF, ReactFinalForm, composeValidators, hasValue, string } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales/index.js';\nimport { dataTest } from '../../shared/index.js';\nimport styles from './FieldKeyValuePair.module.css';\nimport { ValueField } from './ValueField.js';\nconst {\n  Field,\n  useForm\n} = ReactFinalForm;\nconst isStringWithLengthAtLeastOne = composeValidators(string, hasValue);\nexport const FieldKeyValuePair = ({\n  index\n}) => {\n  const {\n    change,\n    getState\n  } = useForm();\n\n  const removeKeyValueFromFormState = index => {\n    const {\n      parameters\n    } = getState().values;\n\n    if (index === 0) {\n      change('parameters', parameters.slice(1));\n    } else {\n      change('parameters', [...parameters.slice(0, index), ...parameters.slice(index + 1)]);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    \"data-test\": dataTest('smsgateway-fieldkeyvaluepair')\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.textInputs\n  }, /*#__PURE__*/React.createElement(Field, {\n    dataTest: dataTest('smsgateway-fieldkeyvaluepair-key'),\n    className: styles.keyInput,\n    name: `parameters[${index}].key`,\n    label: i18n.t('Key'),\n    component: InputFieldFF,\n    validate: isStringWithLengthAtLeastOne\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.valueInput\n  }, /*#__PURE__*/React.createElement(ValueField, {\n    index: index\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.checkboxGroup\n  }, /*#__PURE__*/React.createElement(Field, {\n    dataTest: dataTest('smsgateway-fieldkeyvaluepair-isheader'),\n    className: styles.checkbox,\n    type: \"checkbox\",\n    name: `parameters[${index}].header`,\n    label: i18n.t('Send as header'),\n    component: CheckboxFieldFF\n  }), /*#__PURE__*/React.createElement(Field, {\n    dataTest: dataTest('smsgateway-fieldkeyvaluepair-isencoded'),\n    className: styles.checkbox,\n    type: \"checkbox\",\n    name: `parameters[${index}].encode`,\n    label: i18n.t('Encode'),\n    component: CheckboxFieldFF\n  }), /*#__PURE__*/React.createElement(Field, {\n    dataTest: dataTest('smsgateway-fieldkeyvaluepair-isconfidential'),\n    className: styles.checkbox,\n    type: \"checkbox\",\n    name: `parameters[${index}].confidential`,\n    label: i18n.t('Confidential'),\n    component: CheckboxFieldFF\n  })), /*#__PURE__*/React.createElement(Button, {\n    small: true,\n    secondary: true,\n    dataTest: dataTest('smsgateway-fieldkeyvaluepair-remove'),\n    onClick: () => removeKeyValueFromFormState(index)\n  }, i18n.t('Remove key value pair')));\n};\nFieldKeyValuePair.propTypes = {\n  index: PropTypes.number.isRequired\n};","import { CheckboxFieldFF, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales/index.js';\nimport { dataTest } from '../../shared/index.js';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FieldSendUrlParameters = () => /*#__PURE__*/React.createElement(Field, {\n  type: \"checkbox\",\n  dataTest: dataTest('smsgateway-fieldsendurlparameters'),\n  name: \"sendUrlParameters\",\n  label: i18n.t('Send url parameters'),\n  component: CheckboxFieldFF\n});","import { CheckboxFieldFF, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales/index.js';\nimport { dataTest } from '../../shared/index.js';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FieldUseGet = () => /*#__PURE__*/React.createElement(Field, {\n  type: \"checkbox\",\n  dataTest: dataTest('smsgateway-fielduseget'),\n  name: \"useGet\",\n  label: i18n.t('Use GET'),\n  component: CheckboxFieldFF,\n  helpText: i18n.t('Use GET instead of POST to send data to gateway')\n});","import { PropTypes } from '@dhis2/prop-types';\nimport { Button, ButtonStrip, ReactFinalForm, CircularLoader } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales/index.js';\nimport { FormRow, PageSubHeadline, dataTest } from '../../shared/index.js';\nimport { ActionAddKeyValuePair } from '../ActionAddKeyValuePair/index.js';\nimport { FieldConfigurationTemplate } from '../FieldConfigurationTemplate/index.js';\nimport { FieldContentType } from '../FieldContentType/index.js';\nimport { FieldGatewayName } from '../FieldGatewayName/index.js';\nimport { FieldKeyValuePair } from '../FieldKeyValuePair/index.js';\nimport { FieldSendUrlParameters } from '../FieldSendUrlParameters/index.js';\nimport { FieldUrlTemplate } from '../FieldUrlTemplate/index.js';\nimport { FieldUseGet } from '../FieldUseGet/index.js';\nconst {\n  Form\n} = ReactFinalForm;\nexport const FormGeneric = ({\n  onCancelClick,\n  onSubmit,\n  initialValues\n}) => {\n  const submitText = initialValues ? i18n.t('Save gateway') : i18n.t('Add gateway');\n  return /*#__PURE__*/React.createElement(Form, {\n    keepDirtyOnReinitialize: true,\n    onSubmit: onSubmit,\n    initialValues: initialValues\n  }, ({\n    handleSubmit,\n    values,\n    submitting,\n    pristine\n  }) => /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    \"data-test\": dataTest('smsgateway-formgeneric')\n  }, /*#__PURE__*/React.createElement(PageSubHeadline, null, i18n.t('Gateway setup')), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldGatewayName, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldUrlTemplate, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldConfigurationTemplate, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldContentType, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldUseGet, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldSendUrlParameters, null)), /*#__PURE__*/React.createElement(PageSubHeadline, null, i18n.t('Key value pairs')), values.parameters.map((_, index) => /*#__PURE__*/React.createElement(FieldKeyValuePair, {\n    index: index,\n    key: index\n  })), /*#__PURE__*/React.createElement(ActionAddKeyValuePair, null), /*#__PURE__*/React.createElement(ButtonStrip, null, /*#__PURE__*/React.createElement(Button, {\n    primary: true,\n    type: \"submit\",\n    dataTest: dataTest('forms-gatewaygenericform-submit'),\n    disabled: submitting,\n    icon: submitting ? /*#__PURE__*/React.createElement(CircularLoader, {\n      small: true\n    }) : null\n  }, submitText), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => onCancelClick(pristine)\n  }, i18n.t('Cancel')))));\n};\nFormGeneric.defaultProps = {\n  initialValues: {\n    parameters: []\n  }\n};\nFormGeneric.propTypes = {\n  onCancelClick: PropTypes.func.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n  initialValues: PropTypes.object\n};","import { SingleSelectFieldFF, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales/index.js';\nimport { dataTest } from '../../shared/index.js';\nconst {\n  Field\n} = ReactFinalForm;\nconst options = [{\n  label: 'BIND_TX',\n  value: 'BIND_TX'\n}, {\n  label: 'BIND_RX',\n  value: 'BIND_RX'\n}, {\n  label: 'BIND_TRX',\n  value: 'BIND_TRX'\n}];\nexport const FieldBindType = () => /*#__PURE__*/React.createElement(Field, {\n  required: true,\n  dataTest: dataTest('smsgateway-fieldbindtype'),\n  name: \"bindType\",\n  label: i18n.t('Bind type'),\n  component: SingleSelectFieldFF,\n  options: options,\n  defaultValue: options[0]\n});","import { CheckboxFieldFF, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales/index.js';\nimport { dataTest } from '../../shared/index.js';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FieldCompressed = () => /*#__PURE__*/React.createElement(Field, {\n  dataTest: dataTest('smsgateway-fieldcompressed'),\n  name: \"compressed\",\n  type: \"checkbox\",\n  label: i18n.t('Compressed'),\n  component: CheckboxFieldFF,\n  defaultValue: false\n});","import { InputFieldFF, ReactFinalForm, composeValidators, hasValue, string } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales/index.js';\nimport { dataTest } from '../../shared/index.js';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FieldHost = () => /*#__PURE__*/React.createElement(Field, {\n  required: true,\n  dataTest: dataTest('smsgateway-fieldhost'),\n  name: \"host\",\n  label: i18n.t('Host'),\n  component: InputFieldFF,\n  validate: composeValidators(string, hasValue)\n});","import { SingleSelectFieldFF, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales/index.js';\nimport { dataTest } from '../../shared/index.js';\nconst {\n  Field\n} = ReactFinalForm;\nconst options = [{\n  label: 'UNKNOWN',\n  value: 'UNKNOWN'\n}, {\n  label: 'ISDN',\n  value: 'ISDN'\n}, {\n  label: 'DATA',\n  value: 'DATA'\n}, {\n  label: 'TELEX',\n  value: 'TELEX'\n}, {\n  label: 'LAND_MOBILE',\n  value: 'LAND_MOBILE'\n}, {\n  label: 'NATIONAL',\n  value: 'NATIONAL'\n}, {\n  label: 'PRIVATE',\n  value: 'PRIVATE'\n}, {\n  label: 'ERMES',\n  value: 'ERMES'\n}, {\n  label: 'INTERNET',\n  value: 'INTERNET'\n}, {\n  label: 'WAP',\n  value: 'WAP'\n}];\nexport const FieldNumberPlanIndicator = () => /*#__PURE__*/React.createElement(Field, {\n  required: true,\n  dataTest: dataTest('smsgateway-fieldnumberplanindicator'),\n  name: \"numberPlanIndicator\",\n  label: i18n.t('Number plan indicator'),\n  component: SingleSelectFieldFF,\n  options: options,\n  defaultValue: options[0]\n});","import { InputFieldFF, ReactFinalForm, composeValidators, hasValue, integer } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales/index.js';\nimport { dataTest } from '../../shared/index.js';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FieldPort = () => /*#__PURE__*/React.createElement(Field, {\n  required: true,\n  dataTest: dataTest('smsgateway-fieldport'),\n  name: \"port\",\n  label: i18n.t('Port'),\n  component: InputFieldFF,\n  validate: composeValidators(integer, hasValue)\n});","import { InputFieldFF, ReactFinalForm, composeValidators, hasValue, string } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales/index.js';\nimport { dataTest } from '../../shared/index.js';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FieldSystemId = () => /*#__PURE__*/React.createElement(Field, {\n  required: true,\n  dataTest: dataTest('smsgateway-fieldsystemid'),\n  name: \"systemId\",\n  label: i18n.t('System id'),\n  component: InputFieldFF,\n  validate: composeValidators(string, hasValue)\n});","import { InputFieldFF, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales/index.js';\nimport { dataTest } from '../../shared/index.js';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FieldSystemType = () => /*#__PURE__*/React.createElement(Field, {\n  dataTest: dataTest('smsgateway-fieldsystemtype'),\n  name: \"systemType\",\n  label: i18n.t('System type'),\n  component: InputFieldFF,\n  defaultValue: \"\"\n});","import { SingleSelectFieldFF, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales/index.js';\nimport { dataTest } from '../../shared/index.js';\nconst {\n  Field\n} = ReactFinalForm;\nconst options = [{\n  label: 'UNKNOWN',\n  value: 'UNKNOWN'\n}, {\n  label: 'INTERNATIONAL',\n  value: 'INTERNATIONAL'\n}, {\n  label: 'NATIONAL',\n  value: 'NATIONAL'\n}, {\n  label: 'NETWORK_SPECIFIC',\n  value: 'NETWORK_SPECIFIC'\n}, {\n  label: 'SUBSCRIBER_NUMBER',\n  value: 'SUBSCRIBER_NUMBER'\n}, {\n  label: 'ALPHANUMERIC',\n  value: 'ALPHANUMERIC'\n}, {\n  label: 'ABBREVIATED',\n  value: 'ABBREVIATED'\n}];\nexport const FieldTypeOfNumber = () => /*#__PURE__*/React.createElement(Field, {\n  required: true,\n  dataTest: dataTest('smsgateway-fieldtypeofnumber'),\n  name: \"typeOfNumber\",\n  label: i18n.t('Type of number'),\n  component: SingleSelectFieldFF,\n  options: options,\n  defaultValue: options[0]\n});","import { PropTypes } from '@dhis2/prop-types';\nimport { Button, ButtonStrip, ReactFinalForm, CircularLoader } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales/index.js';\nimport { FormRow, dataTest } from '../../shared/index.js';\nimport { FieldBindType } from '../FieldBindType/index.js';\nimport { FieldCompressed } from '../FieldCompressed/index.js';\nimport { FieldGatewayName } from '../FieldGatewayName/index.js';\nimport { FieldHost } from '../FieldHost/index.js';\nimport { FieldNumberPlanIndicator } from '../FieldNumberPlanIndicator/index.js';\nimport { FieldPassword } from '../FieldPassword/index.js';\nimport { FieldPort } from '../FieldPort/index.js';\nimport { FieldSystemId } from '../FieldSystemId/index.js';\nimport { FieldSystemType } from '../FieldSystemType/index.js';\nimport { FieldTypeOfNumber } from '../FieldTypeOfNumber/index.js';\nconst {\n  Form\n} = ReactFinalForm;\nexport const FormSMPP = ({\n  onCancelClick,\n  onSubmit,\n  initialValues\n}) => {\n  const submitText = initialValues ? i18n.t('Save gateway') : i18n.t('Add gateway');\n  return /*#__PURE__*/React.createElement(Form, {\n    keepDirtyOnReinitialize: true,\n    onSubmit: onSubmit,\n    initialValues: initialValues\n  }, ({\n    handleSubmit,\n    submitting,\n    pristine\n  }) => /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    \"data-test\": dataTest('smsgateway-formsmpp')\n  }, /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldGatewayName, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldSystemId, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldHost, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldSystemType, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldNumberPlanIndicator, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldTypeOfNumber, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldBindType, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldPort, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldPassword, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldCompressed, null)), /*#__PURE__*/React.createElement(ButtonStrip, null, /*#__PURE__*/React.createElement(Button, {\n    primary: true,\n    type: \"submit\",\n    icon: submitting ? /*#__PURE__*/React.createElement(CircularLoader, {\n      small: true\n    }) : null,\n    disabled: submitting,\n    dataTest: dataTest('forms-gatewaysmppform-submit')\n  }, submitText), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => onCancelClick(pristine)\n  }, i18n.t('Cancel')))));\n};\nFormSMPP.defaultProps = {\n  initialValues: {}\n};\nFormSMPP.propTypes = {\n  onCancelClick: PropTypes.func.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n  initialValues: PropTypes.object\n};","const GENERIC_FORM = 'http';\nconst BULK_SMS_FORM = 'bulksms';\nconst CLICKATELL_FORM = 'clickatell';\nconst SMPP_FORM = 'smpp';\nexport const gatewayTypes = {\n  GENERIC_FORM,\n  BULK_SMS_FORM,\n  CLICKATELL_FORM,\n  SMPP_FORM\n};","import { SingleSelectField, SingleSelectOption } from '@dhis2/ui';\nimport { PropTypes } from 'prop-types';\nimport React from 'react';\nimport i18n from '../../locales/index.js';\nimport { dataTest } from '../../shared/index.js';\nimport { gatewayTypes } from './gatewayTypes.js';\nconst {\n  GENERIC_FORM,\n  BULK_SMS_FORM,\n  CLICKATELL_FORM,\n  SMPP_FORM\n} = gatewayTypes;\nexport const InputSingleSelectGatewayType = ({\n  onChange,\n  selected\n}) => /*#__PURE__*/React.createElement(SingleSelectField, {\n  label: i18n.t('Type'),\n  onChange: onChange,\n  selected: selected,\n  dataTest: dataTest('smsgateway-viewsmsgatewayadd-gatewaytype')\n}, /*#__PURE__*/React.createElement(SingleSelectOption, {\n  value: GENERIC_FORM,\n  label: i18n.t('Generic')\n}), /*#__PURE__*/React.createElement(SingleSelectOption, {\n  value: BULK_SMS_FORM,\n  label: i18n.t('BulkSMS')\n}), /*#__PURE__*/React.createElement(SingleSelectOption, {\n  value: CLICKATELL_FORM,\n  label: i18n.t('Clickatell')\n}), /*#__PURE__*/React.createElement(SingleSelectOption, {\n  value: SMPP_FORM,\n  label: i18n.t('SMPP')\n}));\nInputSingleSelectGatewayType.propTypes = {\n  selected: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired\n};","import { useDataMutation } from '@dhis2/app-runtime';\nexport const CREATE_BULK_SMS_GATEWAY_MUTATION = {\n  resource: 'gateways',\n  type: 'create',\n  data: ({\n    name,\n    username,\n    password\n  }) => ({\n    type: 'bulksms',\n    name,\n    username,\n    password\n  })\n};\nexport const useCreateBulkSMSGatewayMutation = () => useDataMutation(CREATE_BULK_SMS_GATEWAY_MUTATION);","import { useDataMutation } from '@dhis2/app-runtime';\nexport const CREATE_CLICKATELL_GATEWAY_MUTATION = {\n  resource: 'gateways',\n  type: 'create',\n  data: ({\n    name,\n    username,\n    authToken,\n    urlTemplate\n  }) => ({\n    type: 'clickatell',\n    name,\n    username,\n    authToken,\n    urlTemplate\n  })\n};\nexport const useCreateClickatellGatewayMutation = () => useDataMutation(CREATE_CLICKATELL_GATEWAY_MUTATION);","/**\n * This the shape of the additional fields\n * that can be added to a generic config\n *\n * @typedef {Object} Parameter\n * @prop {string} key\n * @prop {string} value\n * @prop {bool} header\n * @prop {bool} encode\n * @prop {bool} confidential\n */\n\n/**\n * @param {Object} args\n * @param {string} args.configurationTemplate\n * @param {string} args.contentType\n * @param {string} args.name\n * @param {string} args.urlTemplate\n * @param {bool} args.sendUrlParameters\n * @param {bool} args.useGet\n * @param {Parameter[]} args.parameters\n *\n * @returns {Object}\n */\nexport const createGenericGateWayDataFromVariables = ({\n  configurationTemplate,\n  contentType,\n  name,\n  parameters,\n  sendUrlParameters,\n  urlTemplate,\n  useGet\n}) => ({\n  type: 'http',\n  configurationTemplate,\n  contentType,\n  name,\n  parameters,\n  sendUrlParameters,\n  urlTemplate,\n  useGet\n});","import { useDataMutation } from '@dhis2/app-runtime';\nimport { createGenericGateWayDataFromVariables } from '../createGenericGateWayDataFromVariables/index.js';\nexport const CREATE_GENERIC_GATEWAY_MUTATION = {\n  resource: 'gateways',\n  type: 'create',\n  data: createGenericGateWayDataFromVariables\n};\nexport const useCreateGenericGatewayMutation = () => useDataMutation(CREATE_GENERIC_GATEWAY_MUTATION);","import { useDataMutation } from '@dhis2/app-runtime';\nexport const CREATE_SMPP_GATEWAY_MUTATION = {\n  resource: 'gateways',\n  type: 'create',\n  data: ({\n    name,\n    systemId,\n    host,\n    systemType,\n    numberPlanIndicator,\n    typeOfNumber,\n    bindType,\n    port,\n    password,\n    compressed\n  }) => ({\n    type: 'smpp',\n    name,\n    systemId,\n    host,\n    systemType,\n    numberPlanIndicator,\n    typeOfNumber,\n    bindType,\n    port,\n    password,\n    compressed\n  })\n};\nexport const useCreateSMPPGatewayMutation = () => useDataMutation(CREATE_SMPP_GATEWAY_MUTATION);","import { SingleSelectField, SingleSelectOption, NoticeBox } from '@dhis2/ui';\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport i18n from '../../locales/index.js';\nimport { FormRow, PageHeadline, TemplateSidebarNavContent, dataTest } from '../../shared/index.js';\nimport { FormBulkSMS } from '../FormBulkSMS/index.js';\nimport { FormClickatell } from '../FormClickatell/index.js';\nimport { FormGeneric } from '../FormGeneric/index.js';\nimport { FormSMPP } from '../FormSMPP/index.js';\nimport { gatewayTypes } from '../InputSingleSelectGatewayType/index.js';\nimport { useCreateBulkSMSGatewayMutation } from './useCreateBulkSMSGatewayMutation.js';\nimport { useCreateClickatellGatewayMutation } from './useCreateClickatellGatewayMutation.js';\nimport { useCreateGenericGatewayMutation } from './useCreateGenericGatewayMutation.js';\nimport { useCreateSMPPGatewayMutation } from './useCreateSMPPGatewayMutation.js';\nimport styles from './ViewSmsGatewayAdd.module.css';\nconst {\n  GENERIC_FORM,\n  BULK_SMS_FORM,\n  CLICKATELL_FORM,\n  SMPP_FORM\n} = gatewayTypes;\nexport const GATEWAY_CONFIG_FORM_NEW_PATH = '/sms-gateway/new';\nexport const ViewSmsGatewayAdd = () => {\n  const history = useHistory();\n  const [visibleForm, setVisibleForm] = useState(GENERIC_FORM);\n  const [saveGenericGateway, {\n    error: saveGenericGatewayError\n  }] = useCreateGenericGatewayMutation();\n  const [saveBulkSMSGateway, {\n    error: saveBulkSMSGatewayError\n  }] = useCreateBulkSMSGatewayMutation();\n  const [saveClickatellGateway, {\n    error: saveClickatellGatewayError\n  }] = useCreateClickatellGatewayMutation();\n  const [saveSMPPGateway, {\n    error: saveSMPPGatewayError\n  }] = useCreateSMPPGatewayMutation();\n  const error = saveGenericGatewayError || saveBulkSMSGatewayError || saveClickatellGatewayError || saveSMPPGatewayError;\n\n  if (error) {\n    const msg = i18n.t('Something went wrong whilst saving the gateway');\n    return /*#__PURE__*/React.createElement(TemplateSidebarNavContent, null, /*#__PURE__*/React.createElement(\"div\", {\n      \"data-test\": dataTest('smsgateway-viewsmsgatewayadd')\n    }, /*#__PURE__*/React.createElement(PageHeadline, null, i18n.t('Add gateway')), /*#__PURE__*/React.createElement(NoticeBox, {\n      error: true,\n      title: msg\n    }, error.message)));\n  }\n\n  const onSubmit = async values => {\n    try {\n      if (visibleForm === GENERIC_FORM) {\n        await saveGenericGateway(values);\n      }\n\n      if (visibleForm === BULK_SMS_FORM) {\n        await saveBulkSMSGateway(values);\n      }\n\n      if (visibleForm === CLICKATELL_FORM) {\n        await saveClickatellGateway(values);\n      }\n\n      if (visibleForm === SMPP_FORM) {\n        await saveSMPPGateway(values);\n      }\n\n      history.push('/sms-gateway');\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n\n  const onCancelClick = () => history.push('/sms-gateway');\n\n  return /*#__PURE__*/React.createElement(TemplateSidebarNavContent, null, /*#__PURE__*/React.createElement(\"div\", {\n    \"data-test\": dataTest('smsgateway-viewsmsgatewayadd'),\n    className: styles.container\n  }, /*#__PURE__*/React.createElement(PageHeadline, null, i18n.t('Add gateway')), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(SingleSelectField, {\n    label: i18n.t('Type'),\n    onChange: ({\n      selected\n    }) => setVisibleForm(selected),\n    selected: visibleForm,\n    dataTest: dataTest('smsgateway-viewsmsgatewayadd-gatewaytype')\n  }, /*#__PURE__*/React.createElement(SingleSelectOption, {\n    value: GENERIC_FORM,\n    label: i18n.t('Generic')\n  }), /*#__PURE__*/React.createElement(SingleSelectOption, {\n    value: BULK_SMS_FORM,\n    label: i18n.t('BulkSMS')\n  }), /*#__PURE__*/React.createElement(SingleSelectOption, {\n    value: CLICKATELL_FORM,\n    label: i18n.t('Clickatell')\n  }), /*#__PURE__*/React.createElement(SingleSelectOption, {\n    value: SMPP_FORM,\n    label: i18n.t('SMPP')\n  }))), /*#__PURE__*/React.createElement(FormRow, null, visibleForm === GENERIC_FORM && /*#__PURE__*/React.createElement(FormGeneric, {\n    onSubmit: onSubmit,\n    onCancelClick: onCancelClick\n  }), visibleForm === BULK_SMS_FORM && /*#__PURE__*/React.createElement(FormBulkSMS, {\n    onSubmit: onSubmit,\n    passwordRequired: true,\n    onCancelClick: onCancelClick\n  }), visibleForm === CLICKATELL_FORM && /*#__PURE__*/React.createElement(FormClickatell, {\n    onSubmit: onSubmit,\n    passwordRequired: true,\n    onCancelClick: onCancelClick\n  }), visibleForm === SMPP_FORM && /*#__PURE__*/React.createElement(FormSMPP, {\n    onSubmit: onSubmit,\n    passwordRequired: true,\n    onCancelClick: onCancelClick\n  }))));\n};","import { useDataQuery } from '@dhis2/app-runtime';\n/**\n * @TODO:\n *   * The \"fields\" param does not work\n *     -> https://jira.dhis2.org/browse/DHIS2-9241\n *   * id field is not present, only uid\n *     -> https://jira.dhis2.org/browse/DHIS2-9249\n *   * Api does not return password of BulkSMS gateway configs\n *     -> https://jira.dhis2.org/browse/DHIS2-9248\n */\n\nexport const GATEWAY_QUERY = {\n  gateway: {\n    resource: 'gateways',\n    id: ({\n      id\n    }) => id\n  }\n};\nexport const useReadGatewayQuery = id => useDataQuery(GATEWAY_QUERY, {\n  variables: {\n    id\n  }\n});","import { useDataEngine } from '@dhis2/app-runtime';\nimport { useState } from 'react';\n/**\n * @TODO\n *   * Create jira issue: Make `useDataMutation` accept function for \"id\"\n */\n\n/**\n * @param {Object} query\n * @returns {Object}\n */\n\nexport const useUpdateGatewayMutation = query => {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const engine = useDataEngine();\n\n  const doFetch = variables => {\n    const updatedQuery = { ...query,\n      id: variables.id\n    };\n    setLoading(true);\n    setError(null);\n    return engine.mutate(updatedQuery, {\n      variables\n    }).then(data => {\n      setLoading(false);\n      return data;\n    }).catch(error => {\n      setLoading(false);\n      setError(error);\n      throw error;\n    });\n  };\n\n  return [doFetch, {\n    loading,\n    error\n  }];\n};","import { useUpdateGatewayMutation } from './useUpdateGatewayMutation.js';\nexport const UPDATE_BULK_SMS_GATEWAY_MUTATION = {\n  resource: 'gateways',\n  id: ({\n    id\n  }) => id,\n  type: 'update',\n  data: ({\n    name,\n    username,\n    password\n  }) => ({\n    type: 'bulksms',\n    name,\n    username,\n    password\n  })\n};\nexport const useUpdateBulkSMSGatewayMutation = () => useUpdateGatewayMutation(UPDATE_BULK_SMS_GATEWAY_MUTATION);","import { useUpdateGatewayMutation } from './useUpdateGatewayMutation.js';\nexport const UPDATE_CLICKATELL_GATEWAY_MUTATION = {\n  resource: 'gateways',\n  id: ({\n    id\n  }) => id,\n  type: 'update',\n  data: ({\n    name,\n    username,\n    authToken,\n    urlTemplate\n  }) => ({\n    type: 'clickatell',\n    name,\n    username,\n    authToken,\n    urlTemplate\n  })\n};\nexport const useUpdateClickatellGatewayMutation = () => useUpdateGatewayMutation(UPDATE_CLICKATELL_GATEWAY_MUTATION);","import { createGenericGateWayDataFromVariables } from '../createGenericGateWayDataFromVariables/index.js';\nimport { useUpdateGatewayMutation } from './useUpdateGatewayMutation.js';\nexport const UPDATE_GENERIC_GATEWAY_MUTATION = {\n  resource: 'gateways',\n  id: ({\n    id\n  }) => id,\n  type: 'replace',\n  data: createGenericGateWayDataFromVariables\n};\nexport const useUpdateGenericGatewayMutation = () => useUpdateGatewayMutation(UPDATE_GENERIC_GATEWAY_MUTATION);","import { useUpdateGatewayMutation } from './useUpdateGatewayMutation.js';\nexport const UPDATE_SMPP_GATEWAY_MUTATION = {\n  resource: 'gateways',\n  id: ({\n    id\n  }) => id,\n  type: 'update',\n  data: ({\n    name,\n    systemId,\n    host,\n    systemType,\n    numberPlanIndicator,\n    typeOfNumber,\n    bindType,\n    port,\n    password,\n    compressed\n  }) => ({\n    type: 'smpp',\n    name,\n    systemId,\n    host,\n    systemType,\n    numberPlanIndicator,\n    typeOfNumber,\n    bindType,\n    port,\n    password,\n    compressed\n  })\n};\nexport const useUpdateSMPPGatewayMutation = () => useUpdateGatewayMutation(UPDATE_SMPP_GATEWAY_MUTATION);","import { NoticeBox, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport React, { useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport i18n from '../../locales/index.js';\nimport { CancelDialog, PageHeadline, TemplateSidebarNavContent, dataTest } from '../../shared/index.js';\nimport { FIELD_PASSWORD_NAME } from '../FieldPassword/index.js';\nimport { FIELD_PASSWORD_CONFIRMATION_NAME } from '../FieldPasswordConfirmation/index.js';\nimport { FormBulkSMS } from '../FormBulkSMS/index.js';\nimport { FormClickatell } from '../FormClickatell/index.js';\nimport { FormGeneric } from '../FormGeneric/index.js';\nimport { FormSMPP } from '../FormSMPP/index.js';\nimport { gatewayTypes } from '../InputSingleSelectGatewayType/index.js';\nimport { useReadGatewayQuery } from './useReadGatewayQuery.js';\nimport { useUpdateBulkSMSGatewayMutation } from './useUpdateBulkSMSGatewayMutation.js';\nimport { useUpdateClickatellGatewayMutation } from './useUpdateClickatellGatewayMutation.js';\nimport { useUpdateGenericGatewayMutation } from './useUpdateGenericGatewayMutation.js';\nimport { useUpdateSMPPGatewayMutation } from './useUpdateSMPPGatewayMutation.js';\nimport styles from './ViewSmsGatewayEdit.module.css';\nconst {\n  GENERIC_FORM,\n  BULK_SMS_FORM,\n  CLICKATELL_FORM,\n  SMPP_FORM\n} = gatewayTypes;\nexport const GATEWAY_CONFIG_FORM_EDIT_PATH_STATIC = '/sms-gateway/edit';\nexport const GATEWAY_CONFIG_FORM_EDIT_PATH = `${GATEWAY_CONFIG_FORM_EDIT_PATH_STATIC}/:id`;\n\nconst getFormComponent = gatewayType => {\n  if (gatewayType === GENERIC_FORM) {\n    return FormGeneric;\n  }\n\n  if (gatewayType === BULK_SMS_FORM) {\n    return FormBulkSMS;\n  }\n\n  if (gatewayType === CLICKATELL_FORM) {\n    return FormClickatell;\n  }\n\n  if (gatewayType === SMPP_FORM) {\n    return FormSMPP;\n  }\n\n  throw new Error(`The gateway type does not exist, got \"${gatewayType}\"`);\n};\n\nconst getInitialValues = gateway => {\n  if (gateway.type === BULK_SMS_FORM) {\n    return { ...gateway,\n      [FIELD_PASSWORD_CONFIRMATION_NAME]: gateway[FIELD_PASSWORD_NAME]\n    };\n  }\n\n  return gateway;\n};\n\nexport const ViewSmsGatewayEdit = () => {\n  var _data$gateway;\n\n  const history = useHistory();\n  const {\n    id\n  } = useParams();\n  const [showCancelDialog, setShowCancelDialog] = useState(false);\n  const {\n    loading,\n    error: loadError,\n    data: jsonData\n  } = useReadGatewayQuery(id);\n  const [saveGenericGateway, {\n    error: saveGenericGatewayError\n  }] = useUpdateGenericGatewayMutation();\n  const [saveBulkSMSGateway, {\n    error: saveBulkSMSGatewayError\n  }] = useUpdateBulkSMSGatewayMutation();\n  const [saveClickatellGateway, {\n    error: saveClickatellGatewayError\n  }] = useUpdateClickatellGatewayMutation();\n  const [saveSMPPGateway, {\n    error: saveSMPPGatewayError\n  }] = useUpdateSMPPGatewayMutation();\n  const saveError = saveGenericGatewayError || saveBulkSMSGatewayError || saveClickatellGatewayError || saveSMPPGatewayError;\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(TemplateSidebarNavContent, null, /*#__PURE__*/React.createElement(PageHeadline, null, i18n.t('Edit')), /*#__PURE__*/React.createElement(CenteredContent, null, /*#__PURE__*/React.createElement(CircularLoader, null)));\n  }\n\n  if (loadError) {\n    const msg = i18n.t('Something went wrong whilst loading gateways');\n    return /*#__PURE__*/React.createElement(TemplateSidebarNavContent, null, /*#__PURE__*/React.createElement(PageHeadline, null, i18n.t('Edit')), /*#__PURE__*/React.createElement(NoticeBox, {\n      error: true,\n      title: msg\n    }, loadError.message));\n  }\n\n  const data =\n  /**\n   * @TODO:\n   *   * The response does not contain the right content type header\n   *     -> https://jira.dhis2.org/browse/DHIS2-9252\n   */\n  jsonData && typeof jsonData.gateway === 'string' ? {\n    gateway: JSON.parse(jsonData.gateway)\n  } : jsonData;\n  const gatewayType = data === null || data === void 0 ? void 0 : (_data$gateway = data.gateway) === null || _data$gateway === void 0 ? void 0 : _data$gateway.type;\n\n  const onSubmit = async formValues => {\n    const values = { ...formValues,\n      id: data.gateway.uid\n    };\n\n    try {\n      if (values.type === GENERIC_FORM) {\n        await saveGenericGateway(values);\n      }\n\n      if (values.type === BULK_SMS_FORM) {\n        await saveBulkSMSGateway(values);\n      }\n\n      if (values.type === CLICKATELL_FORM) {\n        await saveClickatellGateway(values);\n      }\n\n      if (values.type === SMPP_FORM) {\n        await saveSMPPGateway(values);\n      }\n\n      history.push('/sms-gateway');\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n\n  const FormComponent = getFormComponent(gatewayType);\n  const initialValues = gatewayType && getInitialValues(data.gateway);\n  return /*#__PURE__*/React.createElement(TemplateSidebarNavContent, null, /*#__PURE__*/React.createElement(\"div\", {\n    \"data-test\": dataTest('smsgateway-viewsmsgatewayedit'),\n    className: styles.container\n  }, /*#__PURE__*/React.createElement(PageHeadline, null, i18n.t('Edit gateway')), gatewayType ? /*#__PURE__*/React.createElement(\"div\", {\n    \"data-test\": dataTest('smsgateway-viewsmsgatewayedit-formcontainer'),\n    \"data-gateway-id\": data.gateway.uid\n  }, saveError && /*#__PURE__*/React.createElement(NoticeBox, {\n    error: true,\n    title: i18n.t('Something went wrong whilst saving gateways')\n  }, saveError.message), /*#__PURE__*/React.createElement(FormComponent, {\n    initialValues: initialValues,\n    onSubmit: onSubmit,\n    onCancelClick: pristine => pristine ? history.push('/sms-gateway') : setShowCancelDialog(true)\n  })) : /*#__PURE__*/React.createElement(NoticeBox, {\n    error: true,\n    title: i18n.t('Gateway not found')\n  }, i18n.t('The requested gateway could not be loaded')), showCancelDialog && /*#__PURE__*/React.createElement(CancelDialog, {\n    onConfirmCancel: () => history.push('/sms-gateway'),\n    onAbortCancel: () => setShowCancelDialog(false)\n  })));\n};","import i18n from '../../locales/index.js';\n/**\n * @param {string} type\n * @returns {string}\n */\n\nexport const getTypeLabelByType = type => {\n  if (type === 'bulksms') {\n    return i18n.t('BulkSMS');\n  }\n\n  if (type === 'clickatell') {\n    return i18n.t('Clickatell');\n  }\n\n  if (type === 'http' || !type) {\n    return i18n.t('Generic');\n  }\n\n  return type;\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { Button, ButtonStrip, Checkbox, Table, TableHead, TableBody, TableRowHead, TableCellHead, TableRow, TableCell } from '@dhis2/ui';\nimport React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport i18n from '../../locales/index.js';\nimport { dataTest } from '../../shared/index.js';\nimport styles from './GatewaysTable.module.css';\nimport { getTypeLabelByType } from './getTypeLabelByType.js';\nexport const GatewaysTable = ({\n  allGatewaysChecked,\n  checkedGateways,\n  gateways,\n  onGatewayToggle,\n  onToggleAll,\n  onMakeDefaultClick\n}) => {\n  const history = useHistory();\n  return /*#__PURE__*/React.createElement(Table, {\n    dataTest: dataTest('smsgateway-stable')\n  }, /*#__PURE__*/React.createElement(TableHead, null, /*#__PURE__*/React.createElement(TableRowHead, null, /*#__PURE__*/React.createElement(TableCellHead, {\n    dataTest: dataTest('smsgateway-table-checkall')\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    onChange: onToggleAll,\n    checked: allGatewaysChecked\n  })), /*#__PURE__*/React.createElement(TableCellHead, null, i18n.t('Name')), /*#__PURE__*/React.createElement(TableCellHead, null, i18n.t('Type')), /*#__PURE__*/React.createElement(TableCellHead, null), /*#__PURE__*/React.createElement(TableCellHead, null))), /*#__PURE__*/React.createElement(TableBody, null, gateways.map(gateway => /*#__PURE__*/React.createElement(TableRow, {\n    key: gateway.uid,\n    dataTest: dataTest('smsgateway-table-row')\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    className: styles.checkboxCell,\n    dataTest: dataTest('smsgateway-table-checkbox')\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    value: gateway.uid,\n    onChange: () => onGatewayToggle(gateway.uid),\n    checked: checkedGateways.includes(gateway.uid),\n    dataTest: dataTest('smsgateway-table-id')\n  })), /*#__PURE__*/React.createElement(TableCell, {\n    dataTest: dataTest('smsgateway-table-name')\n  }, gateway.name), /*#__PURE__*/React.createElement(TableCell, {\n    className: styles.typeCell,\n    dataTest: dataTest('smsgateway-table-type')\n  }, getTypeLabelByType(gateway.type)), /*#__PURE__*/React.createElement(TableCell, {\n    className: styles.defaultCell\n  }, !gateway.isDefault ? /*#__PURE__*/React.createElement(Button, {\n    dataTest: dataTest('smsgateway-table-makedefault'),\n    onClick: () => onMakeDefaultClick(gateway.uid),\n    className: styles.makeDefaultButton\n  }, i18n.t('Make default')) : /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.isDefaultText,\n    \"data-test\": dataTest('smsgateway-table-isdefault')\n  }, i18n.t('Default gateway'))), /*#__PURE__*/React.createElement(TableCell, {\n    dataTest: dataTest('smsgateway-table-actions'),\n    className: styles.editCell\n  }, /*#__PURE__*/React.createElement(ButtonStrip, {\n    className: styles.rowActions\n  }, /*#__PURE__*/React.createElement(Button, {\n    dataTest: dataTest('smsgateway-table-edit'),\n    onClick: () => {\n      history.push(`sms-gateway/${gateway.uid}`);\n    }\n  }, i18n.t('Edit'))))))));\n};\nGatewaysTable.propTypes = {\n  checkedGateways: PropTypes.arrayOf(PropTypes.string).isRequired,\n  gateways: PropTypes.arrayOf(PropTypes.shape({\n    isDefault: PropTypes.bool.isRequired,\n    name: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n    uid: PropTypes.string.isRequired\n  })).isRequired,\n  onGatewayToggle: PropTypes.func.isRequired,\n  onMakeDefaultClick: PropTypes.func.isRequired,\n  onToggleAll: PropTypes.func.isRequired,\n  allGatewaysChecked: PropTypes.bool\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { CircularLoader } from '@dhis2/ui';\nimport React from 'react';\nimport { dataTest } from '../../shared/index.js';\nimport { GatewaysTable } from './GatewaysTable.js';\nimport styles from './List.module.css';\nexport const List = ({\n  checkedGateways,\n  gateways,\n  setCheckedGateways,\n  onMakeDefaultClick,\n  processing\n}) => {\n  const allGatewaysChecked = checkedGateways.length === gateways.length;\n\n  const toggleGateway = id => {\n    if (checkedGateways.includes(id)) {\n      const index = checkedGateways.findIndex(curId => curId === id);\n      const newCheckedGateways = index === 0 ? checkedGateways.slice(1) : [...checkedGateways.slice(0, index), ...checkedGateways.slice(index + 1)];\n      setCheckedGateways(newCheckedGateways);\n    } else {\n      setCheckedGateways([...checkedGateways, id]);\n    }\n  };\n\n  const toggleAll = () => {\n    if (!allGatewaysChecked) {\n      const allGatewayIds = gateways.map(({\n        uid\n      }) => uid);\n      setCheckedGateways(allGatewayIds);\n    } else {\n      setCheckedGateways([]);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    \"data-test\": dataTest('smsgateway-viewsmsgatewaylist-list')\n  }, processing && /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.processingMessage\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.loadingContainer\n  }, /*#__PURE__*/React.createElement(CircularLoader, null))), /*#__PURE__*/React.createElement(GatewaysTable, {\n    allGatewaysChecked: allGatewaysChecked,\n    gateways: gateways,\n    checkedGateways: checkedGateways,\n    onGatewayToggle: toggleGateway,\n    onMakeDefaultClick: onMakeDefaultClick,\n    onToggleAll: toggleAll\n  }));\n};\nList.propTypes = {\n  checkedGateways: PropTypes.arrayOf(PropTypes.string).isRequired,\n  gateways: PropTypes.arrayOf(PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n    uid: PropTypes.string.isRequired,\n    isDefault: PropTypes.bool\n  })).isRequired,\n  setCheckedGateways: PropTypes.func.isRequired,\n  onMakeDefaultClick: PropTypes.func.isRequired,\n  processing: PropTypes.bool\n};","import { useDataEngine } from '@dhis2/app-runtime';\nimport { useState } from 'react';\nexport const DELETE_GATEWAY_MUTATION = {\n  resource: 'gateways',\n  type: 'delete',\n  id: ({\n    id\n  }) => id\n};\n\nconst idToMutationRequestFactory = engine => id => {\n  const variables = {\n    id\n  };\n  return engine.mutate(DELETE_GATEWAY_MUTATION, {\n    variables\n  });\n};\n\nexport const useDeleteGatewaysMutation = () => {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const engine = useDataEngine();\n  const idToMutationRequest = idToMutationRequestFactory(engine);\n\n  const onStart = () => setLoading(true);\n\n  const onDone = response => {\n    setLoading(false);\n    return response;\n  };\n\n  const onError = error => {\n    setError(error);\n    setLoading(false);\n  };\n\n  const mutate = ({\n    ids\n  }) => {\n    onStart();\n    return Promise.all(ids.map(idToMutationRequest)).then(onDone).catch(onError);\n  };\n\n  return [mutate, {\n    loading,\n    error\n  }];\n};","import { useDataQuery } from '@dhis2/app-runtime';\n/**\n * @TODO:\n *   * The endpoint requires a `.json`, ignores \"Accept\" header\n *     -> https://jira.dhis2.org/browse/DHIS2-9250\n *   * The \"fields\" param does not work\n *     -> https://jira.dhis2.org/browse/DHIS2-9241\n *   * id field is not present, only uid\n *     -> https://jira.dhis2.org/browse/DHIS2-9249\n */\n\nexport const GATEWAYS_QUERY = {\n  gateways: {\n    resource: 'gateways.json',\n    params: ({\n      fields,\n      filter\n    }) => {\n      const params = {};\n\n      if (fields) {\n        params.fields = fields;\n      }\n\n      if (filter) {\n        params.filter = filter;\n      }\n\n      return params;\n    }\n  }\n};\n/**\n * @param {string[]} [ids]\n * @return {Object}\n */\n\nexport const useReadGatewaysQuery = ids => {\n  var _parsedData$gateways;\n\n  /*\n   * @TODO(filtering): Currently the `id:in:[...]` doesn't work\n   *   -> https://jira.dhis2.org/browse/DHIS2-9259\n   *\n   * This is because filtering doesn't work right now\n   * So there's no need for sending any variables\n   */\n  const filter = `id:in:[${ids === null || ids === void 0 ? void 0 : ids.join(',')}]`;\n  const variables = false && ids ? {\n    filter\n  } : {}; // eslint-disable-line no-constant-condition\n\n  const {\n    data: jsonData,\n    ...rest\n  } = useDataQuery(GATEWAYS_QUERY, {\n    variables\n  });\n  const parsedData =\n  /**\n   * @TODO:\n   *   Create Jira issue for:\n   *   The response does not contain the right content type header\n   */\n  jsonData && typeof jsonData.gateways === 'string' ? {\n    gateways: JSON.parse(jsonData.gateways)\n  } : jsonData;\n  const data = ids && parsedData !== null && parsedData !== void 0 && (_parsedData$gateways = parsedData.gateways) !== null && _parsedData$gateways !== void 0 && _parsedData$gateways.gateways ? {\n    gateways: {\n      gateways: parsedData.gateways.gateways.filter(({\n        uid\n      }) => ids.includes(uid))\n    }\n  } : parsedData;\n  return {\n    data,\n    ...rest\n  };\n};","import { useDataMutation } from '@dhis2/app-runtime';\nexport const SET_DEFAULT_GATEWAY_MUTATION = {\n  resource: 'gateways/default',\n  type: 'replace',\n  id: ({\n    id\n  }) => id\n};\nexport const useSetDefaultGatewayMutation = () => useDataMutation(SET_DEFAULT_GATEWAY_MUTATION);","import { NoticeBox, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport i18n from '../../locales/index.js';\nimport { ListActions, PageHeadline, DeleteConfirmationDialog, Paragraph, TemplateSidebarNavContent, dataTest } from '../../shared/index.js';\nimport { List } from './List.js';\nimport { useDeleteGatewaysMutation } from './useDeleteGatewaysMutation.js';\nimport { useReadGatewaysQuery } from './useReadGatewaysQuery.js';\nimport { useSetDefaultGatewayMutation } from './useSetDefaultGatewayMutation.js';\nimport styles from './ViewSmsGatewayList.module.css';\nexport const GATEWAY_CONFIG_LIST_PATH = '/sms-gateway';\nexport const GATEWAY_CONFIG_LIST_LABEL = 'Gateway configuration';\nexport const ViewSmsGatewayList = () => {\n  var _data$gateways, _data$gateways$gatewa;\n\n  const history = useHistory();\n\n  const onAddGatewayClick = () => history.push('/sms-gateway/new');\n\n  const [checkedGateways, setCheckedGateways] = useState([]);\n  const [showDeleteDialog, setShowDeleteDialog] = useState(false);\n  const {\n    loading: loadingReadGateways,\n    error: errorReadGateways,\n    data,\n    refetch: refetchReadGateways\n  } = useReadGatewaysQuery();\n  const [deleteCheckedGateways, {\n    loading: loadingDelete,\n    error: errorDelete\n  }] = useDeleteGatewaysMutation();\n  const [makeGatewayDefault, {\n    loading: loadingSetDefault,\n    error: errorSetDefault\n  }] = useSetDefaultGatewayMutation();\n\n  const onDeleteClick = () => {\n    const variables = {\n      ids: checkedGateways\n    };\n    deleteCheckedGateways(variables).then(refetchReadGateways);\n    setShowDeleteDialog(false);\n  };\n\n  const onMakeDefaultClick = id => {\n    const variables = {\n      id\n    };\n    makeGatewayDefault(variables).then(refetchReadGateways);\n  };\n\n  const loading = loadingReadGateways || loadingDelete || loadingSetDefault;\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(TemplateSidebarNavContent, null, /*#__PURE__*/React.createElement(PageHeadline, null, GATEWAY_CONFIG_LIST_LABEL), /*#__PURE__*/React.createElement(CenteredContent, null, /*#__PURE__*/React.createElement(CircularLoader, null)));\n  }\n\n  const error = errorReadGateways || errorDelete || errorSetDefault;\n\n  if (error) {\n    const msg = i18n.t('Something went wrong whilst performing the requested operation');\n    return /*#__PURE__*/React.createElement(TemplateSidebarNavContent, null, /*#__PURE__*/React.createElement(PageHeadline, null, GATEWAY_CONFIG_LIST_LABEL), /*#__PURE__*/React.createElement(NoticeBox, {\n      error: true,\n      title: msg\n    }, error.message));\n  }\n\n  const hasGateways = !!(data !== null && data !== void 0 && (_data$gateways = data.gateways) !== null && _data$gateways !== void 0 && (_data$gateways$gatewa = _data$gateways.gateways) !== null && _data$gateways$gatewa !== void 0 && _data$gateways$gatewa.length);\n  return /*#__PURE__*/React.createElement(TemplateSidebarNavContent, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    \"data-test\": dataTest('smsgateway-viewsmsgatewaylist')\n  }, /*#__PURE__*/React.createElement(PageHeadline, null, GATEWAY_CONFIG_LIST_LABEL), /*#__PURE__*/React.createElement(Paragraph, null, i18n.t('An SMS gateway lets a DHIS2 instance send and receive SMS messages. Different gateway types can be added and configured below. At least one gateway is needed to send and receive SMS messages. Load balancing will use all gateways if there are multiple available. Read about gateway configuration in the DHIS2 documentation.')), /*#__PURE__*/React.createElement(ListActions, {\n    addLabel: i18n.t('Add gateway'),\n    deleteLabel: i18n.t('Delete selected'),\n    dataTest: \"smsgateway-viewsmsgatewaylist\",\n    onAddClick: onAddGatewayClick,\n    onDeleteClick: () => setShowDeleteDialog(true),\n    disableAdd: loadingDelete,\n    disableDelete: !checkedGateways.length || loadingDelete\n  }), hasGateways ? /*#__PURE__*/React.createElement(List, {\n    processing: loading,\n    checkedGateways: checkedGateways,\n    setCheckedGateways: setCheckedGateways,\n    gateways: data.gateways.gateways,\n    onMakeDefaultClick: onMakeDefaultClick\n  }) : /*#__PURE__*/React.createElement(NoticeBox, {\n    info: true,\n    title: i18n.t('No gateways found')\n  }, i18n.t(\"It looks like there aren't any configured gateways, or they couldn't be loaded.\")), showDeleteDialog && /*#__PURE__*/React.createElement(DeleteConfirmationDialog, {\n    onCancelClick: () => setShowDeleteDialog(false),\n    onDeleteClick: onDeleteClick\n  }, i18n.t('Are you sure you want to delete the selected gateways?'))));\n};","import i18n from '@dhis2/d2-i18n';\nexport const translations = {\n  ALL: i18n.t('All'),\n  FAILED: i18n.t('Failed'),\n  INCOMING: i18n.t('Incoming'),\n  PROCESSED: i18n.t('Processed'),\n  PROCESSING: i18n.t('Processing'),\n  SENT: i18n.t('Sent'),\n  UNHANDLED: i18n.t('Unhandled')\n};","import i18n from '@dhis2/d2-i18n';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { Button, SingleSelectField, SingleSelectOption, InputField } from '@dhis2/ui';\nimport React from 'react';\nimport { dataTest } from '../../shared/index.js';\nimport { translations } from '../translations/index.js';\nimport styles from './Filter.module.css'; // From https://github.com/dhis2/dhis2-core/blob/ea76fa86409613c9766d4508d65c88ac55c413c3/dhis-2/dhis-api/src/main/java/org/hisp/dhis/sms/incoming/SmsMessageStatus.java\n\nconst STATUS_FILTER_OPTIONS = ['ALL', 'FAILED', 'INCOMING', 'PROCESSED', 'PROCESSING', 'SENT', 'UNHANDLED'].map(status => ({\n  value: status,\n  label: translations[status]\n}));\nexport const Filter = ({\n  status,\n  setStatus,\n  phoneNumber,\n  setPhoneNumber,\n  onReset\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  \"data-test\": dataTest('smsinbound-filter'),\n  className: styles.container\n}, /*#__PURE__*/React.createElement(\"div\", {\n  className: styles.inputStrip\n}, /*#__PURE__*/React.createElement(SingleSelectField, {\n  label: i18n.t('Filter by status'),\n  inputWidth: \"200px\",\n  onChange: ({\n    selected\n  }) => setStatus(selected),\n  selected: status,\n  dataTest: dataTest('smsinbound-statusfilter')\n}, STATUS_FILTER_OPTIONS.map(({\n  label,\n  value\n}) => /*#__PURE__*/React.createElement(SingleSelectOption, {\n  key: label,\n  label: label,\n  value: value\n}))), /*#__PURE__*/React.createElement(InputField, {\n  label: i18n.t('Filter by phone number'),\n  inputWidth: \"250px\",\n  value: phoneNumber,\n  onChange: ({\n    value\n  }) => setPhoneNumber(value),\n  dataTest: \"phone-number-filter\"\n}), /*#__PURE__*/React.createElement(Button, {\n  large: true,\n  onClick: onReset,\n  dataTest: \"reset-filter-btn\"\n}, i18n.t('Reset filter'))));\nFilter.propTypes = {\n  phoneNumber: PropTypes.string.isRequired,\n  setPhoneNumber: PropTypes.func.isRequired,\n  setStatus: PropTypes.func.isRequired,\n  status: PropTypes.string.isRequired,\n  onReset: PropTypes.func.isRequired\n};","import i18n from '@dhis2/d2-i18n';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { TableCell } from '@dhis2/ui';\nimport React from 'react';\nimport { Date, Time, SmsTable } from '../../shared/index.js';\nimport { translations } from '../translations/index.js';\nimport styles from './ReceivedSmsTable.module.css';\nexport const ReceivedSmsTable = ({\n  messages,\n  pager,\n  selectedIds,\n  setSelectedIds\n}) => /*#__PURE__*/React.createElement(SmsTable, {\n  messages: messages,\n  pager: pager,\n  selectedIds: selectedIds,\n  setSelectedIds: setSelectedIds,\n  columns: [i18n.t('Message'), i18n.t('Phone number'), i18n.t('Status'), i18n.t('Sender'), i18n.t('Received')],\n  rowRenderFn: message => {\n    var _message$user, _message$user$userCre;\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(TableCell, null, message.text), /*#__PURE__*/React.createElement(TableCell, null, /*#__PURE__*/React.createElement(\"span\", {\n      className: styles.originator\n    }, message.originator)), /*#__PURE__*/React.createElement(TableCell, null, translations[message.smsstatus]), /*#__PURE__*/React.createElement(TableCell, null, ((_message$user = message.user) === null || _message$user === void 0 ? void 0 : (_message$user$userCre = _message$user.userCredentials) === null || _message$user$userCre === void 0 ? void 0 : _message$user$userCre.username) || i18n.t('Unknown')), /*#__PURE__*/React.createElement(TableCell, null, /*#__PURE__*/React.createElement(Date, {\n      date: message.receiveddate\n    }), ', ', /*#__PURE__*/React.createElement(\"br\", null), /*#__PURE__*/React.createElement(Time, {\n      time: message.receiveddate\n    })));\n  }\n});\nReceivedSmsTable.propTypes = {\n  messages: PropTypes.arrayOf(PropTypes.object).isRequired,\n  pager: PropTypes.PropTypes.object.isRequired,\n  selectedIds: PropTypes.arrayOf(PropTypes.string).isRequired,\n  setSelectedIds: PropTypes.func.isRequired\n};","import { useDataMutation } from '@dhis2/app-runtime';\nconst DELETE_INBOUND_SMS_MUTATION = {\n  resource: 'sms/inbound',\n  type: 'delete',\n  params: ({\n    ids\n  }) => ({\n    ids\n  })\n};\nexport const useDeleteMutation = ({\n  onComplete,\n  onError\n}) => useDataMutation(DELETE_INBOUND_SMS_MUTATION, {\n  onComplete,\n  onError\n});","import { useDataQuery } from '@dhis2/app-runtime';\nimport { Button, NoticeBox, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport React, { useState, useEffect, useContext } from 'react';\nimport { useDebouncedCallback } from 'use-debounce';\nimport i18n from '../../locales/index.js';\nimport { AlertContext, DeleteConfirmationDialog, PageHeadline, useQueryParams, TemplateSidebarNavContent, dataTest } from '../../shared/index.js';\nimport { Filter } from '../Filter/index.js';\nimport { ReceivedSmsTable } from '../ReceivedSmsTable/index.js';\nimport { useDeleteMutation } from './useDeleteMutation.js';\nimport styles from './ViewReceivedSmsList.module.css';\nexport const RECEIVED_SMS_LIST_LABEL = i18n.t('Received');\nexport const RECEIVED_SMS_LIST_PATH = '/received';\n\nconst parseParams = ({\n  page,\n  pageSize,\n  phoneNumber,\n  status\n}) => {\n  const params = {\n    page,\n    pageSize,\n    fields: ['id', 'text', 'originator', 'smsstatus', 'user[userCredentials[username]]', // sender\n    'receiveddate'],\n    order: 'receiveddate:desc'\n  };\n  const filters = [];\n\n  if (phoneNumber) {\n    filters.push(`originator:ilike:${phoneNumber}`);\n  }\n\n  if (status && status !== 'ALL') {\n    filters.push(`smsstatus:eq:${status}`);\n  }\n\n  if (filters.length > 0) {\n    params.filter = filters;\n  }\n\n  return params;\n};\n\nconst query = {\n  inboundSms: {\n    resource: 'sms/inbound',\n    params: parseParams\n  }\n};\nexport const ViewReceivedSmsList = () => {\n  var _data$inboundSms;\n\n  const [showDeleteConfirmationDialog, setShowDeleteConfirmationDialog] = useState(false);\n  const [selectedIds, setSelectedIds] = useState([]);\n  const [queryParams, setQueryParams] = useQueryParams();\n  const {\n    page,\n    pageSize,\n    phoneNumber,\n    status\n  } = queryParams;\n\n  const setPhoneNumber = phoneNumber => {\n    setQueryParams({\n      phoneNumber,\n      page: 1\n    }, 'replaceIn');\n  };\n\n  const setStatus = status => {\n    setQueryParams({\n      status,\n      page: 1\n    });\n  };\n\n  const handleFilterReset = () => {\n    setQueryParams({\n      phoneNumber: undefined,\n      status: undefined,\n      page: 1\n    });\n  };\n\n  const {\n    called,\n    loading,\n    error,\n    data,\n    refetch\n  } = useDataQuery(query, {\n    lazy: true\n  });\n  const {\n    callback: debouncedRefetch\n  } = useDebouncedCallback(refetch, 500, {\n    leading: true\n  });\n  useEffect(() => {\n    debouncedRefetch({\n      page,\n      pageSize,\n      phoneNumber,\n      status\n    });\n  }, [page, pageSize, phoneNumber, status]);\n  const {\n    addAlert\n  } = useContext(AlertContext);\n  const [deleteSms] = useDeleteMutation({\n    onComplete: () => {\n      setShowDeleteConfirmationDialog(false);\n      refetch();\n      setSelectedIds([]);\n    },\n    onError: error => addAlert({\n      type: 'critical',\n      message: error.message\n    })\n  });\n\n  const onDeleteClick = () => deleteSms({\n    ids: selectedIds\n  });\n\n  const onCancelClick = () => setShowDeleteConfirmationDialog(false);\n\n  if (error) {\n    const msg = i18n.t('Something went wrong whilst loading received SMSes');\n    return /*#__PURE__*/React.createElement(TemplateSidebarNavContent, null, /*#__PURE__*/React.createElement(PageHeadline, null, RECEIVED_SMS_LIST_LABEL), /*#__PURE__*/React.createElement(NoticeBox, {\n      error: true,\n      title: msg\n    }, error.message));\n  }\n\n  const messages = (data === null || data === void 0 ? void 0 : (_data$inboundSms = data.inboundSms) === null || _data$inboundSms === void 0 ? void 0 : _data$inboundSms.inboundsmss) || [];\n  return /*#__PURE__*/React.createElement(TemplateSidebarNavContent, null, /*#__PURE__*/React.createElement(\"div\", {\n    \"data-test\": dataTest('smsinbound-viewreceivedsmslist'),\n    className: styles.container\n  }, /*#__PURE__*/React.createElement(PageHeadline, null, RECEIVED_SMS_LIST_LABEL), /*#__PURE__*/React.createElement(\"header\", {\n    className: styles.header\n  }, /*#__PURE__*/React.createElement(Filter, {\n    status: status,\n    setStatus: setStatus,\n    phoneNumber: phoneNumber,\n    setPhoneNumber: setPhoneNumber,\n    onReset: handleFilterReset\n  }), /*#__PURE__*/React.createElement(Button, {\n    destructive: true,\n    onClick: () => setShowDeleteConfirmationDialog(true),\n    disabled: selectedIds.length === 0\n  }, i18n.t('Delete selected')), showDeleteConfirmationDialog && /*#__PURE__*/React.createElement(DeleteConfirmationDialog, {\n    onCancelClick: onCancelClick,\n    onDeleteClick: onDeleteClick\n  }, i18n.t('Are you sure you want to delete the selected sms?'))), loading || !called ? /*#__PURE__*/React.createElement(CenteredContent, null, /*#__PURE__*/React.createElement(CircularLoader, null)) : /*#__PURE__*/React.createElement(ReceivedSmsTable, {\n    messages: messages,\n    pager: data.inboundSms.pager,\n    selectedIds: selectedIds,\n    setSelectedIds: setSelectedIds\n  })));\n};","import i18n from '@dhis2/d2-i18n';\nexport const translations = {\n  ALL: i18n.t('All'),\n  DELIVERED: i18n.t('Delivered'),\n  ERROR: i18n.t('Error'),\n  FAILED: i18n.t('Failed'),\n  OUTBOUND: i18n.t('Outbound'),\n  PENDING: i18n.t('Pending'),\n  SCHEDULED: i18n.t('Scheduled'),\n  SENT: i18n.t('Sent')\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { TableCell } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales/index.js';\nimport { SmsTable, Date, Time } from '../../shared/index.js';\nimport { translations } from '../translations/index.js';\nimport styles from './SentSmsTable.module.css';\nexport const SentSmsTable = ({\n  messages,\n  pager,\n  selectedIds,\n  setSelectedIds\n}) => /*#__PURE__*/React.createElement(SmsTable, {\n  messages: messages,\n  pager: pager,\n  selectedIds: selectedIds,\n  setSelectedIds: setSelectedIds,\n  columns: [i18n.t('Message'), i18n.t('Recipients'), i18n.t('Status'), i18n.t('Sent')],\n  rowRenderFn: message => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(TableCell, null, message.message), /*#__PURE__*/React.createElement(TableCell, null, (message.recipients || []).map((recipient, index, all) => /*#__PURE__*/React.createElement(\"span\", {\n    key: recipient + index,\n    className: styles.recipient\n  }, recipient, index !== all.length - 1 && ', '))), /*#__PURE__*/React.createElement(TableCell, null, translations[message.status]), /*#__PURE__*/React.createElement(TableCell, null, /*#__PURE__*/React.createElement(Date, {\n    date: message.date\n  }), ', ', /*#__PURE__*/React.createElement(\"br\", null), /*#__PURE__*/React.createElement(Time, {\n    time: message.date\n  })))\n});\nSentSmsTable.propTypes = {\n  messages: PropTypes.arrayOf(PropTypes.object).isRequired,\n  pager: PropTypes.PropTypes.object.isRequired,\n  selectedIds: PropTypes.arrayOf(PropTypes.string).isRequired,\n  setSelectedIds: PropTypes.func.isRequired\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { SingleSelectField, SingleSelectOption } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales/index.js';\nimport { dataTest } from '../../shared/index.js';\nimport { translations } from '../translations/index.js';\nimport styles from './StatusFilter.module.css'; // From https://github.com/dhis2/dhis2-core/blob/ea76fa86409613c9766d4508d65c88ac55c413c3/dhis-2/dhis-api/src/main/java/org/hisp/dhis/sms/outbound/OutboundSmsStatus.java\n\nconst STATUS_FILTER_OPTIONS = ['ALL', 'DELIVERED', 'ERROR', 'FAILED', 'OUTBOUND', 'PENDING', 'SCHEDULED', 'SENT'].map(status => ({\n  value: status,\n  label: translations[status]\n}));\nexport const StatusFilter = ({\n  status,\n  setStatus\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  className: styles.container\n}, /*#__PURE__*/React.createElement(SingleSelectField, {\n  label: i18n.t('Filter by status'),\n  inputWidth: \"200px\",\n  onChange: ({\n    selected\n  }) => setStatus(selected),\n  selected: status,\n  dataTest: dataTest('smsoutbound-statusfilter')\n}, STATUS_FILTER_OPTIONS.map(({\n  label,\n  value\n}) => /*#__PURE__*/React.createElement(SingleSelectOption, {\n  key: label,\n  label: label,\n  value: value\n}))));\nStatusFilter.propTypes = {\n  setStatus: PropTypes.func.isRequired,\n  status: PropTypes.string.isRequired\n};","import { useDataMutation } from '@dhis2/app-runtime';\nconst DELETE_OUTBOUND_SMS_MUTATION = {\n  resource: 'sms/outbound',\n  type: 'delete',\n  params: ({\n    ids\n  }) => ({\n    ids\n  })\n};\nexport const useDeleteMutation = ({\n  onComplete,\n  onError\n}) => useDataMutation(DELETE_OUTBOUND_SMS_MUTATION, {\n  onComplete,\n  onError\n});","import { useDataQuery } from '@dhis2/app-runtime';\nimport { Button, NoticeBox, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport React, { useState, useEffect, useContext } from 'react';\nimport i18n from '../../locales/index.js';\nimport { DeleteConfirmationDialog, PageHeadline, AlertContext, TemplateSidebarNavContent, useQueryParams } from '../../shared/index.js';\nimport { SentSmsTable } from '../SentSmsTable/index.js';\nimport { StatusFilter } from '../StatusFilter/index.js';\nimport { useDeleteMutation } from './useDeleteMutation.js';\nimport styles from './ViewSentSmsList.module.css';\nexport const SENT_SMS_LIST_LABEL = i18n.t('Sent');\nexport const SENT_SMS_LIST_PATH = '/sent';\n\nconst parseParams = ({\n  status,\n  page,\n  pageSize\n}) => {\n  const params = {\n    pageSize,\n    page,\n    fields: ['id', 'message', 'status', 'date', 'recipients'],\n    order: 'date:desc'\n  };\n\n  if (status && status !== 'ALL') {\n    params.filter = `status:eq:${status}`;\n  }\n\n  return params;\n};\n\nconst query = {\n  sms: {\n    resource: 'sms/outbound',\n    params: parseParams\n  }\n};\nexport const ViewSentSmsList = () => {\n  var _data$sms;\n\n  const [showDeleteConfirmationDialog, setShowDeleteConfirmationDialog] = useState(false);\n  const [selectedIds, setSelectedIds] = useState([]);\n  const [queryParams, setQueryParams] = useQueryParams();\n  const {\n    page,\n    pageSize,\n    status\n  } = queryParams;\n\n  const setStatus = status => {\n    setQueryParams({\n      status,\n      page: 1\n    });\n  };\n\n  const {\n    called,\n    loading,\n    error,\n    data,\n    refetch\n  } = useDataQuery(query, {\n    lazy: true\n  });\n  useEffect(() => {\n    refetch({\n      page,\n      pageSize,\n      status\n    });\n  }, [page, pageSize, status]);\n  const {\n    addAlert\n  } = useContext(AlertContext);\n  const [deleteSms] = useDeleteMutation({\n    onComplete: () => {\n      setShowDeleteConfirmationDialog(false);\n      refetch();\n      setSelectedIds([]);\n    },\n    onError: error => addAlert({\n      type: 'critical',\n      message: error.message\n    })\n  });\n\n  const onDeleteClick = () => deleteSms({\n    ids: selectedIds\n  });\n\n  const onCancelClick = () => setShowDeleteConfirmationDialog(false);\n\n  if (error) {\n    const msg = i18n.t('Something went wrong whilst loading sent SMSes');\n    return /*#__PURE__*/React.createElement(TemplateSidebarNavContent, null, /*#__PURE__*/React.createElement(PageHeadline, null, SENT_SMS_LIST_LABEL), /*#__PURE__*/React.createElement(NoticeBox, {\n      error: true,\n      title: msg\n    }, error.message));\n  }\n\n  const messages = (data === null || data === void 0 ? void 0 : (_data$sms = data.sms) === null || _data$sms === void 0 ? void 0 : _data$sms.outboundsmss) || [];\n  return /*#__PURE__*/React.createElement(TemplateSidebarNavContent, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container\n  }, /*#__PURE__*/React.createElement(PageHeadline, null, SENT_SMS_LIST_LABEL), /*#__PURE__*/React.createElement(\"header\", {\n    className: styles.header\n  }, /*#__PURE__*/React.createElement(StatusFilter, {\n    status: status,\n    setStatus: setStatus\n  }), /*#__PURE__*/React.createElement(Button, {\n    destructive: true,\n    onClick: () => setShowDeleteConfirmationDialog(true),\n    disabled: selectedIds.length === 0\n  }, i18n.t('Delete selected')), showDeleteConfirmationDialog && /*#__PURE__*/React.createElement(DeleteConfirmationDialog, {\n    onCancelClick: onCancelClick,\n    onDeleteClick: onDeleteClick\n  }, i18n.t('Are you sure you want to delete the selected sms?'))), loading || !called ? /*#__PURE__*/React.createElement(CenteredContent, null, /*#__PURE__*/React.createElement(CircularLoader, null)) : /*#__PURE__*/React.createElement(SentSmsTable, {\n    messages: messages,\n    pager: data.sms.pager,\n    selectedIds: selectedIds,\n    setSelectedIds: setSelectedIds\n  })));\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { Card } from '@dhis2/ui';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport s from './HomeCard.module.css';\nexport const HomeCard = ({\n  titleText,\n  bodyText,\n  linkText,\n  to\n}) => {\n  return /*#__PURE__*/React.createElement(Card, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: s.container\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: s.title\n  }, titleText), /*#__PURE__*/React.createElement(\"p\", {\n    className: s.body\n  }, bodyText), /*#__PURE__*/React.createElement(\"div\", {\n    className: s.linkContainer\n  }, /*#__PURE__*/React.createElement(Link, {\n    className: s.link,\n    to: to\n  }, linkText))));\n};\nHomeCard.propTypes = {\n  bodyText: PropTypes.string.isRequired,\n  linkText: PropTypes.string.isRequired,\n  titleText: PropTypes.string.isRequired,\n  to: PropTypes.string.isRequired\n};","import React from 'react';\nimport i18n from '../../locales/index.js';\nimport { PageHeadline, TemplateSidebarNavContent, dataTest } from '../../shared/index.js';\nimport { HomeCard } from '../HomeCard/index.js';\nimport s from './ViewOverview.module.css';\nexport const ViewOverview = () => {\n  return /*#__PURE__*/React.createElement(TemplateSidebarNavContent, null, /*#__PURE__*/React.createElement(\"div\", {\n    \"data-test\": dataTest('views-home'),\n    className: s.container\n  }, /*#__PURE__*/React.createElement(PageHeadline, null, i18n.t('Overview: SMS Configuration', {\n    nsSeparator: '>'\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    className: s.explanation\n  }, i18n.t('Configure settings for SMS sending, receiving, data reporting, alerts, registration and more.')), /*#__PURE__*/React.createElement(\"div\", {\n    className: s.grid\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: s.gridItem\n  }, /*#__PURE__*/React.createElement(HomeCard, {\n    titleText: i18n.t('Gateway Configuration'),\n    bodyText: i18n.t('Add and manage gateways for sending and receiving SMS messages in DHIS2.'),\n    linkText: i18n.t('Set up gateways'),\n    to: \"/sms-gateway\"\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: s.gridItem\n  }, /*#__PURE__*/React.createElement(HomeCard, {\n    titleText: i18n.t('SMS Commands'),\n    bodyText: i18n.t('Add and manage commands triggered by incoming SMS messages to register, alert and more.'),\n    linkText: i18n.t('Set up SMS commands'),\n    to: \"/sms-command\"\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: s.gridItem\n  }, /*#__PURE__*/React.createElement(HomeCard, {\n    titleText: i18n.t('Sent SMS messages'),\n    bodyText: i18n.t('Open logs of all SMS messages sent from DHIS2.'),\n    linkText: i18n.t('View all sent SMS'),\n    to: \"/sent\"\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: s.gridItem\n  }, /*#__PURE__*/React.createElement(HomeCard, {\n    titleText: i18n.t('Received SMS messages'),\n    bodyText: i18n.t('Open logs of all SMS messages received by DHIS2.'),\n    linkText: i18n.t('View all received SMS'),\n    to: \"/received\"\n  })))));\n};","import { App } from './App.js';\nexport default App;","import './locales/index.js';\nimport React from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport { AppWrapper } from './AppWrapper.js';\nimport { ViewSmsCommandAdd, ViewSmsCommandList, ViewSmsCommandEdit } from './sms-command/index.js';\nimport { ViewSmsGatewayAdd, ViewSmsGatewayList, ViewSmsGatewayEdit } from './sms-gateway/index.js';\nimport { ViewReceivedSmsList } from './sms-inbound/index.js';\nimport { ViewSentSmsList } from './sms-outbound/index.js';\nimport { ViewOverview } from './sms-overview/index.js';\nexport const App = () => /*#__PURE__*/React.createElement(AppWrapper, null, /*#__PURE__*/React.createElement(Switch, null, /*#__PURE__*/React.createElement(Route, {\n  exact: true,\n  path: \"/\",\n  component: ViewOverview\n}), /*#__PURE__*/React.createElement(Route, {\n  exact: true,\n  path: \"/sms-gateway\",\n  component: ViewSmsGatewayList\n}), /*#__PURE__*/React.createElement(Route, {\n  path: \"/sms-gateway/new\",\n  component: ViewSmsGatewayAdd\n}), /*#__PURE__*/React.createElement(Route, {\n  path: \"/sms-gateway/:id\",\n  component: ViewSmsGatewayEdit\n}), /*#__PURE__*/React.createElement(Route, {\n  exact: true,\n  path: \"/sms-command\",\n  component: ViewSmsCommandList\n}), /*#__PURE__*/React.createElement(Route, {\n  path: \"/sms-command/new\",\n  component: ViewSmsCommandAdd\n}), /*#__PURE__*/React.createElement(Route, {\n  path: \"/sms-command/:id\",\n  component: ViewSmsCommandEdit\n}), /*#__PURE__*/React.createElement(Route, {\n  path: \"/sent\",\n  component: ViewSentSmsList\n}),\n/* View received sms */\n'', /*#__PURE__*/React.createElement(Route, {\n  path: \"/received\",\n  component: ViewReceivedSmsList\n}),\n/* Handle 404 */\n'', /*#__PURE__*/React.createElement(Redirect, {\n  from: \"*\",\n  to: \"/\"\n})));"],"sourceRoot":""}